

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 04 15:27:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F25K50 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	smallconst
   108  000800                     __psmallconst:
   109                           	opt callstack 0
   110  000800  00                 	db	0
   111  000801                     __powers_:
   112                           	opt callstack 0
   113  000801  0000               	dw	0
   114  000803  3F80               	dw	16256
   115  000805  0000               	dw	0
   116  000807  4120               	dw	16672
   117  000809  0000               	dw	0
   118  00080B  42C8               	dw	17096
   119  00080D  0000               	dw	0
   120  00080F  447A               	dw	17530
   121  000811  4000               	dw	16384
   122  000813  461C               	dw	17948
   123  000815  5000               	dw	20480
   124  000817  47C3               	dw	18371
   125  000819  2400               	dw	9216
   126  00081B  4974               	dw	18804
   127  00081D  9680               	dw	38528
   128  00081F  4B18               	dw	19224
   129  000821  BC20               	dw	48160
   130  000823  4CBE               	dw	19646
   131  000825  6B28               	dw	27432
   132  000827  4E6E               	dw	20078
   133  000829  02F9               	dw	761
   134  00082B  5015               	dw	20501
   135  00082D  78EC               	dw	30956
   136  00082F  60AD               	dw	24749
   137  000831  F2CA               	dw	62154
   138  000833  7149               	dw	29001
   139  000835                     __end_of__powers_:
   140                           	opt callstack 0
   141  000835                     __npowers_:
   142                           	opt callstack 0
   143  000835  0000               	dw	0
   144  000837  3F80               	dw	16256
   145  000839  CCCD               	dw	52429
   146  00083B  3DCC               	dw	15820
   147  00083D  D70A               	dw	55050
   148  00083F  3C23               	dw	15395
   149  000841  126F               	dw	4719
   150  000843  3A83               	dw	14979
   151  000845  B717               	dw	46871
   152  000847  38D1               	dw	14545
   153  000849  C5AC               	dw	50604
   154  00084B  3727               	dw	14119
   155  00084D  37BD               	dw	14269
   156  00084F  3586               	dw	13702
   157  000851  BF95               	dw	49045
   158  000853  33D6               	dw	13270
   159  000855  CC77               	dw	52343
   160  000857  322B               	dw	12843
   161  000859  705F               	dw	28767
   162  00085B  3089               	dw	12425
   163  00085D  E6FF               	dw	59135
   164  00085F  2EDB               	dw	11995
   165  000861  E508               	dw	58632
   166  000863  1E3C               	dw	7740
   167  000865  4260               	dw	16992
   168  000867  0DA2               	dw	3490
   169  000869                     __end_of__npowers_:
   170                           	opt callstack 0
   171  000869                     _dpowers:
   172                           	opt callstack 0
   173  000869  0001               	dw	1
   174  00086B  0000               	dw	0
   175  00086D  000A               	dw	10
   176  00086F  0000               	dw	0
   177  000871  0064               	dw	100
   178  000873  0000               	dw	0
   179  000875  03E8               	dw	1000
   180  000877  0000               	dw	0
   181  000879  2710               	dw	10000
   182  00087B  0000               	dw	0
   183  00087D  86A0               	dw	34464
   184  00087F  0001               	dw	1
   185  000881  4240               	dw	16960
   186  000883  000F               	dw	15
   187  000885  9680               	dw	38528
   188  000887  0098               	dw	152
   189  000889  E100               	dw	57600
   190  00088B  05F5               	dw	1525
   191  00088D  CA00               	dw	51712
   192  00088F  3B9A               	dw	15258
   193  000891                     __end_of_dpowers:
   194                           	opt callstack 0
   195  000891                     STR_2:
   196  000891  46                 	db	70	;'F'
   197  000892  69                 	db	105	;'i'
   198  000893  72                 	db	114	;'r'
   199  000894  73                 	db	115	;'s'
   200  000895  74                 	db	116	;'t'
   201  000896  4D                 	db	77	;'M'
   202  000897  51                 	db	81	;'Q'
   203  000898  36                 	db	54	;'6'
   204  000899  5F                 	db	95	;'_'
   205  00089A  25                 	db	37
   206  00089B  2E                 	db	46
   207  00089C  32                 	db	50	;'2'
   208  00089D  66                 	db	102	;'f'
   209  00089E  00                 	db	0
   210  00089F  00                 	db	0
   211  0008A0                     STR_5:
   212  0008A0  46                 	db	70	;'F'
   213  0008A1  6F                 	db	111	;'o'
   214  0008A2  75                 	db	117	;'u'
   215  0008A3  72                 	db	114	;'r'
   216  0008A4  74                 	db	116	;'t'
   217  0008A5  68                 	db	104	;'h'
   218  0008A6  64                 	db	100	;'d'
   219  0008A7  4D                 	db	77	;'M'
   220  0008A8  51                 	db	81	;'Q'
   221  0008A9  5F                 	db	95	;'_'
   222  0008AA  25                 	db	37
   223  0008AB  64                 	db	100	;'d'
   224  0008AC  00                 	db	0
   225  0008AD  00                 	db	0
   226  0008AE                     STR_3:
   227  0008AE  53                 	db	83	;'S'
   228  0008AF  65                 	db	101	;'e'
   229  0008B0  63                 	db	99	;'c'
   230  0008B1  6F                 	db	111	;'o'
   231  0008B2  6E                 	db	110	;'n'
   232  0008B3  64                 	db	100	;'d'
   233  0008B4  4D                 	db	77	;'M'
   234  0008B5  51                 	db	81	;'Q'
   235  0008B6  5F                 	db	95	;'_'
   236  0008B7  25                 	db	37
   237  0008B8  64                 	db	100	;'d'
   238  0008B9  00                 	db	0
   239  0008BA  00                 	db	0
   240  0008BB                     STR_4:
   241  0008BB  54                 	db	84	;'T'
   242  0008BC  68                 	db	104	;'h'
   243  0008BD  69                 	db	105	;'i'
   244  0008BE  72                 	db	114	;'r'
   245  0008BF  64                 	db	100	;'d'
   246  0008C0  4D                 	db	77	;'M'
   247  0008C1  51                 	db	81	;'Q'
   248  0008C2  5F                 	db	95	;'_'
   249  0008C3  25                 	db	37
   250  0008C4  64                 	db	100	;'d'
   251  0008C5  00                 	db	0
   252  0008C6  00                 	db	0
   253  0008C7                     STR_1:
   254  0008C7  48                 	db	72	;'H'
   255  0008C8  65                 	db	101	;'e'
   256  0008C9  79                 	db	121	;'y'
   257  0008CA  0D                 	db	13
   258  0008CB  0A                 	db	10
   259  0008CC  00                 	db	0
   260                           
   261                           ; #config settings
   262  0008CD  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	nvCOMRAM
   265  000056                     __pnvCOMRAM:
   266                           	opt callstack 0
   267  000056                     _timer0ReloadVal:
   268                           	opt callstack 0
   269  000056                     	ds	1
   270                           
   271                           	psect	nvBANK0
   272  0000D7                     __pnvBANK0:
   273                           	opt callstack 0
   274  0000D7                     _EUSART1_ErrorHandler:
   275                           	opt callstack 0
   276  0000D7                     	ds	2
   277  0000D9                     _EUSART1_OverrunErrorHandler:
   278                           	opt callstack 0
   279  0000D9                     	ds	2
   280  0000DB                     _EUSART1_FramingErrorHandler:
   281                           	opt callstack 0
   282  0000DB                     	ds	2
   283  0000DD                     _TMR0_InterruptHandler:
   284                           	opt callstack 0
   285  0000DD                     	ds	2
   286  0000DF                     _EUSART1_RxDefaultInterruptHandler:
   287                           	opt callstack 0
   288  0000DF                     	ds	2
   289  0000                     _ANSELA	set	3931
   290  0000                     _ANSELB	set	3932
   291  0000                     _ANSELC	set	3933
   292  0000                     _LATBbits	set	3978
   293  0000                     _TRISBbits	set	3987
   294  0000                     _PORTBbits	set	3969
   295  0000                     _CCPR2H	set	3985
   296  0000                     _CCPR2L	set	3984
   297  0000                     _CCP2CON	set	3991
   298  0000                     _T2CONbits	set	4026
   299  0000                     _T2CON	set	4026
   300  0000                     _TMR2	set	4028
   301  0000                     _PR2	set	4027
   302  0000                     _ADCON0bits	set	4034
   303  0000                     _ADRESH	set	4036
   304  0000                     _ADRESL	set	4035
   305  0000                     _ADCON2	set	4032
   306  0000                     _ADCON1	set	4033
   307  0000                     _ADCON0	set	4034
   308  0000                     _TXREG	set	4013
   309  0000                     _TXSTAbits	set	4012
   310  0000                     _RCREG	set	4014
   311  0000                     _RCREG1	set	4014
   312  0000                     _RCSTA1bits	set	4011
   313  0000                     _TXREG1	set	4013
   314  0000                     _TXSTA1bits	set	4012
   315  0000                     _SPBRGH1	set	4016
   316  0000                     _SPBRG1	set	4015
   317  0000                     _TXSTA1	set	4012
   318  0000                     _RCSTA1	set	4011
   319  0000                     _BAUDCON1	set	4024
   320  0000                     _PIR1bits	set	3998
   321  0000                     _PIE1bits	set	3997
   322  0000                     _RCONbits	set	4048
   323  0000                     _LATAbits	set	3977
   324  0000                     _T0CONbits	set	4053
   325  0000                     _T0CON	set	4053
   326  0000                     _TMR0L	set	4054
   327  0000                     _TMR0H	set	4055
   328  0000                     _INTCONbits	set	4082
   329  0000                     _INTCON2bits	set	4081
   330  0000                     _WPUB	set	3973
   331  0000                     _TRISC	set	3988
   332  0000                     _TRISB	set	3987
   333  0000                     _TRISA	set	3986
   334  0000                     _LATC	set	3979
   335  0000                     _LATB	set	3978
   336  0000                     _LATA	set	3977
   337  0000                     _ACTCON	set	4021
   338  0000                     _OSCTUNE	set	3995
   339  0000                     _OSCCON2	set	4050
   340  0000                     _OSCCON	set	4051
   341  0000                     _AN0	set	31744
   342  0000                     _TX1IF	set	31988
   343                           
   344                           	psect	cinit
   345  002DB4                     __pcinit:
   346                           	opt callstack 0
   347  002DB4                     start_initialization:
   348                           	opt callstack 0
   349  002DB4                     __initialization:
   350                           	opt callstack 0
   351                           
   352                           ; Clear objects allocated to BANK1 (50 bytes)
   353  002DB4  EE01  F000         	lfsr	0,__pbssBANK1
   354  002DB8  0E32               	movlw	50
   355  002DBA                     clear_0:
   356  002DBA  6AEE               	clrf	postinc0,c
   357  002DBC  06E8               	decf	wreg,f,c
   358  002DBE  E1FD               	bnz	clear_0
   359                           
   360                           ; Clear objects allocated to BANK0 (38 bytes)
   361  002DC0  EE00  F0B1         	lfsr	0,__pbssBANK0
   362  002DC4  0E26               	movlw	38
   363  002DC6                     clear_1:
   364  002DC6  6AEE               	clrf	postinc0,c
   365  002DC8  06E8               	decf	wreg,f,c
   366  002DCA  E1FD               	bnz	clear_1
   367                           
   368                           ; Clear objects allocated to COMRAM (7 bytes)
   369  002DCC  EE00  F04F         	lfsr	0,__pbssCOMRAM
   370  002DD0  0E07               	movlw	7
   371  002DD2                     clear_2:
   372  002DD2  6AEE               	clrf	postinc0,c
   373  002DD4  06E8               	decf	wreg,f,c
   374  002DD6  E1FD               	bnz	clear_2
   375  002DD8                     end_of_initialization:
   376                           	opt callstack 0
   377  002DD8                     __end_of__initialization:
   378                           	opt callstack 0
   379  002DD8  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   380  002DDA  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   381  002DDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   382  002DDE  6EF8               	movwf	tblptru,c
   383  002DE0  0100               	movlb	0
   384  002DE2  EF66  F010         	goto	_main	;jump to C main() function
   385                           
   386                           	psect	bssCOMRAM
   387  00004F                     __pbssCOMRAM:
   388                           	opt callstack 0
   389  00004F                     _eusart1RxLastError:
   390                           	opt callstack 0
   391  00004F                     	ds	1
   392  000050                     _eusart1RxCount:
   393                           	opt callstack 0
   394  000050                     	ds	1
   395  000051                     _eusart1RxTail:
   396                           	opt callstack 0
   397  000051                     	ds	1
   398  000052                     _eusart1RxHead:
   399                           	opt callstack 0
   400  000052                     	ds	1
   401  000053                     _flag5:
   402                           	opt callstack 0
   403  000053                     	ds	1
   404  000054                     _numWirte:
   405                           	opt callstack 0
   406  000054                     	ds	1
   407  000055                     _writeEus:
   408                           	opt callstack 0
   409  000055                     	ds	1
   410                           
   411                           	psect	bssBANK0
   412  0000B1                     __pbssBANK0:
   413                           	opt callstack 0
   414  0000B1                     _eusart1RxStatusBuffer:
   415                           	opt callstack 0
   416  0000B1                     	ds	8
   417  0000B9                     _eusart1RxBuffer:
   418                           	opt callstack 0
   419  0000B9                     	ds	8
   420  0000C1                     _data:
   421                           	opt callstack 0
   422  0000C1                     	ds	8
   423  0000C9                     _lux:
   424                           	opt callstack 0
   425  0000C9                     	ds	4
   426  0000CD                     _dutyValue:
   427                           	opt callstack 0
   428  0000CD                     	ds	2
   429  0000CF                     _flag4:
   430                           	opt callstack 0
   431  0000CF                     	ds	1
   432  0000D0                     _flag3:
   433                           	opt callstack 0
   434  0000D0                     	ds	1
   435  0000D1                     _flag2:
   436                           	opt callstack 0
   437  0000D1                     	ds	1
   438  0000D2                     _flag1:
   439                           	opt callstack 0
   440  0000D2                     	ds	1
   441  0000D3                     _Vout:
   442                           	opt callstack 0
   443  0000D3                     	ds	4
   444                           
   445                           	psect	bssBANK1
   446  000100                     __pbssBANK1:
   447                           	opt callstack 0
   448  000100                     _msg1:
   449                           	opt callstack 0
   450  000100                     	ds	50
   451                           
   452                           	psect	cstackBANK0
   453  000060                     __pcstackBANK0:
   454                           	opt callstack 0
   455  000060                     ??___flmul:
   456                           
   457                           ; 1 bytes @ 0x0
   458  000060                     	ds	4
   459  000064                     ___flmul@sign:
   460                           	opt callstack 0
   461                           
   462                           ; 1 bytes @ 0x4
   463  000064                     	ds	1
   464  000065                     ___flmul@aexp:
   465                           	opt callstack 0
   466                           
   467                           ; 1 bytes @ 0x5
   468  000065                     	ds	1
   469  000066                     ___flmul@grs:
   470                           	opt callstack 0
   471                           
   472                           ; 4 bytes @ 0x6
   473  000066                     	ds	4
   474  00006A                     ___flmul@bexp:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0xA
   478  00006A                     	ds	1
   479  00006B                     ___flmul@prod:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0xB
   483  00006B                     	ds	4
   484  00006F                     ___flmul@temp:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0xF
   488  00006F                     	ds	2
   489  000071                     ?_fround:
   490                           	opt callstack 0
   491  000071                     ?_scale:
   492                           	opt callstack 0
   493                           
   494                           ; 4 bytes @ 0x11
   495  000071                     	ds	4
   496  000075                     _fround$2171:
   497                           	opt callstack 0
   498  000075                     _scale$2172:
   499                           	opt callstack 0
   500                           
   501                           ; 4 bytes @ 0x15
   502  000075                     	ds	4
   503  000079                     scale@scl:
   504                           	opt callstack 0
   505  000079                     _fround$2170:
   506                           	opt callstack 0
   507                           
   508                           ; 4 bytes @ 0x19
   509  000079                     	ds	1
   510  00007A                     ?___fltol:
   511                           	opt callstack 0
   512  00007A                     ___fltol@f1:
   513                           	opt callstack 0
   514                           
   515                           ; 4 bytes @ 0x1A
   516  00007A                     	ds	3
   517  00007D                     fround@prec:
   518                           	opt callstack 0
   519                           
   520                           ; 1 bytes @ 0x1D
   521  00007D                     	ds	1
   522  00007E                     ??___fltol:
   523                           
   524                           ; 1 bytes @ 0x1E
   525  00007E                     	ds	4
   526  000082                     ___fltol@sign1:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x22
   530  000082                     	ds	1
   531  000083                     ___fltol@exp1:
   532                           	opt callstack 0
   533                           
   534                           ; 1 bytes @ 0x23
   535  000083                     	ds	1
   536  000084                     ?_sprintf:
   537                           	opt callstack 0
   538  000084                     sprintf@sp:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x24
   542  000084                     	ds	2
   543  000086                     sprintf@f:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x26
   547  000086                     	ds	6
   548  00008C                     ??_sprintf:
   549                           
   550                           ; 1 bytes @ 0x2C
   551  00008C                     	ds	3
   552  00008F                     _sprintf$2173:
   553                           	opt callstack 0
   554                           
   555                           ; 4 bytes @ 0x2F
   556  00008F                     	ds	4
   557  000093                     sprintf@ap:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x33
   561  000093                     	ds	2
   562  000095                     sprintf@flag:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x35
   566  000095                     	ds	2
   567  000097                     sprintf@eexp:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x37
   571  000097                     	ds	2
   572  000099                     sprintf@tmpval:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0x39
   576  000099                     	ds	4
   577  00009D                     sprintf@val:
   578                           	opt callstack 0
   579                           
   580                           ; 4 bytes @ 0x3D
   581  00009D                     	ds	4
   582  0000A1                     sprintf@fval:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x41
   586  0000A1                     	ds	4
   587  0000A5                     sprintf@prec:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0x45
   591  0000A5                     	ds	2
   592  0000A7                     sprintf@c:
   593                           	opt callstack 0
   594                           
   595                           ; 1 bytes @ 0x47
   596  0000A7                     	ds	4
   597  0000AB                     _main$2169:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0x4B
   601  0000AB                     	ds	4
   602  0000AF                     main@RH_Integral:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0x4F
   606  0000AF                     	ds	1
   607  0000B0                     main@T_Integral:
   608                           	opt callstack 0
   609                           
   610                           ; 1 bytes @ 0x50
   611  0000B0                     	ds	1
   612                           
   613                           	psect	cstackCOMRAM
   614  000001                     __pcstackCOMRAM:
   615                           	opt callstack 0
   616  000001                     ??_TMR0_ISR:
   617  000001                     PWM2_LoadDutyValue@dutyValue:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x0
   621  000001                     	ds	2
   622  000003                     ??_PWM2_LoadDutyValue:
   623                           
   624                           ; 1 bytes @ 0x2
   625  000003                     	ds	2
   626  000005                     ??_INTERRUPT_InterruptManager:
   627                           
   628                           ; 1 bytes @ 0x4
   629  000005                     	ds	4
   630  000009                     ??_DHT11_Start:
   631  000009                     ??_isdigit:
   632  000009                     ??_ADC_SelectChannel:
   633  000009                     ?_ADC_GetConversionResult:
   634                           	opt callstack 0
   635  000009                     ?___wmul:
   636                           	opt callstack 0
   637  000009                     ?___awmod:
   638                           	opt callstack 0
   639  000009                     ?___lwmod:
   640                           	opt callstack 0
   641  000009                     ?__tdiv_to_l_:
   642                           	opt callstack 0
   643  000009                     ?__div_to_l_:
   644                           	opt callstack 0
   645  000009                     ?___lldiv:
   646                           	opt callstack 0
   647  000009                     ?___flneg:
   648                           	opt callstack 0
   649  000009                     UARTSendChar@c:
   650                           	opt callstack 0
   651  000009                     DHT11_ReadData@i:
   652                           	opt callstack 0
   653  000009                     TMR0_SetInterruptHandler@InterruptHandler:
   654                           	opt callstack 0
   655  000009                     EUSART1_SetFramingErrorHandler@interruptHandler:
   656                           	opt callstack 0
   657  000009                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   658                           	opt callstack 0
   659  000009                     EUSART1_SetErrorHandler@interruptHandler:
   660                           	opt callstack 0
   661  000009                     EUSART1_SetRxInterruptHandler@interruptHandler:
   662                           	opt callstack 0
   663  000009                     ___wmul@multiplier:
   664                           	opt callstack 0
   665  000009                     ___awmod@dividend:
   666                           	opt callstack 0
   667  000009                     ___lwmod@dividend:
   668                           	opt callstack 0
   669  000009                     ___lldiv@dividend:
   670                           	opt callstack 0
   671  000009                     __div_to_l_@f1:
   672                           	opt callstack 0
   673  000009                     ___fleq@ff1:
   674                           	opt callstack 0
   675  000009                     ___flge@ff1:
   676                           	opt callstack 0
   677  000009                     ___flneg@f1:
   678                           	opt callstack 0
   679  000009                     __tdiv_to_l_@f1:
   680                           	opt callstack 0
   681                           
   682                           ; 4 bytes @ 0x8
   683  000009                     	ds	1
   684  00000A                     ADC_SelectChannel@channel:
   685                           	opt callstack 0
   686  00000A                     DHT11_ReadData@data:
   687                           	opt callstack 0
   688  00000A                     _isdigit$1902:
   689                           	opt callstack 0
   690  00000A                     UARTSendString@str:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x9
   694  00000A                     	ds	1
   695  00000B                     ??_ADC_GetConversionResult:
   696  00000B                     isdigit@c:
   697                           	opt callstack 0
   698  00000B                     ___wmul@multiplicand:
   699                           	opt callstack 0
   700  00000B                     ___awmod@divisor:
   701                           	opt callstack 0
   702  00000B                     ___lwmod@divisor:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0xA
   706  00000B                     	ds	1
   707  00000C                     UARTSendString@max_length:
   708                           	opt callstack 0
   709                           
   710                           ; 1 bytes @ 0xB
   711  00000C                     	ds	1
   712  00000D                     ??_UARTSendString:
   713  00000D                     ?___xxtofl:
   714                           	opt callstack 0
   715  00000D                     ___awmod@counter:
   716                           	opt callstack 0
   717  00000D                     ___lwmod@counter:
   718                           	opt callstack 0
   719  00000D                     ___wmul@product:
   720                           	opt callstack 0
   721  00000D                     ___lldiv@divisor:
   722                           	opt callstack 0
   723  00000D                     __div_to_l_@f2:
   724                           	opt callstack 0
   725  00000D                     ___fleq@ff2:
   726                           	opt callstack 0
   727  00000D                     ___flge@ff2:
   728                           	opt callstack 0
   729  00000D                     __tdiv_to_l_@f2:
   730                           	opt callstack 0
   731  00000D                     ___xxtofl@val:
   732                           	opt callstack 0
   733                           
   734                           ; 4 bytes @ 0xC
   735  00000D                     	ds	1
   736  00000E                     ?___lwdiv:
   737                           	opt callstack 0
   738  00000E                     ___awmod@sign:
   739                           	opt callstack 0
   740  00000E                     ___lwdiv@dividend:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0xD
   744  00000E                     	ds	1
   745  00000F                     ?___awdiv:
   746                           	opt callstack 0
   747  00000F                     ___awdiv@dividend:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0xE
   751  00000F                     	ds	1
   752  000010                     UARTSendString@i:
   753                           	opt callstack 0
   754  000010                     ___lwdiv@divisor:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0xF
   758  000010                     	ds	1
   759  000011                     ??__tdiv_to_l_:
   760  000011                     ??___fleq:
   761  000011                     ??___flge:
   762  000011                     ??___xxtofl:
   763  000011                     ___awdiv@divisor:
   764                           	opt callstack 0
   765  000011                     ___lldiv@quotient:
   766                           	opt callstack 0
   767  000011                     __div_to_l_@quot:
   768                           	opt callstack 0
   769                           
   770                           ; 4 bytes @ 0x10
   771  000011                     	ds	1
   772  000012                     ___lwdiv@quotient:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x11
   776  000012                     	ds	1
   777  000013                     ___awdiv@counter:
   778                           	opt callstack 0
   779                           
   780                           ; 1 bytes @ 0x12
   781  000013                     	ds	1
   782  000014                     ___awdiv@sign:
   783                           	opt callstack 0
   784  000014                     ___lwdiv@counter:
   785                           	opt callstack 0
   786  000014                     __tdiv_to_l_@quot:
   787                           	opt callstack 0
   788                           
   789                           ; 4 bytes @ 0x13
   790  000014                     	ds	1
   791  000015                     ?___fladd:
   792                           	opt callstack 0
   793  000015                     ___lldiv@counter:
   794                           	opt callstack 0
   795  000015                     __div_to_l_@cntr:
   796                           	opt callstack 0
   797  000015                     ___xxtofl@sign:
   798                           	opt callstack 0
   799  000015                     ___awdiv@quotient:
   800                           	opt callstack 0
   801  000015                     ___fladd@b:
   802                           	opt callstack 0
   803                           
   804                           ; 4 bytes @ 0x14
   805  000015                     	ds	1
   806  000016                     ?___llmod:
   807                           	opt callstack 0
   808  000016                     __div_to_l_@exp1:
   809                           	opt callstack 0
   810  000016                     ___xxtofl@exp:
   811                           	opt callstack 0
   812  000016                     ___llmod@dividend:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x15
   816  000016                     	ds	1
   817  000017                     ___xxtofl@arg:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0x16
   821  000017                     	ds	1
   822  000018                     __tdiv_to_l_@cntr:
   823                           	opt callstack 0
   824                           
   825                           ; 1 bytes @ 0x17
   826  000018                     	ds	1
   827  000019                     __tdiv_to_l_@exp1:
   828                           	opt callstack 0
   829  000019                     ___fladd@a:
   830                           	opt callstack 0
   831                           
   832                           ; 4 bytes @ 0x18
   833  000019                     	ds	1
   834  00001A                     ___llmod@divisor:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0x19
   838  00001A                     	ds	3
   839  00001D                     ??___fladd:
   840                           
   841                           ; 1 bytes @ 0x1C
   842  00001D                     	ds	1
   843  00001E                     ___llmod@counter:
   844                           	opt callstack 0
   845                           
   846                           ; 1 bytes @ 0x1D
   847  00001E                     	ds	3
   848  000021                     ___fladd@signs:
   849                           	opt callstack 0
   850                           
   851                           ; 1 bytes @ 0x20
   852  000021                     	ds	1
   853  000022                     ___fladd@aexp:
   854                           	opt callstack 0
   855                           
   856                           ; 1 bytes @ 0x21
   857  000022                     	ds	1
   858  000023                     ___fladd@bexp:
   859                           	opt callstack 0
   860                           
   861                           ; 1 bytes @ 0x22
   862  000023                     	ds	1
   863  000024                     ___fladd@grs:
   864                           	opt callstack 0
   865                           
   866                           ; 1 bytes @ 0x23
   867  000024                     	ds	1
   868  000025                     ?___flsub:
   869                           	opt callstack 0
   870  000025                     ___flsub@b:
   871                           	opt callstack 0
   872                           
   873                           ; 4 bytes @ 0x24
   874  000025                     	ds	4
   875  000029                     ___flsub@a:
   876                           	opt callstack 0
   877                           
   878                           ; 4 bytes @ 0x28
   879  000029                     	ds	4
   880  00002D                     ?___fldiv:
   881                           	opt callstack 0
   882  00002D                     ___fldiv@b:
   883                           	opt callstack 0
   884                           
   885                           ; 4 bytes @ 0x2C
   886  00002D                     	ds	4
   887  000031                     ___fldiv@a:
   888                           	opt callstack 0
   889                           
   890                           ; 4 bytes @ 0x30
   891  000031                     	ds	4
   892  000035                     ??___fldiv:
   893                           
   894                           ; 1 bytes @ 0x34
   895  000035                     	ds	4
   896  000039                     ___fldiv@rem:
   897                           	opt callstack 0
   898                           
   899                           ; 4 bytes @ 0x38
   900  000039                     	ds	4
   901  00003D                     ___fldiv@sign:
   902                           	opt callstack 0
   903                           
   904                           ; 1 bytes @ 0x3C
   905  00003D                     	ds	1
   906  00003E                     ___fldiv@new_exp:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x3D
   910  00003E                     	ds	2
   911  000040                     ___fldiv@grs:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0x3F
   915  000040                     	ds	4
   916  000044                     ___fldiv@bexp:
   917                           	opt callstack 0
   918                           
   919                           ; 1 bytes @ 0x43
   920  000044                     	ds	1
   921  000045                     ___fldiv@aexp:
   922                           	opt callstack 0
   923                           
   924                           ; 1 bytes @ 0x44
   925  000045                     	ds	1
   926  000046                     ?___flmul:
   927                           	opt callstack 0
   928  000046                     ___flmul@b:
   929                           	opt callstack 0
   930                           
   931                           ; 4 bytes @ 0x45
   932  000046                     	ds	4
   933  00004A                     ___flmul@a:
   934                           	opt callstack 0
   935                           
   936                           ; 4 bytes @ 0x49
   937  00004A                     	ds	4
   938  00004E                     ??_main:
   939  00004E                     
   940                           ; 1 bytes @ 0x4D
   941  00004E                     	ds	1
   942                           
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 25 in file "main.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  value          10    0        unsigned char [10]
   953 ;;  T_Integral      1   80[BANK0 ] unsigned char 
   954 ;;  RH_Integral     1   79[BANK0 ] unsigned char 
   955 ;;  Checksum        1    0        unsigned char 
   956 ;;  T_Decimal       1    0        unsigned char 
   957 ;;  RH_Decimal      1    0        unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         0       0       0       0       0       0       0       0       0
   968 ;;      Locals:         0       9       0       0       0       0       0       0       0
   969 ;;      Temps:          1       0       0       0       0       0       0       0       0
   970 ;;      Totals:         1       9       0       0       0       0       0       0       0
   971 ;;Total ram usage:       10 bytes
   972 ;; Hardware stack levels required when called:    8
   973 ;; This function calls:
   974 ;;		_ADC_GetConversionResult
   975 ;;		_ADC_SelectChannel
   976 ;;		_ADC_StartConversion
   977 ;;		_DHT11_ReadData
   978 ;;		_DHT11_Start
   979 ;;		_SYSTEM_Initialize
   980 ;;		_UARTSendString
   981 ;;		___fldiv
   982 ;;		___flmul
   983 ;;		___flsub
   984 ;;		___xxtofl
   985 ;;		_sprintf
   986 ;; This function is called by:
   987 ;;		Startup code after reset
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text0
   992  0020CC                     __ptext0:
   993                           	opt callstack 0
   994  0020CC                     _main:
   995                           	opt callstack 23
   996                           
   997                           ;main.c: 26: SYSTEM_Initialize();
   998                           
   999                           ;incstack = 0
  1000  0020CC  EC63  F017         	call	_SYSTEM_Initialize	;wreg free
  1001                           
  1002                           ;main.c: 33: (INTCONbits.GIE = 1);
  1003  0020D0  8EF2               	bsf	4082,7,c	;volatile
  1004                           
  1005                           ;main.c: 39: (INTCONbits.PEIE = 1);
  1006  0020D2  8CF2               	bsf	4082,6,c	;volatile
  1007                           
  1008                           ;main.c: 43: UARTSendString("Hey\r\n", 32);
  1009  0020D4  0EC7               	movlw	low STR_1
  1010  0020D6  6E0A               	movwf	UARTSendString@str,c
  1011  0020D8  0E08               	movlw	high STR_1
  1012  0020DA  6E0B               	movwf	UARTSendString@str+1,c
  1013  0020DC  0E20               	movlw	32
  1014  0020DE  6E0C               	movwf	UARTSendString@max_length,c
  1015  0020E0  EC84  F014         	call	_UARTSendString	;wreg free
  1016  0020E4                     l4933:
  1017                           
  1018                           ;main.c: 48: if (flag1){
  1019  0020E4  0100               	movlb	0	; () banked
  1020  0020E6  51D2               	movf	_flag1& (0+255),w,b
  1021  0020E8  B4D8               	btfsc	status,2,c
  1022  0020EA  D0A2               	goto	l4951
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 49: ADC_SelectChannel(AN0);
  1026  0020EC  0E00               	movlw	0
  1027  0020EE  B080               	btfsc	3968,0,c	;volatile
  1028  0020F0  0E01               	movlw	1
  1029  0020F2  EC94  F017         	call	_ADC_SelectChannel
  1030                           
  1031                           ;main.c: 50: ADC_StartConversion();
  1032  0020F6  ECF6  F017         	call	_ADC_StartConversion	;wreg free
  1033                           
  1034                           ;main.c: 51: Vout= ADC_GetConversionResult()*0.00488;
  1035  0020FA  ECAB  F017         	call	_ADC_GetConversionResult	;wreg free
  1036  0020FE  C009  F00D         	movff	?_ADC_GetConversionResult,___xxtofl@val
  1037  002102  C00A  F00E         	movff	?_ADC_GetConversionResult+1,___xxtofl@val+1
  1038  002106  6A0F               	clrf	___xxtofl@val+2,c
  1039  002108  6A10               	clrf	___xxtofl@val+3,c
  1040  00210A  0E00               	movlw	0
  1041  00210C  EC82  F011         	call	___xxtofl
  1042  002110  C00D  F046         	movff	?___xxtofl,___flmul@b
  1043  002114  C00E  F047         	movff	?___xxtofl+1,___flmul@b+1
  1044  002118  C00F  F048         	movff	?___xxtofl+2,___flmul@b+2
  1045  00211C  C010  F049         	movff	?___xxtofl+3,___flmul@b+3
  1046  002120  0E68               	movlw	104
  1047  002122  6E4A               	movwf	___flmul@a,c
  1048  002124  0EE8               	movlw	232
  1049  002126  6E4B               	movwf	___flmul@a+1,c
  1050  002128  0E9F               	movlw	159
  1051  00212A  6E4C               	movwf	___flmul@a+2,c
  1052  00212C  0E3B               	movlw	59
  1053  00212E  6E4D               	movwf	___flmul@a+3,c
  1054  002130  ECAB  F00A         	call	___flmul	;wreg free
  1055  002134  C046  F0D3         	movff	?___flmul,_Vout	;volatile
  1056  002138  C047  F0D4         	movff	?___flmul+1,_Vout+1	;volatile
  1057  00213C  C048  F0D5         	movff	?___flmul+2,_Vout+2	;volatile
  1058  002140  C049  F0D6         	movff	?___flmul+3,_Vout+3	;volatile
  1059                           
  1060                           ;main.c: 52: lux =500/(10.0*((5-Vout)/Vout));
  1061  002144  0E00               	movlw	0
  1062  002146  6E4A               	movwf	___flmul@a,c
  1063  002148  0E00               	movlw	0
  1064  00214A  6E4B               	movwf	___flmul@a+1,c
  1065  00214C  0E20               	movlw	32
  1066  00214E  6E4C               	movwf	___flmul@a+2,c
  1067  002150  0E41               	movlw	65
  1068  002152  6E4D               	movwf	___flmul@a+3,c
  1069  002154  C0D3  F031         	movff	_Vout,___fldiv@a	;volatile
  1070  002158  C0D4  F032         	movff	_Vout+1,___fldiv@a+1	;volatile
  1071  00215C  C0D5  F033         	movff	_Vout+2,___fldiv@a+2	;volatile
  1072  002160  C0D6  F034         	movff	_Vout+3,___fldiv@a+3	;volatile
  1073  002164  C0D3  F029         	movff	_Vout,___flsub@a	;volatile
  1074  002168  C0D4  F02A         	movff	_Vout+1,___flsub@a+1	;volatile
  1075  00216C  C0D5  F02B         	movff	_Vout+2,___flsub@a+2	;volatile
  1076  002170  C0D6  F02C         	movff	_Vout+3,___flsub@a+3	;volatile
  1077  002174  0E00               	movlw	0
  1078  002176  6E25               	movwf	___flsub@b,c
  1079  002178  0E00               	movlw	0
  1080  00217A  6E26               	movwf	___flsub@b+1,c
  1081  00217C  0EA0               	movlw	160
  1082  00217E  6E27               	movwf	___flsub@b+2,c
  1083  002180  0E40               	movlw	64
  1084  002182  6E28               	movwf	___flsub@b+3,c
  1085  002184  EC7B  F016         	call	___flsub	;wreg free
  1086  002188  C025  F02D         	movff	?___flsub,___fldiv@b
  1087  00218C  C026  F02E         	movff	?___flsub+1,___fldiv@b+1
  1088  002190  C027  F02F         	movff	?___flsub+2,___fldiv@b+2
  1089  002194  C028  F030         	movff	?___flsub+3,___fldiv@b+3
  1090  002198  EC22  F00F         	call	___fldiv	;wreg free
  1091  00219C  C02D  F046         	movff	?___fldiv,___flmul@b
  1092  0021A0  C02E  F047         	movff	?___fldiv+1,___flmul@b+1
  1093  0021A4  C02F  F048         	movff	?___fldiv+2,___flmul@b+2
  1094  0021A8  C030  F049         	movff	?___fldiv+3,___flmul@b+3
  1095  0021AC  ECAB  F00A         	call	___flmul	;wreg free
  1096  0021B0  C046  F0AB         	movff	?___flmul,_main$2169
  1097  0021B4  C047  F0AC         	movff	?___flmul+1,_main$2169+1
  1098  0021B8  C048  F0AD         	movff	?___flmul+2,_main$2169+2
  1099  0021BC  C049  F0AE         	movff	?___flmul+3,_main$2169+3
  1100                           
  1101                           ;main.c: 52: lux =500/(10.0*((5-Vout)/Vout));
  1102  0021C0  0E00               	movlw	0
  1103  0021C2  6E2D               	movwf	___fldiv@b,c
  1104  0021C4  0E00               	movlw	0
  1105  0021C6  6E2E               	movwf	___fldiv@b+1,c
  1106  0021C8  0EFA               	movlw	250
  1107  0021CA  6E2F               	movwf	___fldiv@b+2,c
  1108  0021CC  0E43               	movlw	67
  1109  0021CE  6E30               	movwf	___fldiv@b+3,c
  1110  0021D0  C0AB  F031         	movff	_main$2169,___fldiv@a
  1111  0021D4  C0AC  F032         	movff	_main$2169+1,___fldiv@a+1
  1112  0021D8  C0AD  F033         	movff	_main$2169+2,___fldiv@a+2
  1113  0021DC  C0AE  F034         	movff	_main$2169+3,___fldiv@a+3
  1114  0021E0  EC22  F00F         	call	___fldiv	;wreg free
  1115  0021E4  C02D  F0C9         	movff	?___fldiv,_lux	;volatile
  1116  0021E8  C02E  F0CA         	movff	?___fldiv+1,_lux+1	;volatile
  1117  0021EC  C02F  F0CB         	movff	?___fldiv+2,_lux+2	;volatile
  1118  0021F0  C030  F0CC         	movff	?___fldiv+3,_lux+3	;volatile
  1119                           
  1120                           ;main.c: 53: sprintf(msg1,"FirstMQ6_%.2f\0",lux);
  1121  0021F4  0E00               	movlw	low _msg1
  1122  0021F6  0100               	movlb	0	; () banked
  1123  0021F8  6F84               	movwf	sprintf@sp& (0+255),b
  1124  0021FA  0E01               	movlw	high _msg1
  1125  0021FC  6F85               	movwf	(sprintf@sp+1)& (0+255),b
  1126  0021FE  0E91               	movlw	low STR_2
  1127  002200  6F86               	movwf	sprintf@f& (0+255),b
  1128  002202  0E08               	movlw	high STR_2
  1129  002204  6F87               	movwf	(sprintf@f+1)& (0+255),b
  1130  002206  C0C9  F088         	movff	_lux,?_sprintf+4	;volatile
  1131  00220A  C0CA  F089         	movff	_lux+1,?_sprintf+5	;volatile
  1132  00220E  C0CB  F08A         	movff	_lux+2,?_sprintf+6	;volatile
  1133  002212  C0CC  F08B         	movff	_lux+3,?_sprintf+7	;volatile
  1134  002216  EC67  F004         	call	_sprintf	;wreg free
  1135                           
  1136                           ;main.c: 54: UARTSendString(msg1,32);
  1137  00221A  0E00               	movlw	low _msg1
  1138  00221C  6E0A               	movwf	UARTSendString@str,c
  1139  00221E  0E01               	movlw	high _msg1
  1140  002220  6E0B               	movwf	UARTSendString@str+1,c
  1141  002222  0E20               	movlw	32
  1142  002224  6E0C               	movwf	UARTSendString@max_length,c
  1143  002226  EC84  F014         	call	_UARTSendString	;wreg free
  1144                           
  1145                           ;main.c: 55: flag1=0;
  1146  00222A  0E00               	movlw	0
  1147  00222C  0100               	movlb	0	; () banked
  1148  00222E  6FD2               	movwf	_flag1& (0+255),b
  1149  002230                     l4951:
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;main.c: 56: };main.c: 57: if (flag2){
  1153  002230  51D1               	movf	_flag2& (0+255),w,b
  1154  002232  B4D8               	btfsc	status,2,c
  1155  002234  D01F               	goto	l4959
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main.c: 58: sprintf(msg1,"SecondMQ_%d\0",PORTBbits.RB1);
  1159  002236  0E00               	movlw	low _msg1
  1160  002238  6F84               	movwf	sprintf@sp& (0+255),b
  1161  00223A  0E01               	movlw	high _msg1
  1162  00223C  6F85               	movwf	(sprintf@sp+1)& (0+255),b
  1163  00223E  0EAE               	movlw	low STR_3
  1164  002240  6F86               	movwf	sprintf@f& (0+255),b
  1165  002242  0E08               	movlw	high STR_3
  1166  002244  6F87               	movwf	(sprintf@f+1)& (0+255),b
  1167  002246  A281               	btfss	3969,1,c	;volatile
  1168  002248  D003               	goto	u5290
  1169  00224A  6A4E               	clrf	??_main& (0+255),c
  1170  00224C  2A4E               	incf	??_main& (0+255),f,c
  1171  00224E  D001               	goto	u5298
  1172  002250                     u5290:
  1173  002250  6A4E               	clrf	??_main& (0+255),c
  1174  002252                     u5298:
  1175  002252  504E               	movf	??_main,w,c
  1176  002254  0100               	movlb	0	; () banked
  1177  002256  6F88               	movwf	(?_sprintf+4)& (0+255),b
  1178  002258  6B89               	clrf	(?_sprintf+5)& (0+255),b
  1179  00225A  EC67  F004         	call	_sprintf	;wreg free
  1180                           
  1181                           ;main.c: 59: UARTSendString(msg1,32);
  1182  00225E  0E00               	movlw	low _msg1
  1183  002260  6E0A               	movwf	UARTSendString@str,c
  1184  002262  0E01               	movlw	high _msg1
  1185  002264  6E0B               	movwf	UARTSendString@str+1,c
  1186  002266  0E20               	movlw	32
  1187  002268  6E0C               	movwf	UARTSendString@max_length,c
  1188  00226A  EC84  F014         	call	_UARTSendString	;wreg free
  1189                           
  1190                           ;main.c: 60: flag2=0;
  1191  00226E  0E00               	movlw	0
  1192  002270  0100               	movlb	0	; () banked
  1193  002272  6FD1               	movwf	_flag2& (0+255),b
  1194  002274                     l4959:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 61: };main.c: 62: if (flag3) {
  1198  002274  51D0               	movf	_flag3& (0+255),w,b
  1199  002276  B4D8               	btfsc	status,2,c
  1200  002278  D029               	goto	l4979
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 63: DHT11_Start();
  1204  00227A  EC39  F017         	call	_DHT11_Start	;wreg free
  1205                           
  1206                           ;main.c: 65: RH_Integral = DHT11_ReadData();
  1207  00227E  ECBF  F016         	call	_DHT11_ReadData	;wreg free
  1208  002282  0100               	movlb	0	; () banked
  1209  002284  6FAF               	movwf	main@RH_Integral& (0+255),b
  1210                           
  1211                           ; BSR set to: 0
  1212  002286  ECBF  F016         	call	_DHT11_ReadData	;wreg free
  1213                           
  1214                           ;main.c: 67: T_Integral = DHT11_ReadData();
  1215  00228A  ECBF  F016         	call	_DHT11_ReadData	;wreg free
  1216  00228E  0100               	movlb	0	; () banked
  1217  002290  6FB0               	movwf	main@T_Integral& (0+255),b
  1218                           
  1219                           ; BSR set to: 0
  1220  002292  ECBF  F016         	call	_DHT11_ReadData	;wreg free
  1221  002296  ECBF  F016         	call	_DHT11_ReadData	;wreg free
  1222                           
  1223                           ;main.c: 70: sprintf(msg1, "ThirdMQ_%d\0",T_Integral );
  1224  00229A  0E00               	movlw	low _msg1
  1225  00229C  0100               	movlb	0	; () banked
  1226  00229E  6F84               	movwf	sprintf@sp& (0+255),b
  1227  0022A0  0E01               	movlw	high _msg1
  1228  0022A2  6F85               	movwf	(sprintf@sp+1)& (0+255),b
  1229  0022A4  0EBB               	movlw	low STR_4
  1230  0022A6  6F86               	movwf	sprintf@f& (0+255),b
  1231  0022A8  0E08               	movlw	high STR_4
  1232  0022AA  6F87               	movwf	(sprintf@f+1)& (0+255),b
  1233  0022AC  C0B0  F088         	movff	main@T_Integral,?_sprintf+4
  1234  0022B0  6B89               	clrf	(?_sprintf+5)& (0+255),b
  1235  0022B2  EC67  F004         	call	_sprintf	;wreg free
  1236                           
  1237                           ;main.c: 71: UARTSendString(msg1, 32);
  1238  0022B6  0E00               	movlw	low _msg1
  1239  0022B8  6E0A               	movwf	UARTSendString@str,c
  1240  0022BA  0E01               	movlw	high _msg1
  1241  0022BC  6E0B               	movwf	UARTSendString@str+1,c
  1242  0022BE  0E20               	movlw	32
  1243  0022C0  6E0C               	movwf	UARTSendString@max_length,c
  1244  0022C2  EC84  F014         	call	_UARTSendString	;wreg free
  1245                           
  1246                           ;main.c: 72: flag3 = 0;
  1247  0022C6  0E00               	movlw	0
  1248  0022C8  0100               	movlb	0	; () banked
  1249  0022CA  6FD0               	movwf	_flag3& (0+255),b
  1250  0022CC                     l4979:
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;main.c: 73: };main.c: 74: if (flag4) {
  1254  0022CC  51CF               	movf	_flag4& (0+255),w,b
  1255  0022CE  B4D8               	btfsc	status,2,c
  1256  0022D0  D709               	goto	l4933
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 75: sprintf(msg1, "FourthdMQ_%d\0",RH_Integral);
  1260  0022D2  0E00               	movlw	low _msg1
  1261  0022D4  6F84               	movwf	sprintf@sp& (0+255),b
  1262  0022D6  0E01               	movlw	high _msg1
  1263  0022D8  6F85               	movwf	(sprintf@sp+1)& (0+255),b
  1264  0022DA  0EA0               	movlw	low STR_5
  1265  0022DC  6F86               	movwf	sprintf@f& (0+255),b
  1266  0022DE  0E08               	movlw	high STR_5
  1267  0022E0  6F87               	movwf	(sprintf@f+1)& (0+255),b
  1268  0022E2  C0AF  F088         	movff	main@RH_Integral,?_sprintf+4
  1269  0022E6  6B89               	clrf	(?_sprintf+5)& (0+255),b
  1270  0022E8  EC67  F004         	call	_sprintf	;wreg free
  1271                           
  1272                           ;main.c: 76: UARTSendString(msg1, 32);
  1273  0022EC  0E00               	movlw	low _msg1
  1274  0022EE  6E0A               	movwf	UARTSendString@str,c
  1275  0022F0  0E01               	movlw	high _msg1
  1276  0022F2  6E0B               	movwf	UARTSendString@str+1,c
  1277  0022F4  0E20               	movlw	32
  1278  0022F6  6E0C               	movwf	UARTSendString@max_length,c
  1279  0022F8  EC84  F014         	call	_UARTSendString	;wreg free
  1280                           
  1281                           ;main.c: 77: flag4 = 0;
  1282  0022FC  0E00               	movlw	0
  1283  0022FE  0100               	movlb	0	; () banked
  1284  002300  6FCF               	movwf	_flag4& (0+255),b
  1285  002302  D6F0               	goto	l4933
  1286  002304                     __end_of_main:
  1287                           	opt callstack 0
  1288                           
  1289 ;; *************** function _sprintf *****************
  1290 ;; Defined at:
  1291 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  sp              2   36[BANK0 ] PTR unsigned char 
  1294 ;;		 -> msg1(50), 
  1295 ;;  f               2   38[BANK0 ] PTR const unsigned char 
  1296 ;;		 -> STR_5(14), STR_4(12), STR_3(13), STR_2(15), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  fval            4   65[BANK0 ] PTR const unsigned char 
  1299 ;;  val             4   61[BANK0 ] unsigned long 
  1300 ;;  tmpval          4   57[BANK0 ] struct .
  1301 ;;  cp              3    0        PTR const unsigned char 
  1302 ;;  prec            2   69[BANK0 ] int 
  1303 ;;  eexp            2   55[BANK0 ] int 
  1304 ;;  flag            2   53[BANK0 ] unsigned short 
  1305 ;;  ap              2   51[BANK0 ] PTR void [1]
  1306 ;;		 -> ?_sprintf(2), 
  1307 ;;  len             2    0        unsigned int 
  1308 ;;  width           2    0        int 
  1309 ;;  c               1   71[BANK0 ] unsigned char 
  1310 ;;  d               1    0        unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2   36[BANK0 ] int 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1320 ;;      Params:         0       8       0       0       0       0       0       0       0
  1321 ;;      Locals:         0      25       0       0       0       0       0       0       0
  1322 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1323 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1324 ;;Total ram usage:       36 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    7
  1327 ;; This function calls:
  1328 ;;		___awdiv
  1329 ;;		___fladd
  1330 ;;		___fleq
  1331 ;;		___flge
  1332 ;;		___flmul
  1333 ;;		___flneg
  1334 ;;		___flsub
  1335 ;;		___fltol
  1336 ;;		___lldiv
  1337 ;;		___llmod
  1338 ;;		___wmul
  1339 ;;		___xxtofl
  1340 ;;		__div_to_l_
  1341 ;;		__tdiv_to_l_
  1342 ;;		_fround
  1343 ;;		_isdigit
  1344 ;;		_scale
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text1
  1351  0008CE                     __ptext1:
  1352                           	opt callstack 0
  1353  0008CE                     _sprintf:
  1354                           	opt callstack 23
  1355                           
  1356                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;incstack = 0
  1360  0008CE  0E88               	movlw	low (?_sprintf+4)
  1361  0008D0  0100               	movlb	0	; () banked
  1362  0008D2  6F93               	movwf	sprintf@ap& (0+255),b
  1363  0008D4  0E00               	movlw	high (?_sprintf+4)
  1364  0008D6  6F94               	movwf	(sprintf@ap+1)& (0+255),b
  1365                           
  1366                           ;doprnt.c: 548: while((c = *f++)) {
  1367  0008D8  EFA7  F008         	goto	u5250
  1368  0008DC                     l4689:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;doprnt.c: 550: if(c != '%')
  1372  0008DC  0E25               	movlw	37
  1373  0008DE  19A7               	xorwf	sprintf@c& (0+255),w,b
  1374  0008E0  B4D8               	btfsc	status,2,c
  1375  0008E2  D00A               	goto	l4695
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  1379  0008E4  C084  FFD9         	movff	sprintf@sp,fsr2l
  1380  0008E8  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  1381  0008EC  C0A7  FFDF         	movff	sprintf@c,indf2
  1382                           
  1383                           ; BSR set to: 0
  1384  0008F0  4B84               	infsnz	sprintf@sp& (0+255),f,b
  1385  0008F2  2B85               	incf	(sprintf@sp+1)& (0+255),f,b
  1386                           
  1387                           ;doprnt.c: 554: continue;
  1388  0008F4  EFA7  F008         	goto	u5250
  1389  0008F8                     l4695:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;doprnt.c: 555: };doprnt.c: 560: flag = 0;
  1393  0008F8  0E00               	movlw	0
  1394  0008FA  6F96               	movwf	(sprintf@flag+1)& (0+255),b
  1395  0008FC  0E00               	movlw	0
  1396  0008FE  6F95               	movwf	sprintf@flag& (0+255),b
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;doprnt.c: 623: if(*f == '.') {
  1400  000900  C086  FFF6         	movff	sprintf@f,tblptrl
  1401  000904  C087  FFF7         	movff	sprintf@f+1,tblptrh
  1402  000908                     	if	0	;tblptru may be non-zero
  1403  000908                     	endif
  1404  000908                     	if	0	;tblptru may be non-zero
  1405  000908                     	endif
  1406  000908  0008               	tblrd		*
  1407  00090A  50F5               	movf	tablat,w,c
  1408  00090C  0A2E               	xorlw	46
  1409  00090E  A4D8               	btfss	status,2,c
  1410  000910  D02F               	goto	l4709
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;doprnt.c: 624: flag |= 0x4000;
  1414  000912  8D96               	bsf	(sprintf@flag+1)& (0+255),6,b
  1415                           
  1416                           ;doprnt.c: 625: f++;
  1417  000914  4B86               	infsnz	sprintf@f& (0+255),f,b
  1418  000916  2B87               	incf	(sprintf@f+1)& (0+255),f,b
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  1422  000918  0E00               	movlw	0
  1423  00091A  6FA6               	movwf	(sprintf@prec+1)& (0+255),b
  1424  00091C  0E00               	movlw	0
  1425  00091E  6FA5               	movwf	sprintf@prec& (0+255),b
  1426                           
  1427                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  1428  000920  D01C               	goto	l4707
  1429  000922                     l4703:
  1430                           
  1431                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  1432  000922  C0A5  F009         	movff	sprintf@prec,___wmul@multiplier
  1433  000926  C0A6  F00A         	movff	sprintf@prec+1,___wmul@multiplier+1
  1434  00092A  0E00               	movlw	0
  1435  00092C  6E0C               	movwf	___wmul@multiplicand+1,c
  1436  00092E  0E0A               	movlw	10
  1437  000930  6E0B               	movwf	___wmul@multiplicand,c
  1438  000932  EC50  F017         	call	___wmul	;wreg free
  1439  000936  C086  FFF6         	movff	sprintf@f,tblptrl
  1440  00093A  C087  FFF7         	movff	sprintf@f+1,tblptrh
  1441  00093E                     	if	0	;tblptru may be non-zero
  1442  00093E                     	endif
  1443  00093E                     	if	0	;tblptru may be non-zero
  1444  00093E                     	endif
  1445  00093E  0008               	tblrd		*
  1446  000940  50F5               	movf	tablat,w,c
  1447  000942  2609               	addwf	?___wmul,f,c
  1448  000944  0E00               	movlw	0
  1449  000946  220A               	addwfc	?___wmul+1,f,c
  1450  000948  0ED0               	movlw	208
  1451  00094A  2409               	addwf	?___wmul,w,c
  1452  00094C  0100               	movlb	0	; () banked
  1453  00094E  6FA5               	movwf	sprintf@prec& (0+255),b
  1454  000950  0EFF               	movlw	255
  1455  000952  200A               	addwfc	?___wmul+1,w,c
  1456  000954  6FA6               	movwf	(sprintf@prec+1)& (0+255),b
  1457                           
  1458                           ; BSR set to: 0
  1459  000956  4B86               	infsnz	sprintf@f& (0+255),f,b
  1460  000958  2B87               	incf	(sprintf@f+1)& (0+255),f,b
  1461  00095A                     l4707:
  1462                           
  1463                           ; BSR set to: 0
  1464  00095A  C086  FFF6         	movff	sprintf@f,tblptrl
  1465  00095E  C087  FFF7         	movff	sprintf@f+1,tblptrh
  1466  000962                     	if	0	;tblptru may be non-zero
  1467  000962                     	endif
  1468  000962                     	if	0	;tblptru may be non-zero
  1469  000962                     	endif
  1470  000962  0008               	tblrd		*
  1471  000964  50F5               	movf	tablat,w,c
  1472  000966  EC85  F017         	call	_isdigit
  1473  00096A  A0D8               	btfss	status,0,c
  1474  00096C  D009               	goto	l4717
  1475  00096E  D7D9               	goto	l4703
  1476  000970                     l4709:
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;doprnt.c: 645: prec = 0;
  1480  000970  0E00               	movlw	0
  1481  000972  6FA6               	movwf	(sprintf@prec+1)& (0+255),b
  1482  000974  0E00               	movlw	0
  1483  000976  6FA5               	movwf	sprintf@prec& (0+255),b
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;doprnt.c: 647: flag |= 0x1000;
  1487  000978  8996               	bsf	(sprintf@flag+1)& (0+255),4,b
  1488  00097A  D002               	goto	l4717
  1489  00097C                     l4713:
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;doprnt.c: 682: flag |= 0x400;
  1493  00097C  8596               	bsf	(sprintf@flag+1)& (0+255),2,b
  1494                           
  1495                           ;doprnt.c: 683: break;
  1496  00097E  D017               	goto	l4719
  1497  000980                     l4717:
  1498  000980  C086  FFF6         	movff	sprintf@f,tblptrl
  1499  000984  C087  FFF7         	movff	sprintf@f+1,tblptrh
  1500  000988  0100               	movlb	0	; () banked
  1501  00098A  4B86               	infsnz	sprintf@f& (0+255),f,b
  1502  00098C  2B87               	incf	(sprintf@f+1)& (0+255),f,b
  1503  00098E                     	if	0	;tblptru may be non-zero
  1504  00098E                     	endif
  1505  00098E                     	if	0	;tblptru may be non-zero
  1506  00098E                     	endif
  1507  00098E  0008               	tblrd		*
  1508  000990  CFF5 F0A7          	movff	tablat,sprintf@c
  1509  000994  51A7               	movf	sprintf@c& (0+255),w,b
  1510                           
  1511                           ; Switch size 1, requested type "simple"
  1512                           ; Number of cases is 4, Range of values is 0 to 105
  1513                           ; switch strategies available:
  1514                           ; Name         Instructions Cycles
  1515                           ; simple_byte           13     7 (average)
  1516                           ;	Chosen strategy is simple_byte
  1517  000996  0A00               	xorlw	0	; case 0
  1518  000998  B4D8               	btfsc	status,2,c
  1519  00099A  D3E6               	goto	u5260
  1520  00099C  0A64               	xorlw	100	; case 100
  1521  00099E  B4D8               	btfsc	status,2,c
  1522  0009A0  D006               	goto	l4719
  1523  0009A2  0A02               	xorlw	2	; case 102
  1524  0009A4  B4D8               	btfsc	status,2,c
  1525  0009A6  D7EA               	goto	l4713
  1526  0009A8  0A0F               	xorlw	15	; case 105
  1527  0009AA  A4D8               	btfss	status,2,c
  1528  0009AC  D3D0               	goto	u5250
  1529  0009AE                     l4719:
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;doprnt.c: 844: if(flag & (0x700)) {
  1533  0009AE  0E07               	movlw	7
  1534  0009B0  1596               	andwf	(sprintf@flag+1)& (0+255),w,b
  1535  0009B2  B4D8               	btfsc	status,2,c
  1536  0009B4  D30B               	goto	l4867
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;doprnt.c: 846: if(flag & 0x1000)
  1540  0009B6  A996               	btfss	(sprintf@flag+1)& (0+255),4,b
  1541  0009B8  D004               	goto	l4725
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;doprnt.c: 848: prec = 6;
  1545  0009BA  0E00               	movlw	0
  1546  0009BC  6FA6               	movwf	(sprintf@prec+1)& (0+255),b
  1547  0009BE  0E06               	movlw	6
  1548  0009C0  6FA5               	movwf	sprintf@prec& (0+255),b
  1549  0009C2                     l4725:
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1553  0009C2  C093  FFD9         	movff	sprintf@ap,fsr2l
  1554  0009C6  C094  FFDA         	movff	sprintf@ap+1,fsr2h
  1555  0009CA  CFDE F0A1          	movff	postinc2,sprintf@fval
  1556  0009CE  CFDE F0A2          	movff	postinc2,sprintf@fval+1
  1557  0009D2  CFDE F0A3          	movff	postinc2,sprintf@fval+2
  1558  0009D6  CFDE F0A4          	movff	postinc2,sprintf@fval+3
  1559                           
  1560                           ; BSR set to: 0
  1561  0009DA  0E04               	movlw	4
  1562  0009DC  2793               	addwf	sprintf@ap& (0+255),f,b
  1563  0009DE  0E00               	movlw	0
  1564  0009E0  2394               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;doprnt.c: 850: if(fval < 0.0) {
  1568  0009E2  AFA4               	btfss	(sprintf@fval+3)& (0+255),7,b
  1569  0009E4  D015               	goto	l4735
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;doprnt.c: 851: fval = -fval;
  1573  0009E6  C0A1  F009         	movff	sprintf@fval,___flneg@f1
  1574  0009EA  C0A2  F00A         	movff	sprintf@fval+1,___flneg@f1+1
  1575  0009EE  C0A3  F00B         	movff	sprintf@fval+2,___flneg@f1+2
  1576  0009F2  C0A4  F00C         	movff	sprintf@fval+3,___flneg@f1+3
  1577  0009F6  EC0B  F017         	call	___flneg	;wreg free
  1578  0009FA  C009  F0A1         	movff	?___flneg,sprintf@fval
  1579  0009FE  C00A  F0A2         	movff	?___flneg+1,sprintf@fval+1
  1580  000A02  C00B  F0A3         	movff	?___flneg+2,sprintf@fval+2
  1581  000A06  C00C  F0A4         	movff	?___flneg+3,sprintf@fval+3
  1582                           
  1583                           ;doprnt.c: 852: flag |= 0x03;
  1584  000A0A  0E03               	movlw	3
  1585  000A0C  0100               	movlb	0	; () banked
  1586  000A0E  1395               	iorwf	sprintf@flag& (0+255),f,b
  1587  000A10                     l4735:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  1591  000A10  0E00               	movlw	0
  1592  000A12  6F98               	movwf	(sprintf@eexp+1)& (0+255),b
  1593  000A14  0E00               	movlw	0
  1594  000A16  6F97               	movwf	sprintf@eexp& (0+255),b
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;doprnt.c: 855: if( fval!=0) {
  1598  000A18  C0A1  F009         	movff	sprintf@fval,___fleq@ff1
  1599  000A1C  C0A2  F00A         	movff	sprintf@fval+1,___fleq@ff1+1
  1600  000A20  C0A3  F00B         	movff	sprintf@fval+2,___fleq@ff1+2
  1601  000A24  C0A4  F00C         	movff	sprintf@fval+3,___fleq@ff1+3
  1602  000A28  0E00               	movlw	0
  1603  000A2A  6E0D               	movwf	___fleq@ff2,c
  1604  000A2C  0E00               	movlw	0
  1605  000A2E  6E0E               	movwf	___fleq@ff2+1,c
  1606  000A30  0E00               	movlw	0
  1607  000A32  6E0F               	movwf	___fleq@ff2+2,c
  1608  000A34  0E00               	movlw	0
  1609  000A36  6E10               	movwf	___fleq@ff2+3,c
  1610  000A38  ECCE  F014         	call	___fleq	;wreg free
  1611  000A3C  B0D8               	btfsc	status,0,c
  1612  000A3E  D083               	goto	l4763
  1613                           
  1614                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1615  000A40  0100               	movlb	0	; () banked
  1616  000A42  35A3               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1617  000A44  35A4               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1618  000A46  0F82               	addlw	130
  1619  000A48  6F97               	movwf	sprintf@eexp& (0+255),b
  1620  000A4A  6B98               	clrf	(sprintf@eexp+1)& (0+255),b
  1621  000A4C  0EFF               	movlw	255
  1622  000A4E  2398               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;doprnt.c: 857: eexp--;
  1626  000A50  0797               	decf	sprintf@eexp& (0+255),f,b
  1627  000A52  A0D8               	btfss	status,0,c
  1628  000A54  0798               	decf	(sprintf@eexp+1)& (0+255),f,b
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;doprnt.c: 858: eexp *= 3;
  1632  000A56  C097  F009         	movff	sprintf@eexp,___wmul@multiplier
  1633  000A5A  C098  F00A         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1634  000A5E  0E00               	movlw	0
  1635  000A60  6E0C               	movwf	___wmul@multiplicand+1,c
  1636  000A62  0E03               	movlw	3
  1637  000A64  6E0B               	movwf	___wmul@multiplicand,c
  1638  000A66  EC50  F017         	call	___wmul	;wreg free
  1639  000A6A  C009  F097         	movff	?___wmul,sprintf@eexp
  1640  000A6E  C00A  F098         	movff	?___wmul+1,sprintf@eexp+1
  1641                           
  1642                           ;doprnt.c: 859: eexp /= 10;
  1643  000A72  C097  F00F         	movff	sprintf@eexp,___awdiv@dividend
  1644  000A76  C098  F010         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1645  000A7A  0E00               	movlw	0
  1646  000A7C  6E12               	movwf	___awdiv@divisor+1,c
  1647  000A7E  0E0A               	movlw	10
  1648  000A80  6E11               	movwf	___awdiv@divisor,c
  1649  000A82  EC13  F015         	call	___awdiv	;wreg free
  1650  000A86  C00F  F097         	movff	?___awdiv,sprintf@eexp
  1651  000A8A  C010  F098         	movff	?___awdiv+1,sprintf@eexp+1
  1652                           
  1653                           ;doprnt.c: 860: if(eexp < 0)
  1654  000A8E  0100               	movlb	0	; () banked
  1655  000A90  AF98               	btfss	(sprintf@eexp+1)& (0+255),7,b
  1656  000A92  D003               	goto	l4751
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;doprnt.c: 861: eexp--;
  1660  000A94  0797               	decf	sprintf@eexp& (0+255),f,b
  1661  000A96  A0D8               	btfss	status,0,c
  1662  000A98  0798               	decf	(sprintf@eexp+1)& (0+255),f,b
  1663  000A9A                     l4751:
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  1667  000A9A  5197               	movf	sprintf@eexp& (0+255),w,b
  1668  000A9C  0800               	sublw	0
  1669  000A9E  ECBB  F008         	call	_scale
  1670  000AA2  C071  F099         	movff	?_scale,sprintf@tmpval
  1671  000AA6  C072  F09A         	movff	?_scale+1,sprintf@tmpval+1
  1672  000AAA  C073  F09B         	movff	?_scale+2,sprintf@tmpval+2
  1673  000AAE  C074  F09C         	movff	?_scale+3,sprintf@tmpval+3
  1674                           
  1675                           ;doprnt.c: 866: tmpval.integ *= fval;
  1676  000AB2  C099  F046         	movff	sprintf@tmpval,___flmul@b
  1677  000AB6  C09A  F047         	movff	sprintf@tmpval+1,___flmul@b+1
  1678  000ABA  C09B  F048         	movff	sprintf@tmpval+2,___flmul@b+2
  1679  000ABE  C09C  F049         	movff	sprintf@tmpval+3,___flmul@b+3
  1680  000AC2  C0A1  F04A         	movff	sprintf@fval,___flmul@a
  1681  000AC6  C0A2  F04B         	movff	sprintf@fval+1,___flmul@a+1
  1682  000ACA  C0A3  F04C         	movff	sprintf@fval+2,___flmul@a+2
  1683  000ACE  C0A4  F04D         	movff	sprintf@fval+3,___flmul@a+3
  1684  000AD2  ECAB  F00A         	call	___flmul	;wreg free
  1685  000AD6  C046  F099         	movff	?___flmul,sprintf@tmpval
  1686  000ADA  C047  F09A         	movff	?___flmul+1,sprintf@tmpval+1
  1687  000ADE  C048  F09B         	movff	?___flmul+2,sprintf@tmpval+2
  1688  000AE2  C049  F09C         	movff	?___flmul+3,sprintf@tmpval+3
  1689                           
  1690                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  1691  000AE6  C099  F009         	movff	sprintf@tmpval,___flge@ff1
  1692  000AEA  C09A  F00A         	movff	sprintf@tmpval+1,___flge@ff1+1
  1693  000AEE  C09B  F00B         	movff	sprintf@tmpval+2,___flge@ff1+2
  1694  000AF2  C09C  F00C         	movff	sprintf@tmpval+3,___flge@ff1+3
  1695  000AF6  0E00               	movlw	0
  1696  000AF8  6E0D               	movwf	___flge@ff2,c
  1697  000AFA  0E00               	movlw	0
  1698  000AFC  6E0E               	movwf	___flge@ff2+1,c
  1699  000AFE  0E80               	movlw	128
  1700  000B00  6E0F               	movwf	___flge@ff2+2,c
  1701  000B02  0E3F               	movlw	63
  1702  000B04  6E10               	movwf	___flge@ff2+3,c
  1703  000B06  EC1B  F013         	call	___flge	;wreg free
  1704  000B0A  B0D8               	btfsc	status,0,c
  1705  000B0C  D005               	goto	l4759
  1706                           
  1707                           ;doprnt.c: 868: eexp--;
  1708  000B0E  0100               	movlb	0	; () banked
  1709  000B10  0797               	decf	sprintf@eexp& (0+255),f,b
  1710  000B12  A0D8               	btfss	status,0,c
  1711  000B14  0798               	decf	(sprintf@eexp+1)& (0+255),f,b
  1712  000B16  D017               	goto	l4763
  1713  000B18                     l4759:
  1714                           
  1715                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  1716  000B18  C099  F009         	movff	sprintf@tmpval,___flge@ff1
  1717  000B1C  C09A  F00A         	movff	sprintf@tmpval+1,___flge@ff1+1
  1718  000B20  C09B  F00B         	movff	sprintf@tmpval+2,___flge@ff1+2
  1719  000B24  C09C  F00C         	movff	sprintf@tmpval+3,___flge@ff1+3
  1720  000B28  0E00               	movlw	0
  1721  000B2A  6E0D               	movwf	___flge@ff2,c
  1722  000B2C  0E00               	movlw	0
  1723  000B2E  6E0E               	movwf	___flge@ff2+1,c
  1724  000B30  0E20               	movlw	32
  1725  000B32  6E0F               	movwf	___flge@ff2+2,c
  1726  000B34  0E41               	movlw	65
  1727  000B36  6E10               	movwf	___flge@ff2+3,c
  1728  000B38  EC1B  F013         	call	___flge	;wreg free
  1729  000B3C  A0D8               	btfss	status,0,c
  1730  000B3E  D003               	goto	l4763
  1731                           
  1732                           ;doprnt.c: 870: eexp++;
  1733  000B40  0100               	movlb	0	; () banked
  1734  000B42  4B97               	infsnz	sprintf@eexp& (0+255),f,b
  1735  000B44  2B98               	incf	(sprintf@eexp+1)& (0+255),f,b
  1736  000B46                     l4763:
  1737                           
  1738                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  1739  000B46  0100               	movlb	0	; () banked
  1740  000B48  BFA6               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1741  000B4A  D006               	goto	u5020
  1742  000B4C  51A6               	movf	(sprintf@prec+1)& (0+255),w,b
  1743  000B4E  E121               	bnz	l4767
  1744  000B50  0E0D               	movlw	13
  1745  000B52  5DA5               	subwf	sprintf@prec& (0+255),w,b
  1746  000B54  B0D8               	btfsc	status,0,c
  1747  000B56  D01D               	goto	l4767
  1748  000B58                     u5020:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  1752  000B58  C0A1  F015         	movff	sprintf@fval,___fladd@b
  1753  000B5C  C0A2  F016         	movff	sprintf@fval+1,___fladd@b+1
  1754  000B60  C0A3  F017         	movff	sprintf@fval+2,___fladd@b+2
  1755  000B64  C0A4  F018         	movff	sprintf@fval+3,___fladd@b+3
  1756  000B68  51A5               	movf	sprintf@prec& (0+255),w,b
  1757  000B6A  ECDB  F00D         	call	_fround
  1758  000B6E  C071  F019         	movff	?_fround,___fladd@a
  1759  000B72  C072  F01A         	movff	?_fround+1,___fladd@a+1
  1760  000B76  C073  F01B         	movff	?_fround+2,___fladd@a+2
  1761  000B7A  C074  F01C         	movff	?_fround+3,___fladd@a+3
  1762  000B7E  EC55  F00C         	call	___fladd	;wreg free
  1763  000B82  C015  F0A1         	movff	?___fladd,sprintf@fval
  1764  000B86  C016  F0A2         	movff	?___fladd+1,sprintf@fval+1
  1765  000B8A  C017  F0A3         	movff	?___fladd+2,sprintf@fval+2
  1766  000B8E  C018  F0A4         	movff	?___fladd+3,sprintf@fval+3
  1767  000B92                     l4767:
  1768                           
  1769                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1770  000B92  0100               	movlb	0	; () banked
  1771  000B94  BF98               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1772  000B96  D006               	goto	u5030
  1773  000B98  5198               	movf	(sprintf@eexp+1)& (0+255),w,b
  1774  000B9A  E130               	bnz	l4775
  1775  000B9C  0E0A               	movlw	10
  1776  000B9E  5D97               	subwf	sprintf@eexp& (0+255),w,b
  1777  000BA0  B0D8               	btfsc	status,0,c
  1778  000BA2  D02C               	goto	u5060
  1779  000BA4                     u5030:
  1780                           
  1781                           ; BSR set to: 0
  1782  000BA4  C0A1  F009         	movff	sprintf@fval,___fleq@ff1
  1783  000BA8  C0A2  F00A         	movff	sprintf@fval+1,___fleq@ff1+1
  1784  000BAC  C0A3  F00B         	movff	sprintf@fval+2,___fleq@ff1+2
  1785  000BB0  C0A4  F00C         	movff	sprintf@fval+3,___fleq@ff1+3
  1786  000BB4  0E00               	movlw	0
  1787  000BB6  6E0D               	movwf	___fleq@ff2,c
  1788  000BB8  0E00               	movlw	0
  1789  000BBA  6E0E               	movwf	___fleq@ff2+1,c
  1790  000BBC  0E00               	movlw	0
  1791  000BBE  6E0F               	movwf	___fleq@ff2+2,c
  1792  000BC0  0E00               	movlw	0
  1793  000BC2  6E10               	movwf	___fleq@ff2+3,c
  1794  000BC4  ECCE  F014         	call	___fleq	;wreg free
  1795  000BC8  B0D8               	btfsc	status,0,c
  1796  000BCA  D063               	goto	l4789
  1797  000BCC  C0A1  F07A         	movff	sprintf@fval,___fltol@f1
  1798  000BD0  C0A2  F07B         	movff	sprintf@fval+1,___fltol@f1+1
  1799  000BD4  C0A3  F07C         	movff	sprintf@fval+2,___fltol@f1+2
  1800  000BD8  C0A4  F07D         	movff	sprintf@fval+3,___fltol@f1+3
  1801  000BDC  EC83  F013         	call	___fltol	;wreg free
  1802  000BE0  0100               	movlb	0	; () banked
  1803  000BE2  517A               	movf	?___fltol& (0+255),w,b
  1804  000BE4  117B               	iorwf	(?___fltol+1)& (0+255),w,b
  1805  000BE6  117C               	iorwf	(?___fltol+2)& (0+255),w,b
  1806  000BE8  117D               	iorwf	(?___fltol+3)& (0+255),w,b
  1807  000BEA  B4D8               	btfsc	status,2,c
  1808                           
  1809                           ; BSR set to: 0
  1810  000BEC  BF98               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1811  000BEE  D051               	goto	l4789
  1812  000BF0  5198               	movf	(sprintf@eexp+1)& (0+255),w,b
  1813  000BF2  E104               	bnz	u5060
  1814  000BF4  0E02               	movlw	2
  1815  000BF6  5D97               	subwf	sprintf@eexp& (0+255),w,b
  1816  000BF8  A0D8               	btfss	status,0,c
  1817  000BFA  D04B               	goto	l4789
  1818  000BFC                     u5060:
  1819  000BFC                     l4775:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  1823  000BFC  C099  F009         	movff	sprintf@tmpval,___flge@ff1
  1824  000C00  C09A  F00A         	movff	sprintf@tmpval+1,___flge@ff1+1
  1825  000C04  C09B  F00B         	movff	sprintf@tmpval+2,___flge@ff1+2
  1826  000C08  C09C  F00C         	movff	sprintf@tmpval+3,___flge@ff1+3
  1827  000C0C  0E5F               	movlw	95
  1828  000C0E  6E0D               	movwf	___flge@ff2,c
  1829  000C10  0E70               	movlw	112
  1830  000C12  6E0E               	movwf	___flge@ff2+1,c
  1831  000C14  0E89               	movlw	137
  1832  000C16  6E0F               	movwf	___flge@ff2+2,c
  1833  000C18  0E40               	movlw	64
  1834  000C1A  6E10               	movwf	___flge@ff2+3,c
  1835  000C1C  EC1B  F013         	call	___flge	;wreg free
  1836  000C20  B0D8               	btfsc	status,0,c
  1837  000C22  D003               	goto	l4779
  1838                           
  1839                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1840  000C24  0100               	movlb	0	; () banked
  1841  000C26  0EF7               	movlw	247
  1842  000C28  D002               	goto	L1
  1843  000C2A                     l4779:
  1844                           
  1845                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1846  000C2A  0100               	movlb	0	; () banked
  1847  000C2C  0EF8               	movlw	248
  1848  000C2E                     L1:
  1849  000C2E  2797               	addwf	sprintf@eexp& (0+255),f,b
  1850  000C30  0EFF               	movlw	255
  1851  000C32  2398               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1855  000C34  5197               	movf	sprintf@eexp& (0+255),w,b
  1856  000C36  ECBB  F008         	call	_scale
  1857  000C3A  C071  F099         	movff	?_scale,sprintf@tmpval
  1858  000C3E  C072  F09A         	movff	?_scale+1,sprintf@tmpval+1
  1859  000C42  C073  F09B         	movff	?_scale+2,sprintf@tmpval+2
  1860  000C46  C074  F09C         	movff	?_scale+3,sprintf@tmpval+3
  1861  000C4A  C0A1  F009         	movff	sprintf@fval,__div_to_l_@f1
  1862  000C4E  C0A2  F00A         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1863  000C52  C0A3  F00B         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1864  000C56  C0A4  F00C         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1865  000C5A  C099  F00D         	movff	sprintf@tmpval,__div_to_l_@f2
  1866  000C5E  C09A  F00E         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1867  000C62  C09B  F00F         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1868  000C66  C09C  F010         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1869  000C6A  ECA1  F012         	call	__div_to_l_	;wreg free
  1870  000C6E  C009  F09D         	movff	?__div_to_l_,sprintf@val
  1871  000C72  C00A  F09E         	movff	?__div_to_l_+1,sprintf@val+1
  1872  000C76  C00B  F09F         	movff	?__div_to_l_+2,sprintf@val+2
  1873  000C7A  C00C  F0A0         	movff	?__div_to_l_+3,sprintf@val+3
  1874                           
  1875                           ;doprnt.c: 1148: fval = 0.0;
  1876  000C7E  0E00               	movlw	0
  1877  000C80  0100               	movlb	0	; () banked
  1878  000C82  6FA1               	movwf	sprintf@fval& (0+255),b
  1879  000C84  0E00               	movlw	0
  1880  000C86  6FA2               	movwf	(sprintf@fval+1)& (0+255),b
  1881  000C88  0E00               	movlw	0
  1882  000C8A  6FA3               	movwf	(sprintf@fval+2)& (0+255),b
  1883  000C8C  0E00               	movlw	0
  1884  000C8E  6FA4               	movwf	(sprintf@fval+3)& (0+255),b
  1885                           
  1886                           ;doprnt.c: 1149: } else {
  1887  000C90  D03C               	goto	l4793
  1888  000C92                     l4789:
  1889                           
  1890                           ;doprnt.c: 1150: val = (unsigned long)fval;
  1891  000C92  C0A1  F07A         	movff	sprintf@fval,___fltol@f1
  1892  000C96  C0A2  F07B         	movff	sprintf@fval+1,___fltol@f1+1
  1893  000C9A  C0A3  F07C         	movff	sprintf@fval+2,___fltol@f1+2
  1894  000C9E  C0A4  F07D         	movff	sprintf@fval+3,___fltol@f1+3
  1895  000CA2  EC83  F013         	call	___fltol	;wreg free
  1896  000CA6  C07A  F09D         	movff	?___fltol,sprintf@val
  1897  000CAA  C07B  F09E         	movff	?___fltol+1,sprintf@val+1
  1898  000CAE  C07C  F09F         	movff	?___fltol+2,sprintf@val+2
  1899  000CB2  C07D  F0A0         	movff	?___fltol+3,sprintf@val+3
  1900                           
  1901                           ;doprnt.c: 1151: fval -= (double)val;
  1902  000CB6  C0A1  F025         	movff	sprintf@fval,___flsub@b
  1903  000CBA  C0A2  F026         	movff	sprintf@fval+1,___flsub@b+1
  1904  000CBE  C0A3  F027         	movff	sprintf@fval+2,___flsub@b+2
  1905  000CC2  C0A4  F028         	movff	sprintf@fval+3,___flsub@b+3
  1906  000CC6  C09D  F00D         	movff	sprintf@val,___xxtofl@val
  1907  000CCA  C09E  F00E         	movff	sprintf@val+1,___xxtofl@val+1
  1908  000CCE  C09F  F00F         	movff	sprintf@val+2,___xxtofl@val+2
  1909  000CD2  C0A0  F010         	movff	sprintf@val+3,___xxtofl@val+3
  1910  000CD6  0E00               	movlw	0
  1911  000CD8  EC82  F011         	call	___xxtofl
  1912  000CDC  C00D  F029         	movff	?___xxtofl,___flsub@a
  1913  000CE0  C00E  F02A         	movff	?___xxtofl+1,___flsub@a+1
  1914  000CE4  C00F  F02B         	movff	?___xxtofl+2,___flsub@a+2
  1915  000CE8  C010  F02C         	movff	?___xxtofl+3,___flsub@a+3
  1916  000CEC  EC7B  F016         	call	___flsub	;wreg free
  1917  000CF0  C025  F0A1         	movff	?___flsub,sprintf@fval
  1918  000CF4  C026  F0A2         	movff	?___flsub+1,sprintf@fval+1
  1919  000CF8  C027  F0A3         	movff	?___flsub+2,sprintf@fval+2
  1920  000CFC  C028  F0A4         	movff	?___flsub+3,sprintf@fval+3
  1921                           
  1922                           ;doprnt.c: 1152: eexp = 0;
  1923  000D00  0E00               	movlw	0
  1924  000D02  0100               	movlb	0	; () banked
  1925  000D04  6F98               	movwf	(sprintf@eexp+1)& (0+255),b
  1926  000D06  0E00               	movlw	0
  1927  000D08  6F97               	movwf	sprintf@eexp& (0+255),b
  1928  000D0A                     l4793:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  1932  000D0A  0E01               	movlw	1
  1933  000D0C  6FA7               	movwf	sprintf@c& (0+255),b
  1934  000D0E                     l4799:
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;doprnt.c: 1156: if(val < dpowers[c])
  1938  000D0E  51A7               	movf	sprintf@c& (0+255),w,b
  1939  000D10  0D04               	mullw	4
  1940  000D12  0E69               	movlw	low _dpowers
  1941  000D14  24F3               	addwf	prodl,w,c
  1942  000D16  6EF6               	movwf	tblptrl,c
  1943  000D18  0E08               	movlw	high _dpowers
  1944  000D1A  20F4               	addwfc	prodh,w,c
  1945  000D1C  6EF7               	movwf	tblptrh,c
  1946  000D1E                     	if	0	;There are less than 3 active tblptr bytes
  1947  000D1E                     	endif
  1948  000D1E  0009               	tblrd		*+
  1949  000D20  50F5               	movf	tablat,w,c
  1950  000D22  5D9D               	subwf	sprintf@val& (0+255),w,b
  1951  000D24  0009               	tblrd		*+
  1952  000D26  50F5               	movf	tablat,w,c
  1953  000D28  599E               	subwfb	(sprintf@val+1)& (0+255),w,b
  1954  000D2A  0009               	tblrd		*+
  1955  000D2C  50F5               	movf	tablat,w,c
  1956  000D2E  599F               	subwfb	(sprintf@val+2)& (0+255),w,b
  1957  000D30  0009               	tblrd		*+
  1958  000D32  50F5               	movf	tablat,w,c
  1959  000D34  59A0               	subwfb	(sprintf@val+3)& (0+255),w,b
  1960  000D36  A0D8               	btfss	status,0,c
  1961  000D38  D005               	goto	u5090
  1962                           
  1963                           ; BSR set to: 0
  1964  000D3A  2BA7               	incf	sprintf@c& (0+255),f,b
  1965                           
  1966                           ; BSR set to: 0
  1967  000D3C  0E0A               	movlw	10
  1968  000D3E  19A7               	xorwf	sprintf@c& (0+255),w,b
  1969  000D40  A4D8               	btfss	status,2,c
  1970  000D42  D7E5               	goto	l4799
  1971  000D44                     u5090:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;doprnt.c: 1194: {;doprnt.c: 1207: if(flag & 0x03)
  1975  000D44  0E03               	movlw	3
  1976  000D46  1595               	andwf	sprintf@flag& (0+255),w,b
  1977  000D48  6F8C               	movwf	??_sprintf& (0+255),b
  1978  000D4A  0E00               	movlw	0
  1979  000D4C  1596               	andwf	(sprintf@flag+1)& (0+255),w,b
  1980  000D4E  6F8D               	movwf	(??_sprintf+1)& (0+255),b
  1981  000D50  518C               	movf	??_sprintf& (0+255),w,b
  1982  000D52  118D               	iorwf	(??_sprintf+1)& (0+255),w,b
  1983  000D54  B4D8               	btfsc	status,2,c
  1984  000D56  D051               	goto	l4821
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  1988  000D58  C084  FFD9         	movff	sprintf@sp,fsr2l
  1989  000D5C  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  1990  000D60  0E2D               	movlw	45
  1991  000D62  6EDF               	movwf	indf2,c
  1992                           
  1993                           ; BSR set to: 0
  1994  000D64  4B84               	infsnz	sprintf@sp& (0+255),f,b
  1995  000D66  2B85               	incf	(sprintf@sp+1)& (0+255),f,b
  1996  000D68  D048               	goto	l4821
  1997  000D6A                     l4813:
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  2001  000D6A  C09D  F009         	movff	sprintf@val,___lldiv@dividend
  2002  000D6E  C09E  F00A         	movff	sprintf@val+1,___lldiv@dividend+1
  2003  000D72  C09F  F00B         	movff	sprintf@val+2,___lldiv@dividend+2
  2004  000D76  C0A0  F00C         	movff	sprintf@val+3,___lldiv@dividend+3
  2005  000D7A  51A7               	movf	sprintf@c& (0+255),w,b
  2006  000D7C  0D04               	mullw	4
  2007  000D7E  0E69               	movlw	low _dpowers
  2008  000D80  24F3               	addwf	prodl,w,c
  2009  000D82  6EF6               	movwf	tblptrl,c
  2010  000D84  0E08               	movlw	high _dpowers
  2011  000D86  20F4               	addwfc	prodh,w,c
  2012  000D88  6EF7               	movwf	tblptrh,c
  2013  000D8A                     	if	0	;There are less than 3 active tblptr bytes
  2014  000D8A                     	endif
  2015  000D8A  0009               	tblrd		*+
  2016  000D8C  CFF5 F00D          	movff	tablat,___lldiv@divisor
  2017  000D90  0009               	tblrd		*+
  2018  000D92  CFF5 F00E          	movff	tablat,___lldiv@divisor+1
  2019  000D96  0009               	tblrd		*+
  2020  000D98  CFF5 F00F          	movff	tablat,___lldiv@divisor+2
  2021  000D9C  000A               	tblrd		*-
  2022  000D9E  CFF5 F010          	movff	tablat,___lldiv@divisor+3
  2023  000DA2  EC55  F015         	call	___lldiv	;wreg free
  2024  000DA6  C009  F099         	movff	?___lldiv,sprintf@tmpval
  2025  000DAA  C00A  F09A         	movff	?___lldiv+1,sprintf@tmpval+1
  2026  000DAE  C00B  F09B         	movff	?___lldiv+2,sprintf@tmpval+2
  2027  000DB2  C00C  F09C         	movff	?___lldiv+3,sprintf@tmpval+3
  2028                           
  2029                           ;doprnt.c: 1221: tmpval.vd %= 10;
  2030  000DB6  C099  F016         	movff	sprintf@tmpval,___llmod@dividend
  2031  000DBA  C09A  F017         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2032  000DBE  C09B  F018         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2033  000DC2  C09C  F019         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2034  000DC6  0E0A               	movlw	10
  2035  000DC8  6E1A               	movwf	___llmod@divisor,c
  2036  000DCA  0E00               	movlw	0
  2037  000DCC  6E1B               	movwf	___llmod@divisor+1,c
  2038  000DCE  0E00               	movlw	0
  2039  000DD0  6E1C               	movwf	___llmod@divisor+2,c
  2040  000DD2  0E00               	movlw	0
  2041  000DD4  6E1D               	movwf	___llmod@divisor+3,c
  2042  000DD6  ECCE  F015         	call	___llmod	;wreg free
  2043  000DDA  C016  F099         	movff	?___llmod,sprintf@tmpval
  2044  000DDE  C017  F09A         	movff	?___llmod+1,sprintf@tmpval+1
  2045  000DE2  C018  F09B         	movff	?___llmod+2,sprintf@tmpval+2
  2046  000DE6  C019  F09C         	movff	?___llmod+3,sprintf@tmpval+3
  2047                           
  2048                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  2049  000DEA  0100               	movlb	0	; () banked
  2050  000DEC  5199               	movf	sprintf@tmpval& (0+255),w,b
  2051  000DEE  0F30               	addlw	48
  2052  000DF0  C084  FFD9         	movff	sprintf@sp,fsr2l
  2053  000DF4  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2054  000DF8  D7B4               	goto	L2
  2055  000DFA                     l4821:
  2056                           
  2057                           ; BSR set to: 0
  2058  000DFA  07A7               	decf	sprintf@c& (0+255),f,b
  2059  000DFC  29A7               	incf	sprintf@c& (0+255),w,b
  2060  000DFE  B4D8               	btfsc	status,2,c
  2061  000E00  D00C               	goto	l4829
  2062  000E02  D7B3               	goto	l4813
  2063  000E04                     l4823:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  2067  000E04  C084  FFD9         	movff	sprintf@sp,fsr2l
  2068  000E08  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2069  000E0C  0E30               	movlw	48
  2070  000E0E  6EDF               	movwf	indf2,c
  2071                           
  2072                           ; BSR set to: 0
  2073  000E10  4B84               	infsnz	sprintf@sp& (0+255),f,b
  2074  000E12  2B85               	incf	(sprintf@sp+1)& (0+255),f,b
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;doprnt.c: 1228: eexp--;
  2078  000E14  0797               	decf	sprintf@eexp& (0+255),f,b
  2079  000E16  A0D8               	btfss	status,0,c
  2080  000E18  0798               	decf	(sprintf@eexp+1)& (0+255),f,b
  2081  000E1A                     l4829:
  2082                           
  2083                           ; BSR set to: 0
  2084  000E1A  BF98               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2085  000E1C  D005               	goto	u5120
  2086  000E1E  5198               	movf	(sprintf@eexp+1)& (0+255),w,b
  2087  000E20  E1F1               	bnz	l4823
  2088  000E22  0597               	decf	sprintf@eexp& (0+255),w,b
  2089  000E24  B0D8               	btfsc	status,0,c
  2090  000E26  D7EE               	goto	l4823
  2091  000E28                     u5120:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2095  000E28  BFA6               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2096  000E2A  D009               	goto	l590
  2097  000E2C  51A6               	movf	(sprintf@prec+1)& (0+255),w,b
  2098  000E2E  E104               	bnz	u5130
  2099  000E30  0E09               	movlw	9
  2100  000E32  5DA5               	subwf	sprintf@prec& (0+255),w,b
  2101  000E34  A0D8               	btfss	status,0,c
  2102  000E36  D003               	goto	l590
  2103  000E38                     u5130:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2107  000E38  0E08               	movlw	8
  2108  000E3A  6FA7               	movwf	sprintf@c& (0+255),b
  2109  000E3C  D002               	goto	l4835
  2110  000E3E                     l590:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  2114  000E3E  C0A5  F0A7         	movff	sprintf@prec,sprintf@c
  2115  000E42                     l4835:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;doprnt.c: 1234: prec -= (int)c;
  2119  000E42  51A7               	movf	sprintf@c& (0+255),w,b
  2120  000E44  5FA5               	subwf	sprintf@prec& (0+255),f,b
  2121  000E46  0E00               	movlw	0
  2122  000E48  5BA6               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;doprnt.c: 1238: if(c)
  2126  000E4A  51A7               	movf	sprintf@c& (0+255),w,b
  2127  000E4C  B4D8               	btfsc	status,2,c
  2128  000E4E  D008               	goto	l4843
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  2132  000E50  C084  FFD9         	movff	sprintf@sp,fsr2l
  2133  000E54  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2134  000E58  0E2E               	movlw	46
  2135  000E5A  6EDF               	movwf	indf2,c
  2136                           
  2137                           ; BSR set to: 0
  2138  000E5C  4B84               	infsnz	sprintf@sp& (0+255),f,b
  2139  000E5E  2B85               	incf	(sprintf@sp+1)& (0+255),f,b
  2140  000E60                     l4843:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2144  000E60  51A7               	movf	sprintf@c& (0+255),w,b
  2145  000E62  ECBB  F008         	call	_scale
  2146  000E66  C071  F08F         	movff	?_scale,_sprintf$2173
  2147  000E6A  C072  F090         	movff	?_scale+1,_sprintf$2173+1
  2148  000E6E  C073  F091         	movff	?_scale+2,_sprintf$2173+2
  2149  000E72  C074  F092         	movff	?_scale+3,_sprintf$2173+3
  2150                           
  2151                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2152  000E76  C0A1  F04A         	movff	sprintf@fval,___flmul@a
  2153  000E7A  C0A2  F04B         	movff	sprintf@fval+1,___flmul@a+1
  2154  000E7E  C0A3  F04C         	movff	sprintf@fval+2,___flmul@a+2
  2155  000E82  C0A4  F04D         	movff	sprintf@fval+3,___flmul@a+3
  2156  000E86  C08F  F046         	movff	_sprintf$2173,___flmul@b
  2157  000E8A  C090  F047         	movff	_sprintf$2173+1,___flmul@b+1
  2158  000E8E  C091  F048         	movff	_sprintf$2173+2,___flmul@b+2
  2159  000E92  C092  F049         	movff	_sprintf$2173+3,___flmul@b+3
  2160  000E96  ECAB  F00A         	call	___flmul	;wreg free
  2161  000E9A  C046  F07A         	movff	?___flmul,___fltol@f1
  2162  000E9E  C047  F07B         	movff	?___flmul+1,___fltol@f1+1
  2163  000EA2  C048  F07C         	movff	?___flmul+2,___fltol@f1+2
  2164  000EA6  C049  F07D         	movff	?___flmul+3,___fltol@f1+3
  2165  000EAA  EC83  F013         	call	___fltol	;wreg free
  2166  000EAE  C07A  F09D         	movff	?___fltol,sprintf@val
  2167  000EB2  C07B  F09E         	movff	?___fltol+1,sprintf@val+1
  2168  000EB6  C07C  F09F         	movff	?___fltol+2,sprintf@val+2
  2169  000EBA  C07D  F0A0         	movff	?___fltol+3,sprintf@val+3
  2170                           
  2171                           ;doprnt.c: 1247: while(c--) {
  2172  000EBE  D070               	goto	l4857
  2173  000EC0                     l4847:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  2177  000EC0  C09D  F009         	movff	sprintf@val,___lldiv@dividend
  2178  000EC4  C09E  F00A         	movff	sprintf@val+1,___lldiv@dividend+1
  2179  000EC8  C09F  F00B         	movff	sprintf@val+2,___lldiv@dividend+2
  2180  000ECC  C0A0  F00C         	movff	sprintf@val+3,___lldiv@dividend+3
  2181  000ED0  51A7               	movf	sprintf@c& (0+255),w,b
  2182  000ED2  0D04               	mullw	4
  2183  000ED4  0E69               	movlw	low _dpowers
  2184  000ED6  24F3               	addwf	prodl,w,c
  2185  000ED8  6EF6               	movwf	tblptrl,c
  2186  000EDA  0E08               	movlw	high _dpowers
  2187  000EDC  20F4               	addwfc	prodh,w,c
  2188  000EDE  6EF7               	movwf	tblptrh,c
  2189  000EE0                     	if	0	;There are less than 3 active tblptr bytes
  2190  000EE0                     	endif
  2191  000EE0  0009               	tblrd		*+
  2192  000EE2  CFF5 F00D          	movff	tablat,___lldiv@divisor
  2193  000EE6  0009               	tblrd		*+
  2194  000EE8  CFF5 F00E          	movff	tablat,___lldiv@divisor+1
  2195  000EEC  0009               	tblrd		*+
  2196  000EEE  CFF5 F00F          	movff	tablat,___lldiv@divisor+2
  2197  000EF2  000A               	tblrd		*-
  2198  000EF4  CFF5 F010          	movff	tablat,___lldiv@divisor+3
  2199  000EF8  EC55  F015         	call	___lldiv	;wreg free
  2200  000EFC  C009  F099         	movff	?___lldiv,sprintf@tmpval
  2201  000F00  C00A  F09A         	movff	?___lldiv+1,sprintf@tmpval+1
  2202  000F04  C00B  F09B         	movff	?___lldiv+2,sprintf@tmpval+2
  2203  000F08  C00C  F09C         	movff	?___lldiv+3,sprintf@tmpval+3
  2204                           
  2205                           ;doprnt.c: 1249: tmpval.vd %= 10;
  2206  000F0C  C099  F016         	movff	sprintf@tmpval,___llmod@dividend
  2207  000F10  C09A  F017         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2208  000F14  C09B  F018         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2209  000F18  C09C  F019         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2210  000F1C  0E0A               	movlw	10
  2211  000F1E  6E1A               	movwf	___llmod@divisor,c
  2212  000F20  0E00               	movlw	0
  2213  000F22  6E1B               	movwf	___llmod@divisor+1,c
  2214  000F24  0E00               	movlw	0
  2215  000F26  6E1C               	movwf	___llmod@divisor+2,c
  2216  000F28  0E00               	movlw	0
  2217  000F2A  6E1D               	movwf	___llmod@divisor+3,c
  2218  000F2C  ECCE  F015         	call	___llmod	;wreg free
  2219  000F30  C016  F099         	movff	?___llmod,sprintf@tmpval
  2220  000F34  C017  F09A         	movff	?___llmod+1,sprintf@tmpval+1
  2221  000F38  C018  F09B         	movff	?___llmod+2,sprintf@tmpval+2
  2222  000F3C  C019  F09C         	movff	?___llmod+3,sprintf@tmpval+3
  2223                           
  2224                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  2225  000F40  0100               	movlb	0	; () banked
  2226  000F42  5199               	movf	sprintf@tmpval& (0+255),w,b
  2227  000F44  0F30               	addlw	48
  2228  000F46  C084  FFD9         	movff	sprintf@sp,fsr2l
  2229  000F4A  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2230  000F4E  6EDF               	movwf	indf2,c
  2231                           
  2232                           ; BSR set to: 0
  2233  000F50  4B84               	infsnz	sprintf@sp& (0+255),f,b
  2234  000F52  2B85               	incf	(sprintf@sp+1)& (0+255),f,b
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;doprnt.c: 1251: val %= dpowers[c];
  2238  000F54  C09D  F016         	movff	sprintf@val,___llmod@dividend
  2239  000F58  C09E  F017         	movff	sprintf@val+1,___llmod@dividend+1
  2240  000F5C  C09F  F018         	movff	sprintf@val+2,___llmod@dividend+2
  2241  000F60  C0A0  F019         	movff	sprintf@val+3,___llmod@dividend+3
  2242  000F64  51A7               	movf	sprintf@c& (0+255),w,b
  2243  000F66  0D04               	mullw	4
  2244  000F68  0E69               	movlw	low _dpowers
  2245  000F6A  24F3               	addwf	prodl,w,c
  2246  000F6C  6EF6               	movwf	tblptrl,c
  2247  000F6E  0E08               	movlw	high _dpowers
  2248  000F70  20F4               	addwfc	prodh,w,c
  2249  000F72  6EF7               	movwf	tblptrh,c
  2250  000F74                     	if	0	;There are less than 3 active tblptr bytes
  2251  000F74                     	endif
  2252  000F74  0009               	tblrd		*+
  2253  000F76  CFF5 F01A          	movff	tablat,___llmod@divisor
  2254  000F7A  0009               	tblrd		*+
  2255  000F7C  CFF5 F01B          	movff	tablat,___llmod@divisor+1
  2256  000F80  0009               	tblrd		*+
  2257  000F82  CFF5 F01C          	movff	tablat,___llmod@divisor+2
  2258  000F86  000A               	tblrd		*-
  2259  000F88  CFF5 F01D          	movff	tablat,___llmod@divisor+3
  2260  000F8C  ECCE  F015         	call	___llmod	;wreg free
  2261  000F90  C016  F09D         	movff	?___llmod,sprintf@val
  2262  000F94  C017  F09E         	movff	?___llmod+1,sprintf@val+1
  2263  000F98  C018  F09F         	movff	?___llmod+2,sprintf@val+2
  2264  000F9C  C019  F0A0         	movff	?___llmod+3,sprintf@val+3
  2265  000FA0                     l4857:
  2266  000FA0  0100               	movlb	0	; () banked
  2267  000FA2  07A7               	decf	sprintf@c& (0+255),f,b
  2268  000FA4  29A7               	incf	sprintf@c& (0+255),w,b
  2269  000FA6  B4D8               	btfsc	status,2,c
  2270  000FA8  D00C               	goto	l4865
  2271  000FAA  D78A               	goto	l4847
  2272  000FAC                     l4859:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  2276  000FAC  C084  FFD9         	movff	sprintf@sp,fsr2l
  2277  000FB0  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2278  000FB4  0E30               	movlw	48
  2279  000FB6  6EDF               	movwf	indf2,c
  2280                           
  2281                           ; BSR set to: 0
  2282  000FB8  4B84               	infsnz	sprintf@sp& (0+255),f,b
  2283  000FBA  2B85               	incf	(sprintf@sp+1)& (0+255),f,b
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;doprnt.c: 1256: prec--;
  2287  000FBC  07A5               	decf	sprintf@prec& (0+255),f,b
  2288  000FBE  A0D8               	btfss	status,0,c
  2289  000FC0  07A6               	decf	(sprintf@prec+1)& (0+255),f,b
  2290  000FC2                     l4865:
  2291                           
  2292                           ; BSR set to: 0
  2293  000FC2  51A5               	movf	sprintf@prec& (0+255),w,b
  2294  000FC4  11A6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2295  000FC6  B4D8               	btfsc	status,2,c
  2296  000FC8  D0C2               	goto	u5250
  2297  000FCA  D7F0               	goto	l4859
  2298  000FCC                     l4867:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;doprnt.c: 1265: };doprnt.c: 1272: {;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(in
      +                          t **)ap), (int)0));
  2302  000FCC  C093  FFD9         	movff	sprintf@ap,fsr2l
  2303  000FD0  C094  FFDA         	movff	sprintf@ap+1,fsr2h
  2304  000FD4  CFDE F09D          	movff	postinc2,sprintf@val
  2305  000FD8  CFDD F09E          	movff	postdec2,sprintf@val+1
  2306  000FDC  0E00               	movlw	0
  2307  000FDE  BF9E               	btfsc	(sprintf@val+1)& (0+255),7,b
  2308  000FE0  0EFF               	movlw	-1
  2309  000FE2  6F9F               	movwf	(sprintf@val+2)& (0+255),b
  2310  000FE4  6FA0               	movwf	(sprintf@val+3)& (0+255),b
  2311                           
  2312                           ; BSR set to: 0
  2313  000FE6  0E02               	movlw	2
  2314  000FE8  2793               	addwf	sprintf@ap& (0+255),f,b
  2315  000FEA  0E00               	movlw	0
  2316  000FEC  2394               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;doprnt.c: 1280: if((long)val < 0) {
  2320  000FEE  AFA0               	btfss	(sprintf@val+3)& (0+255),7,b
  2321  000FF0  D00A               	goto	l4877
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;doprnt.c: 1281: flag |= 0x03;
  2325  000FF2  0E03               	movlw	3
  2326  000FF4  1395               	iorwf	sprintf@flag& (0+255),f,b
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;doprnt.c: 1282: val = -val;
  2330  000FF6  1FA0               	comf	(sprintf@val+3)& (0+255),f,b
  2331  000FF8  1F9F               	comf	(sprintf@val+2)& (0+255),f,b
  2332  000FFA  1F9E               	comf	(sprintf@val+1)& (0+255),f,b
  2333  000FFC  6D9D               	negf	sprintf@val& (0+255),b
  2334  000FFE  0E00               	movlw	0
  2335  001000  239E               	addwfc	(sprintf@val+1)& (0+255),f,b
  2336  001002  239F               	addwfc	(sprintf@val+2)& (0+255),f,b
  2337  001004  23A0               	addwfc	(sprintf@val+3)& (0+255),f,b
  2338  001006                     l4877:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1309: if(prec == 0 && val == 0)
  2342  001006  51A5               	movf	sprintf@prec& (0+255),w,b
  2343  001008  11A6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2344  00100A  A4D8               	btfss	status,2,c
  2345  00100C  D008               	goto	l4883
  2346                           
  2347                           ; BSR set to: 0
  2348  00100E  519D               	movf	sprintf@val& (0+255),w,b
  2349  001010  119E               	iorwf	(sprintf@val+1)& (0+255),w,b
  2350  001012  119F               	iorwf	(sprintf@val+2)& (0+255),w,b
  2351  001014  11A0               	iorwf	(sprintf@val+3)& (0+255),w,b
  2352  001016  A4D8               	btfss	status,2,c
  2353  001018  D002               	goto	l4883
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;doprnt.c: 1310: prec++;
  2357  00101A  4BA5               	infsnz	sprintf@prec& (0+255),f,b
  2358  00101C  2BA6               	incf	(sprintf@prec+1)& (0+255),f,b
  2359  00101E                     l4883:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2363  00101E  0E01               	movlw	1
  2364  001020  6FA7               	movwf	sprintf@c& (0+255),b
  2365  001022                     l4889:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;doprnt.c: 1325: if(val < dpowers[c])
  2369  001022  51A7               	movf	sprintf@c& (0+255),w,b
  2370  001024  0D04               	mullw	4
  2371  001026  0E69               	movlw	low _dpowers
  2372  001028  24F3               	addwf	prodl,w,c
  2373  00102A  6EF6               	movwf	tblptrl,c
  2374  00102C  0E08               	movlw	high _dpowers
  2375  00102E  20F4               	addwfc	prodh,w,c
  2376  001030  6EF7               	movwf	tblptrh,c
  2377  001032                     	if	0	;There are less than 3 active tblptr bytes
  2378  001032                     	endif
  2379  001032  0009               	tblrd		*+
  2380  001034  50F5               	movf	tablat,w,c
  2381  001036  5D9D               	subwf	sprintf@val& (0+255),w,b
  2382  001038  0009               	tblrd		*+
  2383  00103A  50F5               	movf	tablat,w,c
  2384  00103C  599E               	subwfb	(sprintf@val+1)& (0+255),w,b
  2385  00103E  0009               	tblrd		*+
  2386  001040  50F5               	movf	tablat,w,c
  2387  001042  599F               	subwfb	(sprintf@val+2)& (0+255),w,b
  2388  001044  0009               	tblrd		*+
  2389  001046  50F5               	movf	tablat,w,c
  2390  001048  59A0               	subwfb	(sprintf@val+3)& (0+255),w,b
  2391  00104A  A0D8               	btfss	status,0,c
  2392  00104C  D005               	goto	u5210
  2393                           
  2394                           ; BSR set to: 0
  2395  00104E  2BA7               	incf	sprintf@c& (0+255),f,b
  2396                           
  2397                           ; BSR set to: 0
  2398  001050  0E0A               	movlw	10
  2399  001052  19A7               	xorwf	sprintf@c& (0+255),w,b
  2400  001054  A4D8               	btfss	status,2,c
  2401  001056  D7E5               	goto	l4889
  2402  001058                     u5210:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;doprnt.c: 1358: if(c < prec)
  2406  001058  51A7               	movf	sprintf@c& (0+255),w,b
  2407  00105A  6F8C               	movwf	??_sprintf& (0+255),b
  2408  00105C  6B8D               	clrf	(??_sprintf+1)& (0+255),b
  2409  00105E  51A5               	movf	sprintf@prec& (0+255),w,b
  2410  001060  5D8C               	subwf	??_sprintf& (0+255),w,b
  2411  001062  518D               	movf	(??_sprintf+1)& (0+255),w,b
  2412  001064  0A80               	xorlw	128
  2413  001066  6F8E               	movwf	(??_sprintf+2)& (0+255),b
  2414  001068  51A6               	movf	(sprintf@prec+1)& (0+255),w,b
  2415  00106A  0A80               	xorlw	128
  2416  00106C  598E               	subwfb	(??_sprintf+2)& (0+255),w,b
  2417  00106E  A0D8               	btfss	status,0,c
  2418  001070  D010               	goto	l4905
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;doprnt.c: 1360: else if(prec < c)
  2422                           
  2423                           ; BSR set to: 0
  2424  001072  51A7               	movf	sprintf@c& (0+255),w,b
  2425  001074  6F8C               	movwf	??_sprintf& (0+255),b
  2426  001076  6B8D               	clrf	(??_sprintf+1)& (0+255),b
  2427  001078  518C               	movf	??_sprintf& (0+255),w,b
  2428  00107A  5DA5               	subwf	sprintf@prec& (0+255),w,b
  2429  00107C  51A6               	movf	(sprintf@prec+1)& (0+255),w,b
  2430  00107E  0A80               	xorlw	128
  2431  001080  6F8E               	movwf	(??_sprintf+2)& (0+255),b
  2432  001082  518D               	movf	(??_sprintf+1)& (0+255),w,b
  2433  001084  0A80               	xorlw	128
  2434  001086  598E               	subwfb	(??_sprintf+2)& (0+255),w,b
  2435  001088  B0D8               	btfsc	status,0,c
  2436  00108A  D003               	goto	l4905
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;doprnt.c: 1361: prec = c;
  2440  00108C  C0A7  F0A5         	movff	sprintf@c,sprintf@prec
  2441  001090  6BA6               	clrf	(sprintf@prec+1)& (0+255),b
  2442  001092                     l4905:
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;doprnt.c: 1441: {;doprnt.c: 1457: if(flag & 0x03)
  2446  001092  0E03               	movlw	3
  2447  001094  1595               	andwf	sprintf@flag& (0+255),w,b
  2448  001096  6F8C               	movwf	??_sprintf& (0+255),b
  2449  001098  0E00               	movlw	0
  2450  00109A  1596               	andwf	(sprintf@flag+1)& (0+255),w,b
  2451  00109C  6F8D               	movwf	(??_sprintf+1)& (0+255),b
  2452  00109E  518C               	movf	??_sprintf& (0+255),w,b
  2453  0010A0  118D               	iorwf	(??_sprintf+1)& (0+255),w,b
  2454  0010A2  B4D8               	btfsc	status,2,c
  2455  0010A4  D04C               	goto	l4917
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  2459  0010A6  C084  FFD9         	movff	sprintf@sp,fsr2l
  2460  0010AA  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2461  0010AE  0E2D               	movlw	45
  2462  0010B0  6EDF               	movwf	indf2,c
  2463  0010B2                     l4909:
  2464                           
  2465                           ; BSR set to: 0
  2466  0010B2  4B84               	infsnz	sprintf@sp& (0+255),f,b
  2467  0010B4  2B85               	incf	(sprintf@sp+1)& (0+255),f,b
  2468  0010B6  D043               	goto	l4917
  2469  0010B8                     l4911:
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  2473  0010B8  C0A5  F08C         	movff	sprintf@prec,??_sprintf
  2474  0010BC  C0A6  F08D         	movff	sprintf@prec+1,??_sprintf+1
  2475  0010C0  90D8               	bcf	status,0,c
  2476  0010C2  378C               	rlcf	??_sprintf& (0+255),f,b
  2477  0010C4  378D               	rlcf	(??_sprintf+1)& (0+255),f,b
  2478  0010C6  90D8               	bcf	status,0,c
  2479  0010C8  378C               	rlcf	??_sprintf& (0+255),f,b
  2480  0010CA  378D               	rlcf	(??_sprintf+1)& (0+255),f,b
  2481  0010CC  0E69               	movlw	low _dpowers
  2482  0010CE  258C               	addwf	??_sprintf& (0+255),w,b
  2483  0010D0  6EF6               	movwf	tblptrl,c
  2484  0010D2  0E08               	movlw	high _dpowers
  2485  0010D4  218D               	addwfc	(??_sprintf+1)& (0+255),w,b
  2486  0010D6  6EF7               	movwf	tblptrh,c
  2487  0010D8                     	if	0	;There are less than 3 active tblptr bytes
  2488  0010D8                     	endif
  2489  0010D8  0009               	tblrd		*+
  2490  0010DA  CFF5 F00D          	movff	tablat,___lldiv@divisor
  2491  0010DE  0009               	tblrd		*+
  2492  0010E0  CFF5 F00E          	movff	tablat,___lldiv@divisor+1
  2493  0010E4  0009               	tblrd		*+
  2494  0010E6  CFF5 F00F          	movff	tablat,___lldiv@divisor+2
  2495  0010EA  000A               	tblrd		*-
  2496  0010EC  CFF5 F010          	movff	tablat,___lldiv@divisor+3
  2497  0010F0  C09D  F009         	movff	sprintf@val,___lldiv@dividend
  2498  0010F4  C09E  F00A         	movff	sprintf@val+1,___lldiv@dividend+1
  2499  0010F8  C09F  F00B         	movff	sprintf@val+2,___lldiv@dividend+2
  2500  0010FC  C0A0  F00C         	movff	sprintf@val+3,___lldiv@dividend+3
  2501  001100  EC55  F015         	call	___lldiv	;wreg free
  2502  001104  C009  F016         	movff	?___lldiv,___llmod@dividend
  2503  001108  C00A  F017         	movff	?___lldiv+1,___llmod@dividend+1
  2504  00110C  C00B  F018         	movff	?___lldiv+2,___llmod@dividend+2
  2505  001110  C00C  F019         	movff	?___lldiv+3,___llmod@dividend+3
  2506  001114  0E0A               	movlw	10
  2507  001116  6E1A               	movwf	___llmod@divisor,c
  2508  001118  0E00               	movlw	0
  2509  00111A  6E1B               	movwf	___llmod@divisor+1,c
  2510  00111C  0E00               	movlw	0
  2511  00111E  6E1C               	movwf	___llmod@divisor+2,c
  2512  001120  0E00               	movlw	0
  2513  001122  6E1D               	movwf	___llmod@divisor+3,c
  2514  001124  ECCE  F015         	call	___llmod	;wreg free
  2515  001128  5016               	movf	?___llmod,w,c
  2516  00112A  0F30               	addlw	48
  2517  00112C  0100               	movlb	0	; () banked
  2518  00112E  6FA7               	movwf	sprintf@c& (0+255),b
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  2522  001130  C084  FFD9         	movff	sprintf@sp,fsr2l
  2523  001134  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2524  001138  C0A7  FFDF         	movff	sprintf@c,indf2
  2525  00113C  D7BA               	goto	l4909
  2526  00113E                     l4917:
  2527                           
  2528                           ; BSR set to: 0
  2529  00113E  07A5               	decf	sprintf@prec& (0+255),f,b
  2530  001140  A0D8               	btfss	status,0,c
  2531  001142  07A6               	decf	(sprintf@prec+1)& (0+255),f,b
  2532  001144  29A5               	incf	sprintf@prec& (0+255),w,b
  2533  001146  E1B8               	bnz	l4911
  2534  001148  29A6               	incf	(sprintf@prec+1)& (0+255),w,b
  2535  00114A  A4D8               	btfss	status,2,c
  2536  00114C  D7B5               	goto	l4911
  2537  00114E                     u5250:
  2538                           
  2539                           ; BSR set to: 0
  2540  00114E  C086  FFF6         	movff	sprintf@f,tblptrl
  2541  001152  C087  FFF7         	movff	sprintf@f+1,tblptrh
  2542  001156  4B86               	infsnz	sprintf@f& (0+255),f,b
  2543  001158  2B87               	incf	(sprintf@f+1)& (0+255),f,b
  2544  00115A                     	if	0	;tblptru may be non-zero
  2545  00115A                     	endif
  2546  00115A                     	if	0	;tblptru may be non-zero
  2547  00115A                     	endif
  2548  00115A  0008               	tblrd		*
  2549  00115C  CFF5 F0A7          	movff	tablat,sprintf@c
  2550  001160  51A7               	movf	sprintf@c& (0+255),w,b
  2551  001162  A4D8               	btfss	status,2,c
  2552  001164  EF6E  F004         	goto	l4689
  2553  001168                     u5260:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;doprnt.c: 1557: *sp = 0;
  2557  001168  C084  FFD9         	movff	sprintf@sp,fsr2l
  2558  00116C  C085  FFDA         	movff	sprintf@sp+1,fsr2h
  2559  001170  0E00               	movlw	0
  2560  001172  6EDF               	movwf	indf2,c
  2561                           
  2562                           ; BSR set to: 0
  2563  001174  0012               	return		;funcret
  2564  001176                     __end_of_sprintf:
  2565                           	opt callstack 0
  2566                           
  2567 ;; *************** function _scale *****************
  2568 ;; Defined at:
  2569 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  scl             1    wreg     char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  scl             1   25[BANK0 ] char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  4   17[BANK0 ] char 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2583 ;;      Params:         0       4       0       0       0       0       0       0       0
  2584 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2586 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2587 ;;Total ram usage:        9 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    6
  2590 ;; This function calls:
  2591 ;;		___awdiv
  2592 ;;		___awmod
  2593 ;;		___flmul
  2594 ;; This function is called by:
  2595 ;;		_sprintf
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text2
  2600  001176                     __ptext2:
  2601                           	opt callstack 0
  2602  001176                     _scale:
  2603                           	opt callstack 23
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;incstack = 0
  2607                           ;scale@scl stored from wreg
  2608  001176  0100               	movlb	0	; () banked
  2609  001178  6F79               	movwf	scale@scl& (0+255),b
  2610                           
  2611                           ;doprnt.c: 436: if(scl < 0) {
  2612  00117A  0100               	movlb	0	; () banked
  2613  00117C  AF79               	btfss	scale@scl& (0+255),7,b
  2614  00117E  D0F6               	goto	l4669
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;doprnt.c: 437: scl = -scl;
  2618  001180  6D79               	negf	scale@scl& (0+255),b
  2619                           
  2620                           ;doprnt.c: 438: if(scl>=110)
  2621  001182  5179               	movf	scale@scl& (0+255),w,b
  2622  001184  0A80               	xorlw	128
  2623  001186  0F12               	addlw	-238
  2624  001188  A0D8               	btfss	status,0,c
  2625  00118A  D08A               	goto	l4659
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2629  00118C  0E00               	movlw	0
  2630  00118E  6E12               	movwf	___awdiv@divisor+1,c
  2631  001190  0E0A               	movlw	10
  2632  001192  6E11               	movwf	___awdiv@divisor,c
  2633  001194  0E00               	movlw	0
  2634  001196  6E0C               	movwf	___awmod@divisor+1,c
  2635  001198  0E64               	movlw	100
  2636  00119A  6E0B               	movwf	___awmod@divisor,c
  2637  00119C  5179               	movf	scale@scl& (0+255),w,b
  2638  00119E  6E09               	movwf	___awmod@dividend,c
  2639  0011A0  6A0A               	clrf	___awmod@dividend+1,c
  2640  0011A2  BE09               	btfsc	___awmod@dividend,7,c
  2641  0011A4  060A               	decf	___awmod@dividend+1,f,c
  2642  0011A6  EC96  F015         	call	___awmod	;wreg free
  2643  0011AA  C009  F00F         	movff	?___awmod,___awdiv@dividend
  2644  0011AE  C00A  F010         	movff	?___awmod+1,___awdiv@dividend+1
  2645  0011B2  EC13  F015         	call	___awdiv	;wreg free
  2646  0011B6  0E09               	movlw	9
  2647  0011B8  260F               	addwf	?___awdiv,f,c
  2648  0011BA  500F               	movf	?___awdiv,w,c
  2649  0011BC  0D04               	mullw	4
  2650  0011BE  0E35               	movlw	low __npowers_
  2651  0011C0  24F3               	addwf	prodl,w,c
  2652  0011C2  6EF6               	movwf	tblptrl,c
  2653  0011C4  0E08               	movlw	high __npowers_
  2654  0011C6  20F4               	addwfc	prodh,w,c
  2655  0011C8  6EF7               	movwf	tblptrh,c
  2656  0011CA                     	if	0	;There are less than 3 active tblptr bytes
  2657  0011CA                     	endif
  2658  0011CA  0009               	tblrd		*+
  2659  0011CC  CFF5 F04A          	movff	tablat,___flmul@a
  2660  0011D0  0009               	tblrd		*+
  2661  0011D2  CFF5 F04B          	movff	tablat,___flmul@a+1
  2662  0011D6  0009               	tblrd		*+
  2663  0011D8  CFF5 F04C          	movff	tablat,___flmul@a+2
  2664  0011DC  000A               	tblrd		*-
  2665  0011DE  CFF5 F04D          	movff	tablat,___flmul@a+3
  2666  0011E2  0E00               	movlw	0
  2667  0011E4  6E12               	movwf	___awdiv@divisor+1,c
  2668  0011E6  0E64               	movlw	100
  2669  0011E8  6E11               	movwf	___awdiv@divisor,c
  2670  0011EA  0100               	movlb	0	; () banked
  2671  0011EC  5179               	movf	scale@scl& (0+255),w,b
  2672  0011EE  6E0F               	movwf	___awdiv@dividend,c
  2673  0011F0  6A10               	clrf	___awdiv@dividend+1,c
  2674  0011F2  BE0F               	btfsc	___awdiv@dividend,7,c
  2675  0011F4  0610               	decf	___awdiv@dividend+1,f,c
  2676  0011F6  EC13  F015         	call	___awdiv	;wreg free
  2677  0011FA  0E12               	movlw	18
  2678  0011FC  260F               	addwf	?___awdiv,f,c
  2679  0011FE  500F               	movf	?___awdiv,w,c
  2680  001200  0D04               	mullw	4
  2681  001202  0E35               	movlw	low __npowers_
  2682  001204  24F3               	addwf	prodl,w,c
  2683  001206  6EF6               	movwf	tblptrl,c
  2684  001208  0E08               	movlw	high __npowers_
  2685  00120A  20F4               	addwfc	prodh,w,c
  2686  00120C  6EF7               	movwf	tblptrh,c
  2687  00120E                     	if	0	;There are less than 3 active tblptr bytes
  2688  00120E                     	endif
  2689  00120E  0009               	tblrd		*+
  2690  001210  CFF5 F046          	movff	tablat,___flmul@b
  2691  001214  0009               	tblrd		*+
  2692  001216  CFF5 F047          	movff	tablat,___flmul@b+1
  2693  00121A  0009               	tblrd		*+
  2694  00121C  CFF5 F048          	movff	tablat,___flmul@b+2
  2695  001220  000A               	tblrd		*-
  2696  001222  CFF5 F049          	movff	tablat,___flmul@b+3
  2697  001226  ECAB  F00A         	call	___flmul	;wreg free
  2698  00122A  C046  F075         	movff	?___flmul,_scale$2172
  2699  00122E  C047  F076         	movff	?___flmul+1,_scale$2172+1
  2700  001232  C048  F077         	movff	?___flmul+2,_scale$2172+2
  2701  001236  C049  F078         	movff	?___flmul+3,_scale$2172+3
  2702                           
  2703                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2704  00123A  C075  F046         	movff	_scale$2172,___flmul@b
  2705  00123E  C076  F047         	movff	_scale$2172+1,___flmul@b+1
  2706  001242  C077  F048         	movff	_scale$2172+2,___flmul@b+2
  2707  001246  C078  F049         	movff	_scale$2172+3,___flmul@b+3
  2708  00124A  0E00               	movlw	0
  2709  00124C  6E0C               	movwf	___awmod@divisor+1,c
  2710  00124E  0E0A               	movlw	10
  2711  001250  6E0B               	movwf	___awmod@divisor,c
  2712  001252  0100               	movlb	0	; () banked
  2713  001254  5179               	movf	scale@scl& (0+255),w,b
  2714  001256  6E09               	movwf	___awmod@dividend,c
  2715  001258  6A0A               	clrf	___awmod@dividend+1,c
  2716  00125A  BE09               	btfsc	___awmod@dividend,7,c
  2717  00125C  060A               	decf	___awmod@dividend+1,f,c
  2718  00125E  EC96  F015         	call	___awmod	;wreg free
  2719  001262  5009               	movf	?___awmod,w,c
  2720  001264  0D04               	mullw	4
  2721  001266  0E35               	movlw	low __npowers_
  2722  001268  24F3               	addwf	prodl,w,c
  2723  00126A  6EF6               	movwf	tblptrl,c
  2724  00126C  0E08               	movlw	high __npowers_
  2725  00126E  20F4               	addwfc	prodh,w,c
  2726  001270  6EF7               	movwf	tblptrh,c
  2727  001272                     	if	0	;There are less than 3 active tblptr bytes
  2728  001272                     	endif
  2729  001272  0009               	tblrd		*+
  2730  001274  CFF5 F04A          	movff	tablat,___flmul@a
  2731  001278  0009               	tblrd		*+
  2732  00127A  CFF5 F04B          	movff	tablat,___flmul@a+1
  2733  00127E  0009               	tblrd		*+
  2734  001280  CFF5 F04C          	movff	tablat,___flmul@a+2
  2735  001284  000A               	tblrd		*-
  2736  001286  CFF5 F04D          	movff	tablat,___flmul@a+3
  2737  00128A  ECAB  F00A         	call	___flmul	;wreg free
  2738  00128E  C046  F071         	movff	?___flmul,?_scale
  2739  001292  C047  F072         	movff	?___flmul+1,?_scale+1
  2740  001296  C048  F073         	movff	?___flmul+2,?_scale+2
  2741  00129A  C049  F074         	movff	?___flmul+3,?_scale+3
  2742  00129E  0012               	return	
  2743  0012A0                     l4659:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;doprnt.c: 440: else if(scl > 10)
  2747  0012A0  5179               	movf	scale@scl& (0+255),w,b
  2748  0012A2  0A80               	xorlw	128
  2749  0012A4  0F75               	addlw	-139
  2750  0012A6  A0D8               	btfss	status,0,c
  2751  0012A8  D04C               	goto	l4665
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2755  0012AA  0E00               	movlw	0
  2756  0012AC  6E12               	movwf	___awdiv@divisor+1,c
  2757  0012AE  0E0A               	movlw	10
  2758  0012B0  6E11               	movwf	___awdiv@divisor,c
  2759  0012B2  5179               	movf	scale@scl& (0+255),w,b
  2760  0012B4  6E0F               	movwf	___awdiv@dividend,c
  2761  0012B6  6A10               	clrf	___awdiv@dividend+1,c
  2762  0012B8  BE0F               	btfsc	___awdiv@dividend,7,c
  2763  0012BA  0610               	decf	___awdiv@dividend+1,f,c
  2764  0012BC  EC13  F015         	call	___awdiv	;wreg free
  2765  0012C0  0E09               	movlw	9
  2766  0012C2  260F               	addwf	?___awdiv,f,c
  2767  0012C4  500F               	movf	?___awdiv,w,c
  2768  0012C6  0D04               	mullw	4
  2769  0012C8  0E35               	movlw	low __npowers_
  2770  0012CA  24F3               	addwf	prodl,w,c
  2771  0012CC  6EF6               	movwf	tblptrl,c
  2772  0012CE  0E08               	movlw	high __npowers_
  2773  0012D0  20F4               	addwfc	prodh,w,c
  2774  0012D2  6EF7               	movwf	tblptrh,c
  2775  0012D4                     	if	0	;There are less than 3 active tblptr bytes
  2776  0012D4                     	endif
  2777  0012D4  0009               	tblrd		*+
  2778  0012D6  CFF5 F046          	movff	tablat,___flmul@b
  2779  0012DA  0009               	tblrd		*+
  2780  0012DC  CFF5 F047          	movff	tablat,___flmul@b+1
  2781  0012E0  0009               	tblrd		*+
  2782  0012E2  CFF5 F048          	movff	tablat,___flmul@b+2
  2783  0012E6  000A               	tblrd		*-
  2784  0012E8  CFF5 F049          	movff	tablat,___flmul@b+3
  2785  0012EC  0E00               	movlw	0
  2786  0012EE  6E0C               	movwf	___awmod@divisor+1,c
  2787  0012F0  0E0A               	movlw	10
  2788  0012F2  6E0B               	movwf	___awmod@divisor,c
  2789  0012F4  0100               	movlb	0	; () banked
  2790  0012F6  5179               	movf	scale@scl& (0+255),w,b
  2791  0012F8  6E09               	movwf	___awmod@dividend,c
  2792  0012FA  6A0A               	clrf	___awmod@dividend+1,c
  2793  0012FC  BE09               	btfsc	___awmod@dividend,7,c
  2794  0012FE  060A               	decf	___awmod@dividend+1,f,c
  2795  001300  EC96  F015         	call	___awmod	;wreg free
  2796  001304  5009               	movf	?___awmod,w,c
  2797  001306  0D04               	mullw	4
  2798  001308  0E35               	movlw	low __npowers_
  2799  00130A  24F3               	addwf	prodl,w,c
  2800  00130C  6EF6               	movwf	tblptrl,c
  2801  00130E  0E08               	movlw	high __npowers_
  2802  001310  20F4               	addwfc	prodh,w,c
  2803  001312  6EF7               	movwf	tblptrh,c
  2804  001314                     	if	0	;There are less than 3 active tblptr bytes
  2805  001314                     	endif
  2806  001314  0009               	tblrd		*+
  2807  001316  CFF5 F04A          	movff	tablat,___flmul@a
  2808  00131A  0009               	tblrd		*+
  2809  00131C  CFF5 F04B          	movff	tablat,___flmul@a+1
  2810  001320  0009               	tblrd		*+
  2811  001322  CFF5 F04C          	movff	tablat,___flmul@a+2
  2812  001326  000A               	tblrd		*-
  2813  001328  CFF5 F04D          	movff	tablat,___flmul@a+3
  2814  00132C  ECAB  F00A         	call	___flmul	;wreg free
  2815  001330  C046  F071         	movff	?___flmul,?_scale
  2816  001334  C047  F072         	movff	?___flmul+1,?_scale+1
  2817  001338  C048  F073         	movff	?___flmul+2,?_scale+2
  2818  00133C  C049  F074         	movff	?___flmul+3,?_scale+3
  2819  001340  0012               	return	
  2820  001342                     l4665:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2824  001342  5179               	movf	scale@scl& (0+255),w,b
  2825  001344  0D04               	mullw	4
  2826  001346  0E35               	movlw	low __npowers_
  2827  001348  24F3               	addwf	prodl,w,c
  2828  00134A  6EF6               	movwf	tblptrl,c
  2829  00134C  0E08               	movlw	high __npowers_
  2830  00134E  20F4               	addwfc	prodh,w,c
  2831  001350  6EF7               	movwf	tblptrh,c
  2832  001352                     	if	0	;There are less than 3 active tblptr bytes
  2833  001352                     	endif
  2834  001352  0009               	tblrd		*+
  2835  001354  CFF5 F071          	movff	tablat,?_scale
  2836  001358  0009               	tblrd		*+
  2837  00135A  CFF5 F072          	movff	tablat,?_scale+1
  2838  00135E  0009               	tblrd		*+
  2839  001360  CFF5 F073          	movff	tablat,?_scale+2
  2840  001364  000A               	tblrd		*-
  2841  001366  CFF5 F074          	movff	tablat,?_scale+3
  2842  00136A  0012               	return	
  2843  00136C                     l4669:
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2847  00136C  5179               	movf	scale@scl& (0+255),w,b
  2848  00136E  0A80               	xorlw	128
  2849  001370  0F12               	addlw	-238
  2850  001372  A0D8               	btfss	status,0,c
  2851  001374  D08A               	goto	l4677
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2855  001376  0E00               	movlw	0
  2856  001378  6E12               	movwf	___awdiv@divisor+1,c
  2857  00137A  0E0A               	movlw	10
  2858  00137C  6E11               	movwf	___awdiv@divisor,c
  2859  00137E  0E00               	movlw	0
  2860  001380  6E0C               	movwf	___awmod@divisor+1,c
  2861  001382  0E64               	movlw	100
  2862  001384  6E0B               	movwf	___awmod@divisor,c
  2863  001386  5179               	movf	scale@scl& (0+255),w,b
  2864  001388  6E09               	movwf	___awmod@dividend,c
  2865  00138A  6A0A               	clrf	___awmod@dividend+1,c
  2866  00138C  BE09               	btfsc	___awmod@dividend,7,c
  2867  00138E  060A               	decf	___awmod@dividend+1,f,c
  2868  001390  EC96  F015         	call	___awmod	;wreg free
  2869  001394  C009  F00F         	movff	?___awmod,___awdiv@dividend
  2870  001398  C00A  F010         	movff	?___awmod+1,___awdiv@dividend+1
  2871  00139C  EC13  F015         	call	___awdiv	;wreg free
  2872  0013A0  0E09               	movlw	9
  2873  0013A2  260F               	addwf	?___awdiv,f,c
  2874  0013A4  500F               	movf	?___awdiv,w,c
  2875  0013A6  0D04               	mullw	4
  2876  0013A8  0E01               	movlw	low __powers_
  2877  0013AA  24F3               	addwf	prodl,w,c
  2878  0013AC  6EF6               	movwf	tblptrl,c
  2879  0013AE  0E08               	movlw	high __powers_
  2880  0013B0  20F4               	addwfc	prodh,w,c
  2881  0013B2  6EF7               	movwf	tblptrh,c
  2882  0013B4                     	if	0	;There are less than 3 active tblptr bytes
  2883  0013B4                     	endif
  2884  0013B4  0009               	tblrd		*+
  2885  0013B6  CFF5 F04A          	movff	tablat,___flmul@a
  2886  0013BA  0009               	tblrd		*+
  2887  0013BC  CFF5 F04B          	movff	tablat,___flmul@a+1
  2888  0013C0  0009               	tblrd		*+
  2889  0013C2  CFF5 F04C          	movff	tablat,___flmul@a+2
  2890  0013C6  000A               	tblrd		*-
  2891  0013C8  CFF5 F04D          	movff	tablat,___flmul@a+3
  2892  0013CC  0E00               	movlw	0
  2893  0013CE  6E12               	movwf	___awdiv@divisor+1,c
  2894  0013D0  0E64               	movlw	100
  2895  0013D2  6E11               	movwf	___awdiv@divisor,c
  2896  0013D4  0100               	movlb	0	; () banked
  2897  0013D6  5179               	movf	scale@scl& (0+255),w,b
  2898  0013D8  6E0F               	movwf	___awdiv@dividend,c
  2899  0013DA  6A10               	clrf	___awdiv@dividend+1,c
  2900  0013DC  BE0F               	btfsc	___awdiv@dividend,7,c
  2901  0013DE  0610               	decf	___awdiv@dividend+1,f,c
  2902  0013E0  EC13  F015         	call	___awdiv	;wreg free
  2903  0013E4  0E12               	movlw	18
  2904  0013E6  260F               	addwf	?___awdiv,f,c
  2905  0013E8  500F               	movf	?___awdiv,w,c
  2906  0013EA  0D04               	mullw	4
  2907  0013EC  0E01               	movlw	low __powers_
  2908  0013EE  24F3               	addwf	prodl,w,c
  2909  0013F0  6EF6               	movwf	tblptrl,c
  2910  0013F2  0E08               	movlw	high __powers_
  2911  0013F4  20F4               	addwfc	prodh,w,c
  2912  0013F6  6EF7               	movwf	tblptrh,c
  2913  0013F8                     	if	0	;There are less than 3 active tblptr bytes
  2914  0013F8                     	endif
  2915  0013F8  0009               	tblrd		*+
  2916  0013FA  CFF5 F046          	movff	tablat,___flmul@b
  2917  0013FE  0009               	tblrd		*+
  2918  001400  CFF5 F047          	movff	tablat,___flmul@b+1
  2919  001404  0009               	tblrd		*+
  2920  001406  CFF5 F048          	movff	tablat,___flmul@b+2
  2921  00140A  000A               	tblrd		*-
  2922  00140C  CFF5 F049          	movff	tablat,___flmul@b+3
  2923  001410  ECAB  F00A         	call	___flmul	;wreg free
  2924  001414  C046  F075         	movff	?___flmul,_scale$2172
  2925  001418  C047  F076         	movff	?___flmul+1,_scale$2172+1
  2926  00141C  C048  F077         	movff	?___flmul+2,_scale$2172+2
  2927  001420  C049  F078         	movff	?___flmul+3,_scale$2172+3
  2928                           
  2929                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2930  001424  C075  F046         	movff	_scale$2172,___flmul@b
  2931  001428  C076  F047         	movff	_scale$2172+1,___flmul@b+1
  2932  00142C  C077  F048         	movff	_scale$2172+2,___flmul@b+2
  2933  001430  C078  F049         	movff	_scale$2172+3,___flmul@b+3
  2934  001434  0E00               	movlw	0
  2935  001436  6E0C               	movwf	___awmod@divisor+1,c
  2936  001438  0E0A               	movlw	10
  2937  00143A  6E0B               	movwf	___awmod@divisor,c
  2938  00143C  0100               	movlb	0	; () banked
  2939  00143E  5179               	movf	scale@scl& (0+255),w,b
  2940  001440  6E09               	movwf	___awmod@dividend,c
  2941  001442  6A0A               	clrf	___awmod@dividend+1,c
  2942  001444  BE09               	btfsc	___awmod@dividend,7,c
  2943  001446  060A               	decf	___awmod@dividend+1,f,c
  2944  001448  EC96  F015         	call	___awmod	;wreg free
  2945  00144C  5009               	movf	?___awmod,w,c
  2946  00144E  0D04               	mullw	4
  2947  001450  0E01               	movlw	low __powers_
  2948  001452  24F3               	addwf	prodl,w,c
  2949  001454  6EF6               	movwf	tblptrl,c
  2950  001456  0E08               	movlw	high __powers_
  2951  001458  20F4               	addwfc	prodh,w,c
  2952  00145A  6EF7               	movwf	tblptrh,c
  2953  00145C                     	if	0	;There are less than 3 active tblptr bytes
  2954  00145C                     	endif
  2955  00145C  0009               	tblrd		*+
  2956  00145E  CFF5 F04A          	movff	tablat,___flmul@a
  2957  001462  0009               	tblrd		*+
  2958  001464  CFF5 F04B          	movff	tablat,___flmul@a+1
  2959  001468  0009               	tblrd		*+
  2960  00146A  CFF5 F04C          	movff	tablat,___flmul@a+2
  2961  00146E  000A               	tblrd		*-
  2962  001470  CFF5 F04D          	movff	tablat,___flmul@a+3
  2963  001474  ECAB  F00A         	call	___flmul	;wreg free
  2964  001478  C046  F071         	movff	?___flmul,?_scale
  2965  00147C  C047  F072         	movff	?___flmul+1,?_scale+1
  2966  001480  C048  F073         	movff	?___flmul+2,?_scale+2
  2967  001484  C049  F074         	movff	?___flmul+3,?_scale+3
  2968  001488  0012               	return	
  2969  00148A                     l4677:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;doprnt.c: 446: else if(scl > 10)
  2973  00148A  5179               	movf	scale@scl& (0+255),w,b
  2974  00148C  0A80               	xorlw	128
  2975  00148E  0F75               	addlw	-139
  2976  001490  A0D8               	btfss	status,0,c
  2977  001492  D04C               	goto	l4683
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  2981  001494  0E00               	movlw	0
  2982  001496  6E12               	movwf	___awdiv@divisor+1,c
  2983  001498  0E0A               	movlw	10
  2984  00149A  6E11               	movwf	___awdiv@divisor,c
  2985  00149C  5179               	movf	scale@scl& (0+255),w,b
  2986  00149E  6E0F               	movwf	___awdiv@dividend,c
  2987  0014A0  6A10               	clrf	___awdiv@dividend+1,c
  2988  0014A2  BE0F               	btfsc	___awdiv@dividend,7,c
  2989  0014A4  0610               	decf	___awdiv@dividend+1,f,c
  2990  0014A6  EC13  F015         	call	___awdiv	;wreg free
  2991  0014AA  0E09               	movlw	9
  2992  0014AC  260F               	addwf	?___awdiv,f,c
  2993  0014AE  500F               	movf	?___awdiv,w,c
  2994  0014B0  0D04               	mullw	4
  2995  0014B2  0E01               	movlw	low __powers_
  2996  0014B4  24F3               	addwf	prodl,w,c
  2997  0014B6  6EF6               	movwf	tblptrl,c
  2998  0014B8  0E08               	movlw	high __powers_
  2999  0014BA  20F4               	addwfc	prodh,w,c
  3000  0014BC  6EF7               	movwf	tblptrh,c
  3001  0014BE                     	if	0	;There are less than 3 active tblptr bytes
  3002  0014BE                     	endif
  3003  0014BE  0009               	tblrd		*+
  3004  0014C0  CFF5 F046          	movff	tablat,___flmul@b
  3005  0014C4  0009               	tblrd		*+
  3006  0014C6  CFF5 F047          	movff	tablat,___flmul@b+1
  3007  0014CA  0009               	tblrd		*+
  3008  0014CC  CFF5 F048          	movff	tablat,___flmul@b+2
  3009  0014D0  000A               	tblrd		*-
  3010  0014D2  CFF5 F049          	movff	tablat,___flmul@b+3
  3011  0014D6  0E00               	movlw	0
  3012  0014D8  6E0C               	movwf	___awmod@divisor+1,c
  3013  0014DA  0E0A               	movlw	10
  3014  0014DC  6E0B               	movwf	___awmod@divisor,c
  3015  0014DE  0100               	movlb	0	; () banked
  3016  0014E0  5179               	movf	scale@scl& (0+255),w,b
  3017  0014E2  6E09               	movwf	___awmod@dividend,c
  3018  0014E4  6A0A               	clrf	___awmod@dividend+1,c
  3019  0014E6  BE09               	btfsc	___awmod@dividend,7,c
  3020  0014E8  060A               	decf	___awmod@dividend+1,f,c
  3021  0014EA  EC96  F015         	call	___awmod	;wreg free
  3022  0014EE  5009               	movf	?___awmod,w,c
  3023  0014F0  0D04               	mullw	4
  3024  0014F2  0E01               	movlw	low __powers_
  3025  0014F4  24F3               	addwf	prodl,w,c
  3026  0014F6  6EF6               	movwf	tblptrl,c
  3027  0014F8  0E08               	movlw	high __powers_
  3028  0014FA  20F4               	addwfc	prodh,w,c
  3029  0014FC  6EF7               	movwf	tblptrh,c
  3030  0014FE                     	if	0	;There are less than 3 active tblptr bytes
  3031  0014FE                     	endif
  3032  0014FE  0009               	tblrd		*+
  3033  001500  CFF5 F04A          	movff	tablat,___flmul@a
  3034  001504  0009               	tblrd		*+
  3035  001506  CFF5 F04B          	movff	tablat,___flmul@a+1
  3036  00150A  0009               	tblrd		*+
  3037  00150C  CFF5 F04C          	movff	tablat,___flmul@a+2
  3038  001510  000A               	tblrd		*-
  3039  001512  CFF5 F04D          	movff	tablat,___flmul@a+3
  3040  001516  ECAB  F00A         	call	___flmul	;wreg free
  3041  00151A  C046  F071         	movff	?___flmul,?_scale
  3042  00151E  C047  F072         	movff	?___flmul+1,?_scale+1
  3043  001522  C048  F073         	movff	?___flmul+2,?_scale+2
  3044  001526  C049  F074         	movff	?___flmul+3,?_scale+3
  3045  00152A  0012               	return	
  3046  00152C                     l4683:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3050  00152C  5179               	movf	scale@scl& (0+255),w,b
  3051  00152E  0D04               	mullw	4
  3052  001530  0E01               	movlw	low __powers_
  3053  001532  24F3               	addwf	prodl,w,c
  3054  001534  6EF6               	movwf	tblptrl,c
  3055  001536  0E08               	movlw	high __powers_
  3056  001538  20F4               	addwfc	prodh,w,c
  3057  00153A  6EF7               	movwf	tblptrh,c
  3058  00153C                     	if	0	;There are less than 3 active tblptr bytes
  3059  00153C                     	endif
  3060  00153C  0009               	tblrd		*+
  3061  00153E  CFF5 F071          	movff	tablat,?_scale
  3062  001542  0009               	tblrd		*+
  3063  001544  CFF5 F072          	movff	tablat,?_scale+1
  3064  001548  0009               	tblrd		*+
  3065  00154A  CFF5 F073          	movff	tablat,?_scale+2
  3066  00154E  000A               	tblrd		*-
  3067  001550  CFF5 F074          	movff	tablat,?_scale+3
  3068  001554  0012               	return		;funcret
  3069  001556                     __end_of_scale:
  3070                           	opt callstack 0
  3071                           
  3072 ;; *************** function ___awmod *****************
  3073 ;; Defined at:
  3074 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  dividend        2    8[COMRAM] int 
  3077 ;;  divisor         2   10[COMRAM] int 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  sign            1   13[COMRAM] unsigned char 
  3080 ;;  counter         1   12[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2    8[COMRAM] int 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3090 ;;      Params:         4       0       0       0       0       0       0       0       0
  3091 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3093 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3094 ;;Total ram usage:        6 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    5
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_scale
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text3
  3105  002B2C                     __ptext3:
  3106                           	opt callstack 0
  3107  002B2C                     ___awmod:
  3108                           	opt callstack 23
  3109                           
  3110                           ;incstack = 0
  3111  002B2C  0E00               	movlw	0
  3112  002B2E  6E0E               	movwf	___awmod@sign,c
  3113  002B30  AE0A               	btfss	___awmod@dividend+1,7,c
  3114  002B32  D006               	goto	l3439
  3115  002B34  6C09               	negf	___awmod@dividend,c
  3116  002B36  1E0A               	comf	___awmod@dividend+1,f,c
  3117  002B38  B0D8               	btfsc	status,0,c
  3118  002B3A  2A0A               	incf	___awmod@dividend+1,f,c
  3119  002B3C  0E01               	movlw	1
  3120  002B3E  6E0E               	movwf	___awmod@sign,c
  3121  002B40                     l3439:
  3122  002B40  AE0C               	btfss	___awmod@divisor+1,7,c
  3123  002B42  D004               	goto	l3443
  3124  002B44  6C0B               	negf	___awmod@divisor,c
  3125  002B46  1E0C               	comf	___awmod@divisor+1,f,c
  3126  002B48  B0D8               	btfsc	status,0,c
  3127  002B4A  2A0C               	incf	___awmod@divisor+1,f,c
  3128  002B4C                     l3443:
  3129  002B4C  500B               	movf	___awmod@divisor,w,c
  3130  002B4E  100C               	iorwf	___awmod@divisor+1,w,c
  3131  002B50  B4D8               	btfsc	status,2,c
  3132  002B52  D018               	goto	l3459
  3133  002B54  0E01               	movlw	1
  3134  002B56  6E0D               	movwf	___awmod@counter,c
  3135  002B58  D004               	goto	l3449
  3136  002B5A                     l3447:
  3137  002B5A  90D8               	bcf	status,0,c
  3138  002B5C  360B               	rlcf	___awmod@divisor,f,c
  3139  002B5E  360C               	rlcf	___awmod@divisor+1,f,c
  3140  002B60  2A0D               	incf	___awmod@counter,f,c
  3141  002B62                     l3449:
  3142  002B62  AE0C               	btfss	___awmod@divisor+1,7,c
  3143  002B64  D7FA               	goto	l3447
  3144  002B66                     u3070:
  3145  002B66  500B               	movf	___awmod@divisor,w,c
  3146  002B68  5C09               	subwf	___awmod@dividend,w,c
  3147  002B6A  500C               	movf	___awmod@divisor+1,w,c
  3148  002B6C  580A               	subwfb	___awmod@dividend+1,w,c
  3149  002B6E  A0D8               	btfss	status,0,c
  3150  002B70  D004               	goto	l3455
  3151  002B72  500B               	movf	___awmod@divisor,w,c
  3152  002B74  5E09               	subwf	___awmod@dividend,f,c
  3153  002B76  500C               	movf	___awmod@divisor+1,w,c
  3154  002B78  5A0A               	subwfb	___awmod@dividend+1,f,c
  3155  002B7A                     l3455:
  3156  002B7A  90D8               	bcf	status,0,c
  3157  002B7C  320C               	rrcf	___awmod@divisor+1,f,c
  3158  002B7E  320B               	rrcf	___awmod@divisor,f,c
  3159  002B80  2E0D               	decfsz	___awmod@counter,f,c
  3160  002B82  D7F1               	goto	u3070
  3161  002B84                     l3459:
  3162  002B84  500E               	movf	___awmod@sign,w,c
  3163  002B86  B4D8               	btfsc	status,2,c
  3164  002B88  D004               	goto	l3463
  3165  002B8A  6C09               	negf	___awmod@dividend,c
  3166  002B8C  1E0A               	comf	___awmod@dividend+1,f,c
  3167  002B8E  B0D8               	btfsc	status,0,c
  3168  002B90  2A0A               	incf	___awmod@dividend+1,f,c
  3169  002B92                     l3463:
  3170  002B92  C009  F009         	movff	___awmod@dividend,?___awmod
  3171  002B96  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  3172  002B9A  0012               	return		;funcret
  3173  002B9C                     __end_of___awmod:
  3174                           	opt callstack 0
  3175                           
  3176 ;; *************** function ___awdiv *****************
  3177 ;; Defined at:
  3178 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  dividend        2   14[COMRAM] int 
  3181 ;;  divisor         2   16[COMRAM] int 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  quotient        2   20[COMRAM] int 
  3184 ;;  sign            1   19[COMRAM] unsigned char 
  3185 ;;  counter         1   18[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2   14[COMRAM] int 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3195 ;;      Params:         4       0       0       0       0       0       0       0       0
  3196 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3198 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3199 ;;Total ram usage:        8 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    5
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_scale
  3206 ;;		_sprintf
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text4
  3211  002A26                     __ptext4:
  3212                           	opt callstack 0
  3213  002A26                     ___awdiv:
  3214                           	opt callstack 23
  3215                           
  3216                           ;incstack = 0
  3217  002A26  0E00               	movlw	0
  3218  002A28  6E14               	movwf	___awdiv@sign,c
  3219  002A2A  AE12               	btfss	___awdiv@divisor+1,7,c
  3220  002A2C  D006               	goto	l3395
  3221  002A2E  6C11               	negf	___awdiv@divisor,c
  3222  002A30  1E12               	comf	___awdiv@divisor+1,f,c
  3223  002A32  B0D8               	btfsc	status,0,c
  3224  002A34  2A12               	incf	___awdiv@divisor+1,f,c
  3225  002A36  0E01               	movlw	1
  3226  002A38  6E14               	movwf	___awdiv@sign,c
  3227  002A3A                     l3395:
  3228  002A3A  AE10               	btfss	___awdiv@dividend+1,7,c
  3229  002A3C  D006               	goto	l3401
  3230  002A3E  6C0F               	negf	___awdiv@dividend,c
  3231  002A40  1E10               	comf	___awdiv@dividend+1,f,c
  3232  002A42  B0D8               	btfsc	status,0,c
  3233  002A44  2A10               	incf	___awdiv@dividend+1,f,c
  3234  002A46  0E01               	movlw	1
  3235  002A48  1A14               	xorwf	___awdiv@sign,f,c
  3236  002A4A                     l3401:
  3237  002A4A  0E00               	movlw	0
  3238  002A4C  6E16               	movwf	___awdiv@quotient+1,c
  3239  002A4E  0E00               	movlw	0
  3240  002A50  6E15               	movwf	___awdiv@quotient,c
  3241  002A52  5011               	movf	___awdiv@divisor,w,c
  3242  002A54  1012               	iorwf	___awdiv@divisor+1,w,c
  3243  002A56  B4D8               	btfsc	status,2,c
  3244  002A58  D01C               	goto	l3423
  3245  002A5A  0E01               	movlw	1
  3246  002A5C  6E13               	movwf	___awdiv@counter,c
  3247  002A5E  D004               	goto	l3409
  3248  002A60                     l3407:
  3249  002A60  90D8               	bcf	status,0,c
  3250  002A62  3611               	rlcf	___awdiv@divisor,f,c
  3251  002A64  3612               	rlcf	___awdiv@divisor+1,f,c
  3252  002A66  2A13               	incf	___awdiv@counter,f,c
  3253  002A68                     l3409:
  3254  002A68  AE12               	btfss	___awdiv@divisor+1,7,c
  3255  002A6A  D7FA               	goto	l3407
  3256  002A6C                     u3010:
  3257  002A6C  90D8               	bcf	status,0,c
  3258  002A6E  3615               	rlcf	___awdiv@quotient,f,c
  3259  002A70  3616               	rlcf	___awdiv@quotient+1,f,c
  3260  002A72  5011               	movf	___awdiv@divisor,w,c
  3261  002A74  5C0F               	subwf	___awdiv@dividend,w,c
  3262  002A76  5012               	movf	___awdiv@divisor+1,w,c
  3263  002A78  5810               	subwfb	___awdiv@dividend+1,w,c
  3264  002A7A  A0D8               	btfss	status,0,c
  3265  002A7C  D005               	goto	l3419
  3266  002A7E  5011               	movf	___awdiv@divisor,w,c
  3267  002A80  5E0F               	subwf	___awdiv@dividend,f,c
  3268  002A82  5012               	movf	___awdiv@divisor+1,w,c
  3269  002A84  5A10               	subwfb	___awdiv@dividend+1,f,c
  3270  002A86  8015               	bsf	___awdiv@quotient,0,c
  3271  002A88                     l3419:
  3272  002A88  90D8               	bcf	status,0,c
  3273  002A8A  3212               	rrcf	___awdiv@divisor+1,f,c
  3274  002A8C  3211               	rrcf	___awdiv@divisor,f,c
  3275  002A8E  2E13               	decfsz	___awdiv@counter,f,c
  3276  002A90  D7ED               	goto	u3010
  3277  002A92                     l3423:
  3278  002A92  5014               	movf	___awdiv@sign,w,c
  3279  002A94  B4D8               	btfsc	status,2,c
  3280  002A96  D004               	goto	l3427
  3281  002A98  6C15               	negf	___awdiv@quotient,c
  3282  002A9A  1E16               	comf	___awdiv@quotient+1,f,c
  3283  002A9C  B0D8               	btfsc	status,0,c
  3284  002A9E  2A16               	incf	___awdiv@quotient+1,f,c
  3285  002AA0                     l3427:
  3286  002AA0  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  3287  002AA4  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  3288  002AA8  0012               	return		;funcret
  3289  002AAA                     __end_of___awdiv:
  3290                           	opt callstack 0
  3291                           
  3292 ;; *************** function _isdigit *****************
  3293 ;; Defined at:
  3294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  c               1    wreg     unsigned char 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  c               1   10[COMRAM] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;		None               void
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0
  3309 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3310 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3311 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3312 ;;Total ram usage:        3 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    5
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_sprintf
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text5
  3323  002F0A                     __ptext5:
  3324                           	opt callstack 0
  3325  002F0A                     _isdigit:
  3326                           	opt callstack 24
  3327                           
  3328                           ;incstack = 0
  3329                           ;isdigit@c stored from wreg
  3330  002F0A  6E0B               	movwf	isdigit@c,c
  3331  002F0C  0E00               	movlw	0
  3332  002F0E  6E0A               	movwf	_isdigit$1902,c
  3333  002F10  0E3A               	movlw	58
  3334  002F12  600B               	cpfslt	isdigit@c,c
  3335  002F14  D005               	goto	l3625
  3336  002F16  0E2F               	movlw	47
  3337  002F18  640B               	cpfsgt	isdigit@c,c
  3338  002F1A  D002               	goto	l3625
  3339  002F1C  0E01               	movlw	1
  3340  002F1E  6E0A               	movwf	_isdigit$1902,c
  3341  002F20                     l3625:
  3342  002F20  C00A  F009         	movff	_isdigit$1902,??_isdigit
  3343  002F24  3009               	rrcf	??_isdigit,w,c
  3344  002F26  0012               	return		;funcret
  3345  002F28                     __end_of_isdigit:
  3346                           	opt callstack 0
  3347                           
  3348 ;; *************** function _fround *****************
  3349 ;; Defined at:
  3350 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  prec            1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  prec            1   29[BANK0 ] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  4   17[BANK0 ] unsigned char 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3364 ;;      Params:         0       4       0       0       0       0       0       0       0
  3365 ;;      Locals:         0       9       0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3367 ;;      Totals:         0      13       0       0       0       0       0       0       0
  3368 ;;Total ram usage:       13 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    6
  3371 ;; This function calls:
  3372 ;;		___flmul
  3373 ;;		___lwdiv
  3374 ;;		___lwmod
  3375 ;; This function is called by:
  3376 ;;		_sprintf
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text6
  3381  001BB6                     __ptext6:
  3382                           	opt callstack 0
  3383  001BB6                     _fround:
  3384                           	opt callstack 23
  3385                           
  3386                           ;incstack = 0
  3387                           ;fround@prec stored from wreg
  3388  001BB6  0100               	movlb	0	; () banked
  3389  001BB8  6F7D               	movwf	fround@prec& (0+255),b
  3390                           
  3391                           ;doprnt.c: 421: if(prec>=110)
  3392  001BBA  0E6D               	movlw	109
  3393  001BBC  0100               	movlb	0	; () banked
  3394  001BBE  657D               	cpfsgt	fround@prec& (0+255),b
  3395  001BC0  D0AC               	goto	l4639
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3399  001BC2  0E00               	movlw	0
  3400  001BC4  6E4A               	movwf	___flmul@a,c
  3401  001BC6  0E00               	movlw	0
  3402  001BC8  6E4B               	movwf	___flmul@a+1,c
  3403  001BCA  0E00               	movlw	0
  3404  001BCC  6E4C               	movwf	___flmul@a+2,c
  3405  001BCE  0E3F               	movlw	63
  3406  001BD0  6E4D               	movwf	___flmul@a+3,c
  3407  001BD2  0E00               	movlw	0
  3408  001BD4  6E11               	movwf	___lwdiv@divisor+1,c
  3409  001BD6  0E64               	movlw	100
  3410  001BD8  6E10               	movwf	___lwdiv@divisor,c
  3411  001BDA  C07D  F00E         	movff	fround@prec,___lwdiv@dividend
  3412  001BDE  6A0F               	clrf	___lwdiv@dividend+1,c
  3413  001BE0  EC2E  F016         	call	___lwdiv	;wreg free
  3414  001BE4  90D8               	bcf	status,0,c
  3415  001BE6  360E               	rlcf	?___lwdiv,f,c
  3416  001BE8  360F               	rlcf	?___lwdiv+1,f,c
  3417  001BEA  90D8               	bcf	status,0,c
  3418  001BEC  360E               	rlcf	?___lwdiv,f,c
  3419  001BEE  360F               	rlcf	?___lwdiv+1,f,c
  3420  001BF0  0E48               	movlw	72
  3421  001BF2  260E               	addwf	?___lwdiv,f,c
  3422  001BF4  0E00               	movlw	0
  3423  001BF6  220F               	addwfc	?___lwdiv+1,f,c
  3424  001BF8  0E35               	movlw	low __npowers_
  3425  001BFA  240E               	addwf	?___lwdiv,w,c
  3426  001BFC  6EF6               	movwf	tblptrl,c
  3427  001BFE  0E08               	movlw	high __npowers_
  3428  001C00  200F               	addwfc	?___lwdiv+1,w,c
  3429  001C02  6EF7               	movwf	tblptrh,c
  3430  001C04                     	if	0	;There are less than 3 active tblptr bytes
  3431  001C04                     	endif
  3432  001C04  0009               	tblrd		*+
  3433  001C06  CFF5 F046          	movff	tablat,___flmul@b
  3434  001C0A  0009               	tblrd		*+
  3435  001C0C  CFF5 F047          	movff	tablat,___flmul@b+1
  3436  001C10  0009               	tblrd		*+
  3437  001C12  CFF5 F048          	movff	tablat,___flmul@b+2
  3438  001C16  000A               	tblrd		*-
  3439  001C18  CFF5 F049          	movff	tablat,___flmul@b+3
  3440  001C1C  ECAB  F00A         	call	___flmul	;wreg free
  3441  001C20  C046  F079         	movff	?___flmul,_fround$2170
  3442  001C24  C047  F07A         	movff	?___flmul+1,_fround$2170+1
  3443  001C28  C048  F07B         	movff	?___flmul+2,_fround$2170+2
  3444  001C2C  C049  F07C         	movff	?___flmul+3,_fround$2170+3
  3445                           
  3446                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3447  001C30  0E00               	movlw	0
  3448  001C32  6E11               	movwf	___lwdiv@divisor+1,c
  3449  001C34  0E0A               	movlw	10
  3450  001C36  6E10               	movwf	___lwdiv@divisor,c
  3451  001C38  0E00               	movlw	0
  3452  001C3A  6E0C               	movwf	___lwmod@divisor+1,c
  3453  001C3C  0E64               	movlw	100
  3454  001C3E  6E0B               	movwf	___lwmod@divisor,c
  3455  001C40  C07D  F009         	movff	fround@prec,___lwmod@dividend
  3456  001C44  6A0A               	clrf	___lwmod@dividend+1,c
  3457  001C46  EC9E  F016         	call	___lwmod	;wreg free
  3458  001C4A  C009  F00E         	movff	?___lwmod,___lwdiv@dividend
  3459  001C4E  C00A  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  3460  001C52  EC2E  F016         	call	___lwdiv	;wreg free
  3461  001C56  90D8               	bcf	status,0,c
  3462  001C58  360E               	rlcf	?___lwdiv,f,c
  3463  001C5A  360F               	rlcf	?___lwdiv+1,f,c
  3464  001C5C  90D8               	bcf	status,0,c
  3465  001C5E  360E               	rlcf	?___lwdiv,f,c
  3466  001C60  360F               	rlcf	?___lwdiv+1,f,c
  3467  001C62  0E24               	movlw	36
  3468  001C64  260E               	addwf	?___lwdiv,f,c
  3469  001C66  0E00               	movlw	0
  3470  001C68  220F               	addwfc	?___lwdiv+1,f,c
  3471  001C6A  0E35               	movlw	low __npowers_
  3472  001C6C  240E               	addwf	?___lwdiv,w,c
  3473  001C6E  6EF6               	movwf	tblptrl,c
  3474  001C70  0E08               	movlw	high __npowers_
  3475  001C72  200F               	addwfc	?___lwdiv+1,w,c
  3476  001C74  6EF7               	movwf	tblptrh,c
  3477  001C76                     	if	0	;There are less than 3 active tblptr bytes
  3478  001C76                     	endif
  3479  001C76  0009               	tblrd		*+
  3480  001C78  CFF5 F04A          	movff	tablat,___flmul@a
  3481  001C7C  0009               	tblrd		*+
  3482  001C7E  CFF5 F04B          	movff	tablat,___flmul@a+1
  3483  001C82  0009               	tblrd		*+
  3484  001C84  CFF5 F04C          	movff	tablat,___flmul@a+2
  3485  001C88  000A               	tblrd		*-
  3486  001C8A  CFF5 F04D          	movff	tablat,___flmul@a+3
  3487  001C8E  C079  F046         	movff	_fround$2170,___flmul@b
  3488  001C92  C07A  F047         	movff	_fround$2170+1,___flmul@b+1
  3489  001C96  C07B  F048         	movff	_fround$2170+2,___flmul@b+2
  3490  001C9A  C07C  F049         	movff	_fround$2170+3,___flmul@b+3
  3491  001C9E  ECAB  F00A         	call	___flmul	;wreg free
  3492  001CA2  C046  F075         	movff	?___flmul,_fround$2171
  3493  001CA6  C047  F076         	movff	?___flmul+1,_fround$2171+1
  3494  001CAA  C048  F077         	movff	?___flmul+2,_fround$2171+2
  3495  001CAE  C049  F078         	movff	?___flmul+3,_fround$2171+3
  3496                           
  3497                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3498  001CB2  C075  F046         	movff	_fround$2171,___flmul@b
  3499  001CB6  C076  F047         	movff	_fround$2171+1,___flmul@b+1
  3500  001CBA  C077  F048         	movff	_fround$2171+2,___flmul@b+2
  3501  001CBE  C078  F049         	movff	_fround$2171+3,___flmul@b+3
  3502  001CC2  0E00               	movlw	0
  3503  001CC4  6E0C               	movwf	___lwmod@divisor+1,c
  3504  001CC6  0E0A               	movlw	10
  3505  001CC8  6E0B               	movwf	___lwmod@divisor,c
  3506  001CCA  C07D  F009         	movff	fround@prec,___lwmod@dividend
  3507  001CCE  6A0A               	clrf	___lwmod@dividend+1,c
  3508  001CD0  EC9E  F016         	call	___lwmod	;wreg free
  3509  001CD4  90D8               	bcf	status,0,c
  3510  001CD6  3609               	rlcf	?___lwmod,f,c
  3511  001CD8  360A               	rlcf	?___lwmod+1,f,c
  3512  001CDA  90D8               	bcf	status,0,c
  3513  001CDC  3609               	rlcf	?___lwmod,f,c
  3514  001CDE  360A               	rlcf	?___lwmod+1,f,c
  3515  001CE0  0E35               	movlw	low __npowers_
  3516  001CE2  2409               	addwf	?___lwmod,w,c
  3517  001CE4  6EF6               	movwf	tblptrl,c
  3518  001CE6  0E08               	movlw	high __npowers_
  3519  001CE8  200A               	addwfc	?___lwmod+1,w,c
  3520  001CEA  6EF7               	movwf	tblptrh,c
  3521  001CEC                     	if	0	;There are less than 3 active tblptr bytes
  3522  001CEC                     	endif
  3523  001CEC  0009               	tblrd		*+
  3524  001CEE  CFF5 F04A          	movff	tablat,___flmul@a
  3525  001CF2  0009               	tblrd		*+
  3526  001CF4  CFF5 F04B          	movff	tablat,___flmul@a+1
  3527  001CF8  0009               	tblrd		*+
  3528  001CFA  CFF5 F04C          	movff	tablat,___flmul@a+2
  3529  001CFE  000A               	tblrd		*-
  3530  001D00  CFF5 F04D          	movff	tablat,___flmul@a+3
  3531  001D04  ECAB  F00A         	call	___flmul	;wreg free
  3532  001D08  C046  F071         	movff	?___flmul,?_fround
  3533  001D0C  C047  F072         	movff	?___flmul+1,?_fround+1
  3534  001D10  C048  F073         	movff	?___flmul+2,?_fround+2
  3535  001D14  C049  F074         	movff	?___flmul+3,?_fround+3
  3536  001D18  0012               	return	
  3537  001D1A                     l4639:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;doprnt.c: 423: else if(prec > 10)
  3541  001D1A  0E0A               	movlw	10
  3542  001D1C  657D               	cpfsgt	fround@prec& (0+255),b
  3543  001D1E  D06B               	goto	l4645
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3547  001D20  0E00               	movlw	0
  3548  001D22  6E4A               	movwf	___flmul@a,c
  3549  001D24  0E00               	movlw	0
  3550  001D26  6E4B               	movwf	___flmul@a+1,c
  3551  001D28  0E00               	movlw	0
  3552  001D2A  6E4C               	movwf	___flmul@a+2,c
  3553  001D2C  0E3F               	movlw	63
  3554  001D2E  6E4D               	movwf	___flmul@a+3,c
  3555  001D30  0E00               	movlw	0
  3556  001D32  6E11               	movwf	___lwdiv@divisor+1,c
  3557  001D34  0E0A               	movlw	10
  3558  001D36  6E10               	movwf	___lwdiv@divisor,c
  3559  001D38  C07D  F00E         	movff	fround@prec,___lwdiv@dividend
  3560  001D3C  6A0F               	clrf	___lwdiv@dividend+1,c
  3561  001D3E  EC2E  F016         	call	___lwdiv	;wreg free
  3562  001D42  90D8               	bcf	status,0,c
  3563  001D44  360E               	rlcf	?___lwdiv,f,c
  3564  001D46  360F               	rlcf	?___lwdiv+1,f,c
  3565  001D48  90D8               	bcf	status,0,c
  3566  001D4A  360E               	rlcf	?___lwdiv,f,c
  3567  001D4C  360F               	rlcf	?___lwdiv+1,f,c
  3568  001D4E  0E24               	movlw	36
  3569  001D50  260E               	addwf	?___lwdiv,f,c
  3570  001D52  0E00               	movlw	0
  3571  001D54  220F               	addwfc	?___lwdiv+1,f,c
  3572  001D56  0E35               	movlw	low __npowers_
  3573  001D58  240E               	addwf	?___lwdiv,w,c
  3574  001D5A  6EF6               	movwf	tblptrl,c
  3575  001D5C  0E08               	movlw	high __npowers_
  3576  001D5E  200F               	addwfc	?___lwdiv+1,w,c
  3577  001D60  6EF7               	movwf	tblptrh,c
  3578  001D62                     	if	0	;There are less than 3 active tblptr bytes
  3579  001D62                     	endif
  3580  001D62  0009               	tblrd		*+
  3581  001D64  CFF5 F046          	movff	tablat,___flmul@b
  3582  001D68  0009               	tblrd		*+
  3583  001D6A  CFF5 F047          	movff	tablat,___flmul@b+1
  3584  001D6E  0009               	tblrd		*+
  3585  001D70  CFF5 F048          	movff	tablat,___flmul@b+2
  3586  001D74  000A               	tblrd		*-
  3587  001D76  CFF5 F049          	movff	tablat,___flmul@b+3
  3588  001D7A  ECAB  F00A         	call	___flmul	;wreg free
  3589  001D7E  C046  F079         	movff	?___flmul,_fround$2170
  3590  001D82  C047  F07A         	movff	?___flmul+1,_fround$2170+1
  3591  001D86  C048  F07B         	movff	?___flmul+2,_fround$2170+2
  3592  001D8A  C049  F07C         	movff	?___flmul+3,_fround$2170+3
  3593                           
  3594                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3595  001D8E  C079  F046         	movff	_fround$2170,___flmul@b
  3596  001D92  C07A  F047         	movff	_fround$2170+1,___flmul@b+1
  3597  001D96  C07B  F048         	movff	_fround$2170+2,___flmul@b+2
  3598  001D9A  C07C  F049         	movff	_fround$2170+3,___flmul@b+3
  3599  001D9E  0E00               	movlw	0
  3600  001DA0  6E0C               	movwf	___lwmod@divisor+1,c
  3601  001DA2  0E0A               	movlw	10
  3602  001DA4  6E0B               	movwf	___lwmod@divisor,c
  3603  001DA6  C07D  F009         	movff	fround@prec,___lwmod@dividend
  3604  001DAA  6A0A               	clrf	___lwmod@dividend+1,c
  3605  001DAC  EC9E  F016         	call	___lwmod	;wreg free
  3606  001DB0  90D8               	bcf	status,0,c
  3607  001DB2  3609               	rlcf	?___lwmod,f,c
  3608  001DB4  360A               	rlcf	?___lwmod+1,f,c
  3609  001DB6  90D8               	bcf	status,0,c
  3610  001DB8  3609               	rlcf	?___lwmod,f,c
  3611  001DBA  360A               	rlcf	?___lwmod+1,f,c
  3612  001DBC  0E35               	movlw	low __npowers_
  3613  001DBE  2409               	addwf	?___lwmod,w,c
  3614  001DC0  6EF6               	movwf	tblptrl,c
  3615  001DC2  0E08               	movlw	high __npowers_
  3616  001DC4  200A               	addwfc	?___lwmod+1,w,c
  3617  001DC6  6EF7               	movwf	tblptrh,c
  3618  001DC8                     	if	0	;There are less than 3 active tblptr bytes
  3619  001DC8                     	endif
  3620  001DC8  0009               	tblrd		*+
  3621  001DCA  CFF5 F04A          	movff	tablat,___flmul@a
  3622  001DCE  0009               	tblrd		*+
  3623  001DD0  CFF5 F04B          	movff	tablat,___flmul@a+1
  3624  001DD4  0009               	tblrd		*+
  3625  001DD6  CFF5 F04C          	movff	tablat,___flmul@a+2
  3626  001DDA  000A               	tblrd		*-
  3627  001DDC  CFF5 F04D          	movff	tablat,___flmul@a+3
  3628  001DE0  ECAB  F00A         	call	___flmul	;wreg free
  3629  001DE4  C046  F071         	movff	?___flmul,?_fround
  3630  001DE8  C047  F072         	movff	?___flmul+1,?_fround+1
  3631  001DEC  C048  F073         	movff	?___flmul+2,?_fround+2
  3632  001DF0  C049  F074         	movff	?___flmul+3,?_fround+3
  3633  001DF4  0012               	return	
  3634  001DF6                     l4645:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3638  001DF6  517D               	movf	fround@prec& (0+255),w,b
  3639  001DF8  0D04               	mullw	4
  3640  001DFA  0E35               	movlw	low __npowers_
  3641  001DFC  24F3               	addwf	prodl,w,c
  3642  001DFE  6EF6               	movwf	tblptrl,c
  3643  001E00  0E08               	movlw	high __npowers_
  3644  001E02  20F4               	addwfc	prodh,w,c
  3645  001E04  6EF7               	movwf	tblptrh,c
  3646  001E06                     	if	0	;There are less than 3 active tblptr bytes
  3647  001E06                     	endif
  3648  001E06  0009               	tblrd		*+
  3649  001E08  CFF5 F046          	movff	tablat,___flmul@b
  3650  001E0C  0009               	tblrd		*+
  3651  001E0E  CFF5 F047          	movff	tablat,___flmul@b+1
  3652  001E12  0009               	tblrd		*+
  3653  001E14  CFF5 F048          	movff	tablat,___flmul@b+2
  3654  001E18  000A               	tblrd		*-
  3655  001E1A  CFF5 F049          	movff	tablat,___flmul@b+3
  3656  001E1E  0E00               	movlw	0
  3657  001E20  6E4A               	movwf	___flmul@a,c
  3658  001E22  0E00               	movlw	0
  3659  001E24  6E4B               	movwf	___flmul@a+1,c
  3660  001E26  0E00               	movlw	0
  3661  001E28  6E4C               	movwf	___flmul@a+2,c
  3662  001E2A  0E3F               	movlw	63
  3663  001E2C  6E4D               	movwf	___flmul@a+3,c
  3664  001E2E  ECAB  F00A         	call	___flmul	;wreg free
  3665  001E32  C046  F071         	movff	?___flmul,?_fround
  3666  001E36  C047  F072         	movff	?___flmul+1,?_fround+1
  3667  001E3A  C048  F073         	movff	?___flmul+2,?_fround+2
  3668  001E3E  C049  F074         	movff	?___flmul+3,?_fround+3
  3669  001E42  0012               	return		;funcret
  3670  001E44                     __end_of_fround:
  3671                           	opt callstack 0
  3672                           
  3673 ;; *************** function ___lwmod *****************
  3674 ;; Defined at:
  3675 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  dividend        2    8[COMRAM] unsigned int 
  3678 ;;  divisor         2   10[COMRAM] unsigned int 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  counter         1   12[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  2    8[COMRAM] unsigned int 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3690 ;;      Params:         4       0       0       0       0       0       0       0       0
  3691 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3693 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3694 ;;Total ram usage:        5 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    5
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_fround
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text7
  3705  002D3C                     __ptext7:
  3706                           	opt callstack 0
  3707  002D3C                     ___lwmod:
  3708                           	opt callstack 23
  3709                           
  3710                           ;incstack = 0
  3711  002D3C  500B               	movf	___lwmod@divisor,w,c
  3712  002D3E  100C               	iorwf	___lwmod@divisor+1,w,c
  3713  002D40  B4D8               	btfsc	status,2,c
  3714  002D42  D018               	goto	l1138
  3715  002D44  0E01               	movlw	1
  3716  002D46  6E0D               	movwf	___lwmod@counter,c
  3717  002D48  D004               	goto	l3495
  3718  002D4A                     l3493:
  3719  002D4A  90D8               	bcf	status,0,c
  3720  002D4C  360B               	rlcf	___lwmod@divisor,f,c
  3721  002D4E  360C               	rlcf	___lwmod@divisor+1,f,c
  3722  002D50  2A0D               	incf	___lwmod@counter,f,c
  3723  002D52                     l3495:
  3724  002D52  AE0C               	btfss	___lwmod@divisor+1,7,c
  3725  002D54  D7FA               	goto	l3493
  3726  002D56                     u3140:
  3727  002D56  500B               	movf	___lwmod@divisor,w,c
  3728  002D58  5C09               	subwf	___lwmod@dividend,w,c
  3729  002D5A  500C               	movf	___lwmod@divisor+1,w,c
  3730  002D5C  580A               	subwfb	___lwmod@dividend+1,w,c
  3731  002D5E  A0D8               	btfss	status,0,c
  3732  002D60  D004               	goto	l3501
  3733  002D62  500B               	movf	___lwmod@divisor,w,c
  3734  002D64  5E09               	subwf	___lwmod@dividend,f,c
  3735  002D66  500C               	movf	___lwmod@divisor+1,w,c
  3736  002D68  5A0A               	subwfb	___lwmod@dividend+1,f,c
  3737  002D6A                     l3501:
  3738  002D6A  90D8               	bcf	status,0,c
  3739  002D6C  320C               	rrcf	___lwmod@divisor+1,f,c
  3740  002D6E  320B               	rrcf	___lwmod@divisor,f,c
  3741  002D70  2E0D               	decfsz	___lwmod@counter,f,c
  3742  002D72  D7F1               	goto	u3140
  3743  002D74                     l1138:
  3744  002D74  C009  F009         	movff	___lwmod@dividend,?___lwmod
  3745  002D78  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  3746  002D7C  0012               	return		;funcret
  3747  002D7E                     __end_of___lwmod:
  3748                           	opt callstack 0
  3749                           
  3750 ;; *************** function ___lwdiv *****************
  3751 ;; Defined at:
  3752 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  dividend        2   13[COMRAM] unsigned int 
  3755 ;;  divisor         2   15[COMRAM] unsigned int 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  quotient        2   17[COMRAM] unsigned int 
  3758 ;;  counter         1   19[COMRAM] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   13[COMRAM] unsigned int 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3768 ;;      Params:         4       0       0       0       0       0       0       0       0
  3769 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3771 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3772 ;;Total ram usage:        7 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    5
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_fround
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text8
  3783  002C5C                     __ptext8:
  3784                           	opt callstack 0
  3785  002C5C                     ___lwdiv:
  3786                           	opt callstack 23
  3787                           
  3788                           ;incstack = 0
  3789  002C5C  0E00               	movlw	0
  3790  002C5E  6E13               	movwf	___lwdiv@quotient+1,c
  3791  002C60  0E00               	movlw	0
  3792  002C62  6E12               	movwf	___lwdiv@quotient,c
  3793  002C64  5010               	movf	___lwdiv@divisor,w,c
  3794  002C66  1011               	iorwf	___lwdiv@divisor+1,w,c
  3795  002C68  B4D8               	btfsc	status,2,c
  3796  002C6A  D01C               	goto	l1128
  3797  002C6C  0E01               	movlw	1
  3798  002C6E  6E14               	movwf	___lwdiv@counter,c
  3799  002C70  D004               	goto	l3475
  3800  002C72                     l3473:
  3801  002C72  90D8               	bcf	status,0,c
  3802  002C74  3610               	rlcf	___lwdiv@divisor,f,c
  3803  002C76  3611               	rlcf	___lwdiv@divisor+1,f,c
  3804  002C78  2A14               	incf	___lwdiv@counter,f,c
  3805  002C7A                     l3475:
  3806  002C7A  AE11               	btfss	___lwdiv@divisor+1,7,c
  3807  002C7C  D7FA               	goto	l3473
  3808  002C7E                     u3110:
  3809  002C7E  90D8               	bcf	status,0,c
  3810  002C80  3612               	rlcf	___lwdiv@quotient,f,c
  3811  002C82  3613               	rlcf	___lwdiv@quotient+1,f,c
  3812  002C84  5010               	movf	___lwdiv@divisor,w,c
  3813  002C86  5C0E               	subwf	___lwdiv@dividend,w,c
  3814  002C88  5011               	movf	___lwdiv@divisor+1,w,c
  3815  002C8A  580F               	subwfb	___lwdiv@dividend+1,w,c
  3816  002C8C  A0D8               	btfss	status,0,c
  3817  002C8E  D005               	goto	l3485
  3818  002C90  5010               	movf	___lwdiv@divisor,w,c
  3819  002C92  5E0E               	subwf	___lwdiv@dividend,f,c
  3820  002C94  5011               	movf	___lwdiv@divisor+1,w,c
  3821  002C96  5A0F               	subwfb	___lwdiv@dividend+1,f,c
  3822  002C98  8012               	bsf	___lwdiv@quotient,0,c
  3823  002C9A                     l3485:
  3824  002C9A  90D8               	bcf	status,0,c
  3825  002C9C  3211               	rrcf	___lwdiv@divisor+1,f,c
  3826  002C9E  3210               	rrcf	___lwdiv@divisor,f,c
  3827  002CA0  2E14               	decfsz	___lwdiv@counter,f,c
  3828  002CA2  D7ED               	goto	u3110
  3829  002CA4                     l1128:
  3830  002CA4  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  3831  002CA8  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3832  002CAC  0012               	return		;funcret
  3833  002CAE                     __end_of___lwdiv:
  3834                           	opt callstack 0
  3835                           
  3836 ;; *************** function ___flmul *****************
  3837 ;; Defined at:
  3838 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  b               4   69[COMRAM] unsigned int 
  3841 ;;  a               4   73[COMRAM] unsigned int 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  prod            4   11[BANK0 ] struct .
  3844 ;;  grs             4    6[BANK0 ] unsigned long 
  3845 ;;  temp            2   15[BANK0 ] struct .
  3846 ;;  bexp            1   10[BANK0 ] unsigned char 
  3847 ;;  aexp            1    5[BANK0 ] unsigned char 
  3848 ;;  sign            1    4[BANK0 ] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  4   69[COMRAM] unsigned char 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, prodl, prodh
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3858 ;;      Params:         8       0       0       0       0       0       0       0       0
  3859 ;;      Locals:         0      13       0       0       0       0       0       0       0
  3860 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3861 ;;      Totals:         8      17       0       0       0       0       0       0       0
  3862 ;;Total ram usage:       25 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    5
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;;		_fround
  3870 ;;		_scale
  3871 ;;		_sprintf
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text9
  3876  001556                     __ptext9:
  3877                           	opt callstack 0
  3878  001556                     ___flmul:
  3879                           	opt callstack 23
  3880                           
  3881                           ;incstack = 0
  3882  001556  5049               	movf	___flmul@b+3,w,c
  3883  001558  0B80               	andlw	128
  3884  00155A  0100               	movlb	0	; () banked
  3885  00155C  6F64               	movwf	___flmul@sign& (0+255),b
  3886  00155E  5049               	movf	___flmul@b+3,w,c
  3887  001560  2449               	addwf	___flmul@b+3,w,c
  3888  001562  6F6A               	movwf	___flmul@bexp& (0+255),b
  3889                           
  3890                           ; BSR set to: 0
  3891  001564  BE48               	btfsc	___flmul@b+2,7,c
  3892                           
  3893                           ; BSR set to: 0
  3894  001566  816A               	bsf	___flmul@bexp& (0+255),0,b
  3895                           
  3896                           ; BSR set to: 0
  3897  001568  516A               	movf	___flmul@bexp& (0+255),w,b
  3898  00156A  B4D8               	btfsc	status,2,c
  3899  00156C  D00D               	goto	l4515
  3900                           
  3901                           ; BSR set to: 0
  3902  00156E  296A               	incf	___flmul@bexp& (0+255),w,b
  3903  001570  A4D8               	btfss	status,2,c
  3904  001572  D008               	goto	l4513
  3905                           
  3906                           ; BSR set to: 0
  3907  001574  0E00               	movlw	0
  3908  001576  6E46               	movwf	___flmul@b,c
  3909  001578  0E00               	movlw	0
  3910  00157A  6E47               	movwf	___flmul@b+1,c
  3911  00157C  0E00               	movlw	0
  3912  00157E  6E48               	movwf	___flmul@b+2,c
  3913  001580  0E00               	movlw	0
  3914  001582  6E49               	movwf	___flmul@b+3,c
  3915  001584                     l4513:
  3916                           
  3917                           ; BSR set to: 0
  3918  001584  8E48               	bsf	___flmul@b+2,7,c
  3919  001586  D008               	goto	l4517
  3920  001588                     l4515:
  3921                           
  3922                           ; BSR set to: 0
  3923  001588  0E00               	movlw	0
  3924  00158A  6E46               	movwf	___flmul@b,c
  3925  00158C  0E00               	movlw	0
  3926  00158E  6E47               	movwf	___flmul@b+1,c
  3927  001590  0E00               	movlw	0
  3928  001592  6E48               	movwf	___flmul@b+2,c
  3929  001594  0E00               	movlw	0
  3930  001596  6E49               	movwf	___flmul@b+3,c
  3931  001598                     l4517:
  3932                           
  3933                           ; BSR set to: 0
  3934  001598  504D               	movf	___flmul@a+3,w,c
  3935  00159A  0B80               	andlw	128
  3936  00159C  1B64               	xorwf	___flmul@sign& (0+255),f,b
  3937                           
  3938                           ; BSR set to: 0
  3939  00159E  504D               	movf	___flmul@a+3,w,c
  3940  0015A0  244D               	addwf	___flmul@a+3,w,c
  3941  0015A2  6F65               	movwf	___flmul@aexp& (0+255),b
  3942                           
  3943                           ; BSR set to: 0
  3944  0015A4  BE4C               	btfsc	___flmul@a+2,7,c
  3945                           
  3946                           ; BSR set to: 0
  3947  0015A6  8165               	bsf	___flmul@aexp& (0+255),0,b
  3948                           
  3949                           ; BSR set to: 0
  3950  0015A8  5165               	movf	___flmul@aexp& (0+255),w,b
  3951  0015AA  B4D8               	btfsc	status,2,c
  3952  0015AC  D00D               	goto	l4533
  3953                           
  3954                           ; BSR set to: 0
  3955  0015AE  2965               	incf	___flmul@aexp& (0+255),w,b
  3956  0015B0  A4D8               	btfss	status,2,c
  3957  0015B2  D008               	goto	l4531
  3958                           
  3959                           ; BSR set to: 0
  3960  0015B4  0E00               	movlw	0
  3961  0015B6  6E4A               	movwf	___flmul@a,c
  3962  0015B8  0E00               	movlw	0
  3963  0015BA  6E4B               	movwf	___flmul@a+1,c
  3964  0015BC  0E00               	movlw	0
  3965  0015BE  6E4C               	movwf	___flmul@a+2,c
  3966  0015C0  0E00               	movlw	0
  3967  0015C2  6E4D               	movwf	___flmul@a+3,c
  3968  0015C4                     l4531:
  3969                           
  3970                           ; BSR set to: 0
  3971  0015C4  8E4C               	bsf	___flmul@a+2,7,c
  3972  0015C6  D008               	goto	l1251
  3973  0015C8                     l4533:
  3974                           
  3975                           ; BSR set to: 0
  3976  0015C8  0E00               	movlw	0
  3977  0015CA  6E4A               	movwf	___flmul@a,c
  3978  0015CC  0E00               	movlw	0
  3979  0015CE  6E4B               	movwf	___flmul@a+1,c
  3980  0015D0  0E00               	movlw	0
  3981  0015D2  6E4C               	movwf	___flmul@a+2,c
  3982  0015D4  0E00               	movlw	0
  3983  0015D6  6E4D               	movwf	___flmul@a+3,c
  3984  0015D8                     l1251:
  3985                           
  3986                           ; BSR set to: 0
  3987  0015D8  5165               	movf	___flmul@aexp& (0+255),w,b
  3988  0015DA  B4D8               	btfsc	status,2,c
  3989  0015DC  D003               	goto	u4730
  3990                           
  3991                           ; BSR set to: 0
  3992  0015DE  516A               	movf	___flmul@bexp& (0+255),w,b
  3993  0015E0  A4D8               	btfss	status,2,c
  3994  0015E2  D009               	goto	l4541
  3995  0015E4                     u4730:
  3996                           
  3997                           ; BSR set to: 0
  3998  0015E4  0E00               	movlw	0
  3999  0015E6  6E46               	movwf	?___flmul,c
  4000  0015E8  0E00               	movlw	0
  4001  0015EA  6E47               	movwf	?___flmul+1,c
  4002  0015EC  0E00               	movlw	0
  4003  0015EE  6E48               	movwf	?___flmul+2,c
  4004  0015F0  0E00               	movlw	0
  4005  0015F2  6E49               	movwf	?___flmul+3,c
  4006  0015F4  0012               	return	
  4007  0015F6                     l4541:
  4008                           
  4009                           ; BSR set to: 0
  4010  0015F6  504C               	movf	___flmul@a+2,w,c
  4011  0015F8  0246               	mulwf	___flmul@b,c
  4012  0015FA  CFF3 F06F          	movff	prodl,___flmul@temp
  4013  0015FE  CFF4 F070          	movff	prodh,___flmul@temp+1
  4014                           
  4015                           ; BSR set to: 0
  4016  001602  516F               	movf	___flmul@temp& (0+255),w,b
  4017  001604  6F66               	movwf	___flmul@grs& (0+255),b
  4018  001606  6B67               	clrf	(___flmul@grs+1)& (0+255),b
  4019  001608  6B68               	clrf	(___flmul@grs+2)& (0+255),b
  4020  00160A  6B69               	clrf	(___flmul@grs+3)& (0+255),b
  4021                           
  4022                           ; BSR set to: 0
  4023  00160C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4024  00160E  6F6B               	movwf	___flmul@prod& (0+255),b
  4025  001610  6B6C               	clrf	(___flmul@prod+1)& (0+255),b
  4026  001612  6B6D               	clrf	(___flmul@prod+2)& (0+255),b
  4027  001614  6B6E               	clrf	(___flmul@prod+3)& (0+255),b
  4028  001616  504B               	movf	___flmul@a+1,w,c
  4029  001618  0247               	mulwf	___flmul@b+1,c
  4030  00161A  CFF3 F06F          	movff	prodl,___flmul@temp
  4031  00161E  CFF4 F070          	movff	prodh,___flmul@temp+1
  4032                           
  4033                           ; BSR set to: 0
  4034  001622  516F               	movf	___flmul@temp& (0+255),w,b
  4035  001624  2766               	addwf	___flmul@grs& (0+255),f,b
  4036  001626  0E00               	movlw	0
  4037  001628  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4038  00162A  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4039  00162C  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4040                           
  4041                           ; BSR set to: 0
  4042  00162E  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4043  001630  276B               	addwf	___flmul@prod& (0+255),f,b
  4044  001632  0E00               	movlw	0
  4045  001634  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4046  001636  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4047  001638  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4048  00163A  504A               	movf	___flmul@a,w,c
  4049  00163C  0248               	mulwf	___flmul@b+2,c
  4050  00163E  CFF3 F06F          	movff	prodl,___flmul@temp
  4051  001642  CFF4 F070          	movff	prodh,___flmul@temp+1
  4052                           
  4053                           ; BSR set to: 0
  4054  001646  516F               	movf	___flmul@temp& (0+255),w,b
  4055  001648  2766               	addwf	___flmul@grs& (0+255),f,b
  4056  00164A  0E00               	movlw	0
  4057  00164C  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4058  00164E  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4059  001650  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4060                           
  4061                           ; BSR set to: 0
  4062  001652  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4063  001654  276B               	addwf	___flmul@prod& (0+255),f,b
  4064  001656  0E00               	movlw	0
  4065  001658  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4066  00165A  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4067  00165C  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4068                           
  4069                           ; BSR set to: 0
  4070  00165E  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  4071  001662  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  4072  001666  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  4073  00166A  6B66               	clrf	___flmul@grs& (0+255),b
  4074                           
  4075                           ; BSR set to: 0
  4076  00166C  504A               	movf	___flmul@a,w,c
  4077  00166E  0247               	mulwf	___flmul@b+1,c
  4078  001670  CFF3 F06F          	movff	prodl,___flmul@temp
  4079  001674  CFF4 F070          	movff	prodh,___flmul@temp+1
  4080                           
  4081                           ; BSR set to: 0
  4082  001678  516F               	movf	___flmul@temp& (0+255),w,b
  4083  00167A  2766               	addwf	___flmul@grs& (0+255),f,b
  4084  00167C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4085  00167E  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4086  001680  0E00               	movlw	0
  4087  001682  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4088  001684  0E00               	movlw	0
  4089  001686  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4090                           
  4091                           ; BSR set to: 0
  4092  001688  504B               	movf	___flmul@a+1,w,c
  4093  00168A  0246               	mulwf	___flmul@b,c
  4094  00168C  CFF3 F06F          	movff	prodl,___flmul@temp
  4095  001690  CFF4 F070          	movff	prodh,___flmul@temp+1
  4096                           
  4097                           ; BSR set to: 0
  4098  001694  516F               	movf	___flmul@temp& (0+255),w,b
  4099  001696  2766               	addwf	___flmul@grs& (0+255),f,b
  4100  001698  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4101  00169A  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4102  00169C  0E00               	movlw	0
  4103  00169E  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4104  0016A0  0E00               	movlw	0
  4105  0016A2  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4106                           
  4107                           ; BSR set to: 0
  4108  0016A4  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  4109  0016A8  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  4110  0016AC  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  4111  0016B0  6B66               	clrf	___flmul@grs& (0+255),b
  4112  0016B2  504A               	movf	___flmul@a,w,c
  4113  0016B4  0246               	mulwf	___flmul@b,c
  4114  0016B6  CFF3 F06F          	movff	prodl,___flmul@temp
  4115  0016BA  CFF4 F070          	movff	prodh,___flmul@temp+1
  4116                           
  4117                           ; BSR set to: 0
  4118  0016BE  516F               	movf	___flmul@temp& (0+255),w,b
  4119  0016C0  2766               	addwf	___flmul@grs& (0+255),f,b
  4120  0016C2  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4121  0016C4  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4122  0016C6  0E00               	movlw	0
  4123  0016C8  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4124  0016CA  0E00               	movlw	0
  4125  0016CC  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4126                           
  4127                           ; BSR set to: 0
  4128  0016CE  504C               	movf	___flmul@a+2,w,c
  4129  0016D0  0247               	mulwf	___flmul@b+1,c
  4130  0016D2  CFF3 F06F          	movff	prodl,___flmul@temp
  4131  0016D6  CFF4 F070          	movff	prodh,___flmul@temp+1
  4132  0016DA  516F               	movf	___flmul@temp& (0+255),w,b
  4133  0016DC  276B               	addwf	___flmul@prod& (0+255),f,b
  4134  0016DE  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4135  0016E0  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4136  0016E2  0E00               	movlw	0
  4137  0016E4  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4138  0016E6  0E00               	movlw	0
  4139  0016E8  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4140                           
  4141                           ; BSR set to: 0
  4142  0016EA  504B               	movf	___flmul@a+1,w,c
  4143  0016EC  0248               	mulwf	___flmul@b+2,c
  4144  0016EE  CFF3 F06F          	movff	prodl,___flmul@temp
  4145  0016F2  CFF4 F070          	movff	prodh,___flmul@temp+1
  4146                           
  4147                           ; BSR set to: 0
  4148  0016F6  516F               	movf	___flmul@temp& (0+255),w,b
  4149  0016F8  276B               	addwf	___flmul@prod& (0+255),f,b
  4150  0016FA  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4151  0016FC  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4152  0016FE  0E00               	movlw	0
  4153  001700  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4154  001702  0E00               	movlw	0
  4155  001704  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4156  001706  504C               	movf	___flmul@a+2,w,c
  4157  001708  0248               	mulwf	___flmul@b+2,c
  4158  00170A  CFF3 F06F          	movff	prodl,___flmul@temp
  4159  00170E  CFF4 F070          	movff	prodh,___flmul@temp+1
  4160                           
  4161                           ; BSR set to: 0
  4162  001712  516F               	movf	___flmul@temp& (0+255),w,b
  4163  001714  6F60               	movwf	??___flmul& (0+255),b
  4164  001716  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4165  001718  6F61               	movwf	(??___flmul+1)& (0+255),b
  4166  00171A  6B62               	clrf	(??___flmul+2)& (0+255),b
  4167  00171C  6B63               	clrf	(??___flmul+3)& (0+255),b
  4168  00171E  C062  F063         	movff	??___flmul+2,??___flmul+3
  4169  001722  C061  F062         	movff	??___flmul+1,??___flmul+2
  4170  001726  C060  F061         	movff	??___flmul,??___flmul+1
  4171  00172A  6B60               	clrf	??___flmul& (0+255),b
  4172  00172C  5160               	movf	??___flmul& (0+255),w,b
  4173  00172E  276B               	addwf	___flmul@prod& (0+255),f,b
  4174  001730  5161               	movf	(??___flmul+1)& (0+255),w,b
  4175  001732  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4176  001734  5162               	movf	(??___flmul+2)& (0+255),w,b
  4177  001736  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4178  001738  5163               	movf	(??___flmul+3)& (0+255),w,b
  4179  00173A  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4180                           
  4181                           ; BSR set to: 0
  4182  00173C  C066  F060         	movff	___flmul@grs,??___flmul
  4183  001740  C067  F061         	movff	___flmul@grs+1,??___flmul+1
  4184  001744  C068  F062         	movff	___flmul@grs+2,??___flmul+2
  4185  001748  C069  F063         	movff	___flmul@grs+3,??___flmul+3
  4186  00174C  0E19               	movlw	25
  4187  00174E  D005               	goto	u4740
  4188  001750                     u4745:
  4189  001750  90D8               	bcf	status,0,c
  4190  001752  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  4191  001754  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  4192  001756  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  4193  001758  3360               	rrcf	??___flmul& (0+255),f,b
  4194  00175A                     u4740:
  4195  00175A  2EE8               	decfsz	wreg,f,c
  4196  00175C  D7F9               	goto	u4745
  4197  00175E  5160               	movf	??___flmul& (0+255),w,b
  4198  001760  276B               	addwf	___flmul@prod& (0+255),f,b
  4199  001762  5161               	movf	(??___flmul+1)& (0+255),w,b
  4200  001764  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4201  001766  5162               	movf	(??___flmul+2)& (0+255),w,b
  4202  001768  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4203  00176A  5163               	movf	(??___flmul+3)& (0+255),w,b
  4204  00176C  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4205                           
  4206                           ; BSR set to: 0
  4207  00176E  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  4208  001772  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  4209  001776  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  4210  00177A  6B66               	clrf	___flmul@grs& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213  00177C  5165               	movf	___flmul@aexp& (0+255),w,b
  4214  00177E  C06A  F060         	movff	___flmul@bexp,??___flmul
  4215  001782  6B61               	clrf	(??___flmul+1)& (0+255),b
  4216  001784  2760               	addwf	??___flmul& (0+255),f,b
  4217  001786  0E00               	movlw	0
  4218  001788  2361               	addwfc	(??___flmul+1)& (0+255),f,b
  4219  00178A  0E82               	movlw	130
  4220  00178C  2560               	addwf	??___flmul& (0+255),w,b
  4221  00178E  6F6F               	movwf	___flmul@temp& (0+255),b
  4222  001790  0EFF               	movlw	255
  4223  001792  2161               	addwfc	(??___flmul+1)& (0+255),w,b
  4224  001794  6F70               	movwf	(___flmul@temp+1)& (0+255),b
  4225  001796  D00F               	goto	l4589
  4226  001798                     l4583:
  4227                           
  4228                           ; BSR set to: 0
  4229  001798  90D8               	bcf	status,0,c
  4230  00179A  376B               	rlcf	___flmul@prod& (0+255),f,b
  4231  00179C  376C               	rlcf	(___flmul@prod+1)& (0+255),f,b
  4232  00179E  376D               	rlcf	(___flmul@prod+2)& (0+255),f,b
  4233  0017A0  376E               	rlcf	(___flmul@prod+3)& (0+255),f,b
  4234                           
  4235                           ; BSR set to: 0
  4236  0017A2  BF69               	btfsc	(___flmul@grs+3)& (0+255),7,b
  4237                           
  4238                           ; BSR set to: 0
  4239  0017A4  816B               	bsf	___flmul@prod& (0+255),0,b
  4240                           
  4241                           ; BSR set to: 0
  4242  0017A6  90D8               	bcf	status,0,c
  4243  0017A8  3766               	rlcf	___flmul@grs& (0+255),f,b
  4244  0017AA  3767               	rlcf	(___flmul@grs+1)& (0+255),f,b
  4245  0017AC  3768               	rlcf	(___flmul@grs+2)& (0+255),f,b
  4246  0017AE  3769               	rlcf	(___flmul@grs+3)& (0+255),f,b
  4247  0017B0  076F               	decf	___flmul@temp& (0+255),f,b
  4248  0017B2  A0D8               	btfss	status,0,c
  4249  0017B4  0770               	decf	(___flmul@temp+1)& (0+255),f,b
  4250  0017B6                     l4589:
  4251                           
  4252                           ; BSR set to: 0
  4253  0017B6  AF6D               	btfss	(___flmul@prod+2)& (0+255),7,b
  4254  0017B8  D7EF               	goto	l4583
  4255                           
  4256                           ; BSR set to: 0
  4257  0017BA  0E00               	movlw	0
  4258  0017BC  6F65               	movwf	___flmul@aexp& (0+255),b
  4259                           
  4260                           ; BSR set to: 0
  4261  0017BE  AF69               	btfss	(___flmul@grs+3)& (0+255),7,b
  4262  0017C0  D017               	goto	l1260
  4263                           
  4264                           ; BSR set to: 0
  4265  0017C2  0EFF               	movlw	255
  4266  0017C4  1566               	andwf	___flmul@grs& (0+255),w,b
  4267  0017C6  6F60               	movwf	??___flmul& (0+255),b
  4268  0017C8  0EFF               	movlw	255
  4269  0017CA  1567               	andwf	(___flmul@grs+1)& (0+255),w,b
  4270  0017CC  6F61               	movwf	(??___flmul+1)& (0+255),b
  4271  0017CE  0EFF               	movlw	255
  4272  0017D0  1568               	andwf	(___flmul@grs+2)& (0+255),w,b
  4273  0017D2  6F62               	movwf	(??___flmul+2)& (0+255),b
  4274  0017D4  0E7F               	movlw	127
  4275  0017D6  1569               	andwf	(___flmul@grs+3)& (0+255),w,b
  4276  0017D8  6F63               	movwf	(??___flmul+3)& (0+255),b
  4277  0017DA  5160               	movf	??___flmul& (0+255),w,b
  4278  0017DC  1161               	iorwf	(??___flmul+1)& (0+255),w,b
  4279  0017DE  1162               	iorwf	(??___flmul+2)& (0+255),w,b
  4280  0017E0  1163               	iorwf	(??___flmul+3)& (0+255),w,b
  4281  0017E2  B4D8               	btfsc	status,2,c
  4282  0017E4  D003               	goto	l1261
  4283  0017E6                     u4780:
  4284                           
  4285                           ; BSR set to: 0
  4286  0017E6  0E01               	movlw	1
  4287  0017E8  6F65               	movwf	___flmul@aexp& (0+255),b
  4288  0017EA  D002               	goto	l1260
  4289  0017EC                     l1261:
  4290                           
  4291                           ; BSR set to: 0
  4292  0017EC  B16B               	btfsc	___flmul@prod& (0+255),0,b
  4293  0017EE  D7FB               	goto	u4780
  4294  0017F0                     l1260:
  4295                           
  4296                           ; BSR set to: 0
  4297  0017F0  5165               	movf	___flmul@aexp& (0+255),w,b
  4298  0017F2  B4D8               	btfsc	status,2,c
  4299  0017F4  D01F               	goto	l4609
  4300                           
  4301                           ; BSR set to: 0
  4302  0017F6  0E01               	movlw	1
  4303  0017F8  276B               	addwf	___flmul@prod& (0+255),f,b
  4304  0017FA  0E00               	movlw	0
  4305  0017FC  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4306  0017FE  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4307  001800  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4308                           
  4309                           ; BSR set to: 0
  4310  001802  A16E               	btfss	(___flmul@prod+3)& (0+255),0,b
  4311  001804  D017               	goto	l4609
  4312                           
  4313                           ; BSR set to: 0
  4314  001806  C06B  F060         	movff	___flmul@prod,??___flmul
  4315  00180A  C06C  F061         	movff	___flmul@prod+1,??___flmul+1
  4316  00180E  C06D  F062         	movff	___flmul@prod+2,??___flmul+2
  4317  001812  C06E  F063         	movff	___flmul@prod+3,??___flmul+3
  4318  001816  3563               	rlcf	(??___flmul+3)& (0+255),w,b
  4319  001818  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  4320  00181A  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  4321  00181C  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  4322  00181E  3360               	rrcf	??___flmul& (0+255),f,b
  4323  001820  C060  F06B         	movff	??___flmul,___flmul@prod
  4324  001824  C061  F06C         	movff	??___flmul+1,___flmul@prod+1
  4325  001828  C062  F06D         	movff	??___flmul+2,___flmul@prod+2
  4326  00182C  C063  F06E         	movff	??___flmul+3,___flmul@prod+3
  4327                           
  4328                           ; BSR set to: 0
  4329  001830  4B6F               	infsnz	___flmul@temp& (0+255),f,b
  4330  001832  2B70               	incf	(___flmul@temp+1)& (0+255),f,b
  4331  001834                     l4609:
  4332                           
  4333                           ; BSR set to: 0
  4334  001834  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  4335  001836  D00D               	goto	l4613
  4336  001838  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4337  00183A  E103               	bnz	u4820
  4338  00183C  296F               	incf	___flmul@temp& (0+255),w,b
  4339  00183E  A0D8               	btfss	status,0,c
  4340  001840  D008               	goto	l4613
  4341  001842                     u4820:
  4342                           
  4343                           ; BSR set to: 0
  4344  001842  0E00               	movlw	0
  4345  001844  6F6B               	movwf	___flmul@prod& (0+255),b
  4346  001846  0E00               	movlw	0
  4347  001848  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  4348  00184A  0E80               	movlw	128
  4349  00184C  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  4350  00184E  0E7F               	movlw	127
  4351  001850  D020               	goto	L3
  4352  001852                     l4613:
  4353                           
  4354                           ; BSR set to: 0
  4355  001852  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  4356  001854  D005               	goto	u4830
  4357  001856  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  4358  001858  E10E               	bnz	l1268
  4359  00185A  056F               	decf	___flmul@temp& (0+255),w,b
  4360  00185C  B0D8               	btfsc	status,0,c
  4361  00185E  D00B               	goto	l1268
  4362  001860                     u4830:
  4363                           
  4364                           ; BSR set to: 0
  4365  001860  0E00               	movlw	0
  4366  001862  6F6B               	movwf	___flmul@prod& (0+255),b
  4367  001864  0E00               	movlw	0
  4368  001866  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  4369  001868  0E00               	movlw	0
  4370  00186A  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  4371  00186C  0E00               	movlw	0
  4372  00186E  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  4373  001870  0E00               	movlw	0
  4374  001872  6F64               	movwf	___flmul@sign& (0+255),b
  4375  001874  D00F               	goto	l4625
  4376  001876                     l1268:
  4377                           
  4378                           ; BSR set to: 0
  4379  001876  C06F  F06A         	movff	___flmul@temp,___flmul@bexp
  4380                           
  4381                           ; BSR set to: 0
  4382  00187A  0EFF               	movlw	255
  4383  00187C  176B               	andwf	___flmul@prod& (0+255),f,b
  4384  00187E  0EFF               	movlw	255
  4385  001880  176C               	andwf	(___flmul@prod+1)& (0+255),f,b
  4386  001882  0E7F               	movlw	127
  4387  001884  176D               	andwf	(___flmul@prod+2)& (0+255),f,b
  4388  001886  0E00               	movlw	0
  4389  001888  176E               	andwf	(___flmul@prod+3)& (0+255),f,b
  4390                           
  4391                           ; BSR set to: 0
  4392  00188A  B16A               	btfsc	___flmul@bexp& (0+255),0,b
  4393                           
  4394                           ; BSR set to: 0
  4395  00188C  8F6D               	bsf	(___flmul@prod+2)& (0+255),7,b
  4396                           
  4397                           ; BSR set to: 0
  4398  00188E  90D8               	bcf	status,0,c
  4399  001890  316A               	rrcf	___flmul@bexp& (0+255),w,b
  4400  001892                     L3:
  4401  001892  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  4402  001894                     l4625:
  4403                           
  4404                           ; BSR set to: 0
  4405  001894  5164               	movf	___flmul@sign& (0+255),w,b
  4406  001896  136E               	iorwf	(___flmul@prod+3)& (0+255),f,b
  4407                           
  4408                           ; BSR set to: 0
  4409  001898  C06B  F046         	movff	___flmul@prod,?___flmul
  4410  00189C  C06C  F047         	movff	___flmul@prod+1,?___flmul+1
  4411  0018A0  C06D  F048         	movff	___flmul@prod+2,?___flmul+2
  4412  0018A4  C06E  F049         	movff	___flmul@prod+3,?___flmul+3
  4413                           
  4414                           ; BSR set to: 0
  4415  0018A8  0012               	return		;funcret
  4416  0018AA                     __end_of___flmul:
  4417                           	opt callstack 0
  4418                           
  4419 ;; *************** function __tdiv_to_l_ *****************
  4420 ;; Defined at:
  4421 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  f1              4    8[COMRAM] float 
  4424 ;;  f2              4   12[COMRAM] float 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  quot            4   19[COMRAM] unsigned long 
  4427 ;;  exp1            1   24[COMRAM] unsigned char 
  4428 ;;  cntr            1   23[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  4    8[COMRAM] unsigned long 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4438 ;;      Params:         8       0       0       0       0       0       0       0       0
  4439 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4440 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4441 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4442 ;;Total ram usage:       17 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    5
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_sprintf
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text10
  4453  002444                     __ptext10:
  4454                           	opt callstack 0
  4455  002444                     __tdiv_to_l_:
  4456                           	opt callstack 24
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;incstack = 0
  4460  002444  C00B  F011         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4461  002448  6A12               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4462  00244A  6A13               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4463  00244C  340A               	rlcf	__tdiv_to_l_@f1+1,w,c
  4464  00244E  3611               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4465  002450  E301               	bnc	u3271
  4466  002452  8012               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4467  002454                     u3271:
  4468  002454  5011               	movf	??__tdiv_to_l_,w,c
  4469  002456  6E19               	movwf	__tdiv_to_l_@exp1,c
  4470  002458  5019               	movf	__tdiv_to_l_@exp1,w,c
  4471  00245A  A4D8               	btfss	status,2,c
  4472  00245C  D009               	goto	l3635
  4473  00245E                     u3280:
  4474  00245E  0E00               	movlw	0
  4475  002460  6E09               	movwf	?__tdiv_to_l_,c
  4476  002462  0E00               	movlw	0
  4477  002464  6E0A               	movwf	?__tdiv_to_l_+1,c
  4478  002466  0E00               	movlw	0
  4479  002468  6E0B               	movwf	?__tdiv_to_l_+2,c
  4480  00246A  0E00               	movlw	0
  4481  00246C  6E0C               	movwf	?__tdiv_to_l_+3,c
  4482  00246E  0012               	return	
  4483  002470                     l3635:
  4484  002470  C00F  F011         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4485  002474  6A12               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4486  002476  6A13               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4487  002478  340E               	rlcf	__tdiv_to_l_@f2+1,w,c
  4488  00247A  3611               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4489  00247C  E301               	bnc	u3291
  4490  00247E  8012               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4491  002480                     u3291:
  4492  002480  5011               	movf	??__tdiv_to_l_,w,c
  4493  002482  6E18               	movwf	__tdiv_to_l_@cntr,c
  4494  002484  5018               	movf	__tdiv_to_l_@cntr,w,c
  4495  002486  B4D8               	btfsc	status,2,c
  4496  002488  D7EA               	goto	u3280
  4497  00248A  8E0A               	bsf	__tdiv_to_l_@f1+1,7,c
  4498  00248C  0EFF               	movlw	255
  4499  00248E  1609               	andwf	__tdiv_to_l_@f1,f,c
  4500  002490  0EFF               	movlw	255
  4501  002492  160A               	andwf	__tdiv_to_l_@f1+1,f,c
  4502  002494  0E00               	movlw	0
  4503  002496  160B               	andwf	__tdiv_to_l_@f1+2,f,c
  4504  002498  8E0E               	bsf	__tdiv_to_l_@f2+1,7,c
  4505  00249A  0EFF               	movlw	255
  4506  00249C  160D               	andwf	__tdiv_to_l_@f2,f,c
  4507  00249E  0EFF               	movlw	255
  4508  0024A0  160E               	andwf	__tdiv_to_l_@f2+1,f,c
  4509  0024A2  0E00               	movlw	0
  4510  0024A4  160F               	andwf	__tdiv_to_l_@f2+2,f,c
  4511  0024A6  0E00               	movlw	0
  4512  0024A8  6E14               	movwf	__tdiv_to_l_@quot,c
  4513  0024AA  0E00               	movlw	0
  4514  0024AC  6E15               	movwf	__tdiv_to_l_@quot+1,c
  4515  0024AE  0E00               	movlw	0
  4516  0024B0  6E16               	movwf	__tdiv_to_l_@quot+2,c
  4517  0024B2  0E00               	movlw	0
  4518  0024B4  6E17               	movwf	__tdiv_to_l_@quot+3,c
  4519  0024B6  0E7F               	movlw	127
  4520  0024B8  5E19               	subwf	__tdiv_to_l_@exp1,f,c
  4521  0024BA  5018               	movf	__tdiv_to_l_@cntr,w,c
  4522  0024BC  0F98               	addlw	152
  4523  0024BE  5E19               	subwf	__tdiv_to_l_@exp1,f,c
  4524  0024C0  0E18               	movlw	24
  4525  0024C2  6E18               	movwf	__tdiv_to_l_@cntr,c
  4526  0024C4                     l980:
  4527  0024C4  90D8               	bcf	status,0,c
  4528  0024C6  3614               	rlcf	__tdiv_to_l_@quot,f,c
  4529  0024C8  3615               	rlcf	__tdiv_to_l_@quot+1,f,c
  4530  0024CA  3616               	rlcf	__tdiv_to_l_@quot+2,f,c
  4531  0024CC  3617               	rlcf	__tdiv_to_l_@quot+3,f,c
  4532  0024CE  500D               	movf	__tdiv_to_l_@f2,w,c
  4533  0024D0  5C09               	subwf	__tdiv_to_l_@f1,w,c
  4534  0024D2  500E               	movf	__tdiv_to_l_@f2+1,w,c
  4535  0024D4  580A               	subwfb	__tdiv_to_l_@f1+1,w,c
  4536  0024D6  500F               	movf	__tdiv_to_l_@f2+2,w,c
  4537  0024D8  580B               	subwfb	__tdiv_to_l_@f1+2,w,c
  4538  0024DA  A0D8               	btfss	status,0,c
  4539  0024DC  D007               	goto	l981
  4540  0024DE  500D               	movf	__tdiv_to_l_@f2,w,c
  4541  0024E0  5E09               	subwf	__tdiv_to_l_@f1,f,c
  4542  0024E2  500E               	movf	__tdiv_to_l_@f2+1,w,c
  4543  0024E4  5A0A               	subwfb	__tdiv_to_l_@f1+1,f,c
  4544  0024E6  500F               	movf	__tdiv_to_l_@f2+2,w,c
  4545  0024E8  5A0B               	subwfb	__tdiv_to_l_@f1+2,f,c
  4546  0024EA  8014               	bsf	__tdiv_to_l_@quot,0,c
  4547  0024EC                     l981:
  4548  0024EC  90D8               	bcf	status,0,c
  4549  0024EE  3609               	rlcf	__tdiv_to_l_@f1,f,c
  4550  0024F0  360A               	rlcf	__tdiv_to_l_@f1+1,f,c
  4551  0024F2  360B               	rlcf	__tdiv_to_l_@f1+2,f,c
  4552  0024F4  2E18               	decfsz	__tdiv_to_l_@cntr,f,c
  4553  0024F6  D7E6               	goto	l980
  4554  0024F8  AE19               	btfss	__tdiv_to_l_@exp1,7,c
  4555  0024FA  D00D               	goto	l3675
  4556  0024FC  5019               	movf	__tdiv_to_l_@exp1,w,c
  4557  0024FE  0A80               	xorlw	128
  4558  002500  0F97               	addlw	151
  4559  002502  A0D8               	btfss	status,0,c
  4560  002504  D7AC               	goto	u3280
  4561  002506                     l3671:
  4562  002506  90D8               	bcf	status,0,c
  4563  002508  3217               	rrcf	__tdiv_to_l_@quot+3,f,c
  4564  00250A  3216               	rrcf	__tdiv_to_l_@quot+2,f,c
  4565  00250C  3215               	rrcf	__tdiv_to_l_@quot+1,f,c
  4566  00250E  3214               	rrcf	__tdiv_to_l_@quot,f,c
  4567  002510  3E19               	incfsz	__tdiv_to_l_@exp1,f,c
  4568  002512  D7F9               	goto	l3671
  4569  002514  D00D               	goto	u3350
  4570  002516                     l3675:
  4571  002516  0E17               	movlw	23
  4572  002518  6419               	cpfsgt	__tdiv_to_l_@exp1,c
  4573  00251A  D007               	goto	l3683
  4574  00251C  D7A0               	goto	u3280
  4575  00251E                     l3681:
  4576  00251E  90D8               	bcf	status,0,c
  4577  002520  3614               	rlcf	__tdiv_to_l_@quot,f,c
  4578  002522  3615               	rlcf	__tdiv_to_l_@quot+1,f,c
  4579  002524  3616               	rlcf	__tdiv_to_l_@quot+2,f,c
  4580  002526  3617               	rlcf	__tdiv_to_l_@quot+3,f,c
  4581  002528  0619               	decf	__tdiv_to_l_@exp1,f,c
  4582  00252A                     l3683:
  4583  00252A  5019               	movf	__tdiv_to_l_@exp1,w,c
  4584  00252C  A4D8               	btfss	status,2,c
  4585  00252E  D7F7               	goto	l3681
  4586  002530                     u3350:
  4587  002530  C014  F009         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4588  002534  C015  F00A         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4589  002538  C016  F00B         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4590  00253C  C017  F00C         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4591  002540  0012               	return		;funcret
  4592  002542                     __end_of__tdiv_to_l_:
  4593                           	opt callstack 0
  4594                           
  4595 ;; *************** function __div_to_l_ *****************
  4596 ;; Defined at:
  4597 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  f1              4    8[COMRAM] unsigned long 
  4600 ;;  f2              4   12[COMRAM] unsigned long 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  quot            4   16[COMRAM] unsigned long 
  4603 ;;  exp1            1   21[COMRAM] unsigned char 
  4604 ;;  cntr            1   20[COMRAM] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  4    8[COMRAM] unsigned long 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4614 ;;      Params:         8       0       0       0       0       0       0       0       0
  4615 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4617 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:       14 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    5
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_sprintf
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text11
  4629  002542                     __ptext11:
  4630                           	opt callstack 0
  4631  002542                     __div_to_l_:
  4632                           	opt callstack 24
  4633                           
  4634                           ;incstack = 0
  4635  002542  340B               	rlcf	__div_to_l_@f1+2,w,c
  4636  002544  340C               	rlcf	__div_to_l_@f1+3,w,c
  4637  002546  6E16               	movwf	__div_to_l_@exp1,c
  4638  002548  5016               	movf	__div_to_l_@exp1,w,c
  4639  00254A  A4D8               	btfss	status,2,c
  4640  00254C  D009               	goto	l3691
  4641  00254E                     u3360:
  4642  00254E  0E00               	movlw	0
  4643  002550  6E09               	movwf	?__div_to_l_,c
  4644  002552  0E00               	movlw	0
  4645  002554  6E0A               	movwf	?__div_to_l_+1,c
  4646  002556  0E00               	movlw	0
  4647  002558  6E0B               	movwf	?__div_to_l_+2,c
  4648  00255A  0E00               	movlw	0
  4649  00255C  6E0C               	movwf	?__div_to_l_+3,c
  4650  00255E  0012               	return	
  4651  002560                     l3691:
  4652  002560  340F               	rlcf	__div_to_l_@f2+2,w,c
  4653  002562  3410               	rlcf	__div_to_l_@f2+3,w,c
  4654  002564  6E15               	movwf	__div_to_l_@cntr,c
  4655  002566  5015               	movf	__div_to_l_@cntr,w,c
  4656  002568  B4D8               	btfsc	status,2,c
  4657  00256A  D7F1               	goto	u3360
  4658  00256C  8E0B               	bsf	__div_to_l_@f1+2,7,c
  4659  00256E  0EFF               	movlw	255
  4660  002570  1609               	andwf	__div_to_l_@f1,f,c
  4661  002572  0EFF               	movlw	255
  4662  002574  160A               	andwf	__div_to_l_@f1+1,f,c
  4663  002576  0EFF               	movlw	255
  4664  002578  160B               	andwf	__div_to_l_@f1+2,f,c
  4665  00257A  0E00               	movlw	0
  4666  00257C  160C               	andwf	__div_to_l_@f1+3,f,c
  4667  00257E  8E0F               	bsf	__div_to_l_@f2+2,7,c
  4668  002580  0EFF               	movlw	255
  4669  002582  160D               	andwf	__div_to_l_@f2,f,c
  4670  002584  0EFF               	movlw	255
  4671  002586  160E               	andwf	__div_to_l_@f2+1,f,c
  4672  002588  0EFF               	movlw	255
  4673  00258A  160F               	andwf	__div_to_l_@f2+2,f,c
  4674  00258C  0E00               	movlw	0
  4675  00258E  1610               	andwf	__div_to_l_@f2+3,f,c
  4676  002590  0E00               	movlw	0
  4677  002592  6E11               	movwf	__div_to_l_@quot,c
  4678  002594  0E00               	movlw	0
  4679  002596  6E12               	movwf	__div_to_l_@quot+1,c
  4680  002598  0E00               	movlw	0
  4681  00259A  6E13               	movwf	__div_to_l_@quot+2,c
  4682  00259C  0E00               	movlw	0
  4683  00259E  6E14               	movwf	__div_to_l_@quot+3,c
  4684  0025A0  0E7F               	movlw	127
  4685  0025A2  5E16               	subwf	__div_to_l_@exp1,f,c
  4686  0025A4  5015               	movf	__div_to_l_@cntr,w,c
  4687  0025A6  0FA0               	addlw	160
  4688  0025A8  5E16               	subwf	__div_to_l_@exp1,f,c
  4689  0025AA  0E20               	movlw	32
  4690  0025AC  6E15               	movwf	__div_to_l_@cntr,c
  4691  0025AE                     l3711:
  4692  0025AE  90D8               	bcf	status,0,c
  4693  0025B0  3611               	rlcf	__div_to_l_@quot,f,c
  4694  0025B2  3612               	rlcf	__div_to_l_@quot+1,f,c
  4695  0025B4  3613               	rlcf	__div_to_l_@quot+2,f,c
  4696  0025B6  3614               	rlcf	__div_to_l_@quot+3,f,c
  4697  0025B8  500D               	movf	__div_to_l_@f2,w,c
  4698  0025BA  5C09               	subwf	__div_to_l_@f1,w,c
  4699  0025BC  500E               	movf	__div_to_l_@f2+1,w,c
  4700  0025BE  580A               	subwfb	__div_to_l_@f1+1,w,c
  4701  0025C0  500F               	movf	__div_to_l_@f2+2,w,c
  4702  0025C2  580B               	subwfb	__div_to_l_@f1+2,w,c
  4703  0025C4  5010               	movf	__div_to_l_@f2+3,w,c
  4704  0025C6  580C               	subwfb	__div_to_l_@f1+3,w,c
  4705  0025C8  A0D8               	btfss	status,0,c
  4706  0025CA  D009               	goto	l3719
  4707  0025CC  500D               	movf	__div_to_l_@f2,w,c
  4708  0025CE  5E09               	subwf	__div_to_l_@f1,f,c
  4709  0025D0  500E               	movf	__div_to_l_@f2+1,w,c
  4710  0025D2  5A0A               	subwfb	__div_to_l_@f1+1,f,c
  4711  0025D4  500F               	movf	__div_to_l_@f2+2,w,c
  4712  0025D6  5A0B               	subwfb	__div_to_l_@f1+2,f,c
  4713  0025D8  5010               	movf	__div_to_l_@f2+3,w,c
  4714  0025DA  5A0C               	subwfb	__div_to_l_@f1+3,f,c
  4715  0025DC  8011               	bsf	__div_to_l_@quot,0,c
  4716  0025DE                     l3719:
  4717  0025DE  90D8               	bcf	status,0,c
  4718  0025E0  3609               	rlcf	__div_to_l_@f1,f,c
  4719  0025E2  360A               	rlcf	__div_to_l_@f1+1,f,c
  4720  0025E4  360B               	rlcf	__div_to_l_@f1+2,f,c
  4721  0025E6  360C               	rlcf	__div_to_l_@f1+3,f,c
  4722  0025E8  2E15               	decfsz	__div_to_l_@cntr,f,c
  4723  0025EA  D7E1               	goto	l3711
  4724  0025EC  AE16               	btfss	__div_to_l_@exp1,7,c
  4725  0025EE  D00D               	goto	l3735
  4726  0025F0  5016               	movf	__div_to_l_@exp1,w,c
  4727  0025F2  0A80               	xorlw	128
  4728  0025F4  0F9F               	addlw	159
  4729  0025F6  A0D8               	btfss	status,0,c
  4730  0025F8  D7AA               	goto	u3360
  4731  0025FA                     l3731:
  4732  0025FA  90D8               	bcf	status,0,c
  4733  0025FC  3214               	rrcf	__div_to_l_@quot+3,f,c
  4734  0025FE  3213               	rrcf	__div_to_l_@quot+2,f,c
  4735  002600  3212               	rrcf	__div_to_l_@quot+1,f,c
  4736  002602  3211               	rrcf	__div_to_l_@quot,f,c
  4737  002604  3E16               	incfsz	__div_to_l_@exp1,f,c
  4738  002606  D7F9               	goto	l3731
  4739  002608  D00D               	goto	u3420
  4740  00260A                     l3735:
  4741  00260A  0E1F               	movlw	31
  4742  00260C  6416               	cpfsgt	__div_to_l_@exp1,c
  4743  00260E  D007               	goto	l3743
  4744  002610  D79E               	goto	u3360
  4745  002612                     l3741:
  4746  002612  90D8               	bcf	status,0,c
  4747  002614  3611               	rlcf	__div_to_l_@quot,f,c
  4748  002616  3612               	rlcf	__div_to_l_@quot+1,f,c
  4749  002618  3613               	rlcf	__div_to_l_@quot+2,f,c
  4750  00261A  3614               	rlcf	__div_to_l_@quot+3,f,c
  4751  00261C  0616               	decf	__div_to_l_@exp1,f,c
  4752  00261E                     l3743:
  4753  00261E  5016               	movf	__div_to_l_@exp1,w,c
  4754  002620  A4D8               	btfss	status,2,c
  4755  002622  D7F7               	goto	l3741
  4756  002624                     u3420:
  4757  002624  C011  F009         	movff	__div_to_l_@quot,?__div_to_l_
  4758  002628  C012  F00A         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4759  00262C  C013  F00B         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4760  002630  C014  F00C         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4761  002634  0012               	return		;funcret
  4762  002636                     __end_of__div_to_l_:
  4763                           	opt callstack 0
  4764                           
  4765 ;; *************** function ___xxtofl *****************
  4766 ;; Defined at:
  4767 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  sign            1    wreg     unsigned char 
  4770 ;;  val             4   12[COMRAM] long 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  sign            1   20[COMRAM] unsigned char 
  4773 ;;  arg             4   22[COMRAM] unsigned long 
  4774 ;;  exp             1   21[COMRAM] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  4   12[COMRAM] unsigned char 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4784 ;;      Params:         4       0       0       0       0       0       0       0       0
  4785 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4786 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4787 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4788 ;;Total ram usage:       14 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    5
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;;		_sprintf
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text12
  4800  002304                     __ptext12:
  4801                           	opt callstack 0
  4802  002304                     ___xxtofl:
  4803                           	opt callstack 24
  4804                           
  4805                           ;incstack = 0
  4806                           ;___xxtofl@sign stored from wreg
  4807  002304  6E15               	movwf	___xxtofl@sign,c
  4808  002306  5015               	movf	___xxtofl@sign,w,c
  4809  002308  A4D8               	btfss	status,2,c
  4810  00230A  AE10               	btfss	___xxtofl@val+3,7,c
  4811  00230C  D01A               	goto	l1292
  4812  00230E  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  4813  002312  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  4814  002316  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  4815  00231A  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  4816  00231E  1E11               	comf	??___xxtofl,f,c
  4817  002320  1E12               	comf	??___xxtofl+1,f,c
  4818  002322  1E13               	comf	??___xxtofl+2,f,c
  4819  002324  1E14               	comf	??___xxtofl+3,f,c
  4820  002326  2A11               	incf	??___xxtofl,f,c
  4821  002328  0E00               	movlw	0
  4822  00232A  2212               	addwfc	??___xxtofl+1,f,c
  4823  00232C  2213               	addwfc	??___xxtofl+2,f,c
  4824  00232E  2214               	addwfc	??___xxtofl+3,f,c
  4825  002330  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  4826  002334  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  4827  002338  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  4828  00233C  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  4829  002340  D008               	goto	l3891
  4830  002342                     l1292:
  4831  002342  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  4832  002346  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4833  00234A  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4834  00234E  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4835  002352                     l3891:
  4836  002352  500D               	movf	___xxtofl@val,w,c
  4837  002354  100E               	iorwf	___xxtofl@val+1,w,c
  4838  002356  100F               	iorwf	___xxtofl@val+2,w,c
  4839  002358  1010               	iorwf	___xxtofl@val+3,w,c
  4840  00235A  A4D8               	btfss	status,2,c
  4841  00235C  D009               	goto	l3897
  4842  00235E  0E00               	movlw	0
  4843  002360  6E0D               	movwf	?___xxtofl,c
  4844  002362  0E00               	movlw	0
  4845  002364  6E0E               	movwf	?___xxtofl+1,c
  4846  002366  0E00               	movlw	0
  4847  002368  6E0F               	movwf	?___xxtofl+2,c
  4848  00236A  0E00               	movlw	0
  4849  00236C  6E10               	movwf	?___xxtofl+3,c
  4850  00236E  0012               	return	
  4851  002370                     l3897:
  4852  002370  0E96               	movlw	150
  4853  002372  6E16               	movwf	___xxtofl@exp,c
  4854  002374  D006               	goto	l3901
  4855  002376                     l3899:
  4856  002376  2A16               	incf	___xxtofl@exp,f,c
  4857  002378  90D8               	bcf	status,0,c
  4858  00237A  321A               	rrcf	___xxtofl@arg+3,f,c
  4859  00237C  3219               	rrcf	___xxtofl@arg+2,f,c
  4860  00237E  3218               	rrcf	___xxtofl@arg+1,f,c
  4861  002380  3217               	rrcf	___xxtofl@arg,f,c
  4862  002382                     l3901:
  4863  002382  0E00               	movlw	0
  4864  002384  1417               	andwf	___xxtofl@arg,w,c
  4865  002386  6E11               	movwf	??___xxtofl& (0+255),c
  4866  002388  0E00               	movlw	0
  4867  00238A  1418               	andwf	___xxtofl@arg+1,w,c
  4868  00238C  6E12               	movwf	(??___xxtofl+1)& (0+255),c
  4869  00238E  0E00               	movlw	0
  4870  002390  1419               	andwf	___xxtofl@arg+2,w,c
  4871  002392  6E13               	movwf	(??___xxtofl+2)& (0+255),c
  4872  002394  0EFE               	movlw	254
  4873  002396  141A               	andwf	___xxtofl@arg+3,w,c
  4874  002398  6E14               	movwf	(??___xxtofl+3)& (0+255),c
  4875  00239A  5011               	movf	??___xxtofl,w,c
  4876  00239C  1012               	iorwf	??___xxtofl+1,w,c
  4877  00239E  1013               	iorwf	??___xxtofl+2,w,c
  4878  0023A0  1014               	iorwf	??___xxtofl+3,w,c
  4879  0023A2  B4D8               	btfsc	status,2,c
  4880  0023A4  D00D               	goto	l1299
  4881  0023A6  D7E7               	goto	l3899
  4882  0023A8                     l3903:
  4883  0023A8  2A16               	incf	___xxtofl@exp,f,c
  4884  0023AA  0E01               	movlw	1
  4885  0023AC  2617               	addwf	___xxtofl@arg,f,c
  4886  0023AE  0E00               	movlw	0
  4887  0023B0  2218               	addwfc	___xxtofl@arg+1,f,c
  4888  0023B2  2219               	addwfc	___xxtofl@arg+2,f,c
  4889  0023B4  221A               	addwfc	___xxtofl@arg+3,f,c
  4890  0023B6  90D8               	bcf	status,0,c
  4891  0023B8  321A               	rrcf	___xxtofl@arg+3,f,c
  4892  0023BA  3219               	rrcf	___xxtofl@arg+2,f,c
  4893  0023BC  3218               	rrcf	___xxtofl@arg+1,f,c
  4894  0023BE  3217               	rrcf	___xxtofl@arg,f,c
  4895  0023C0                     l1299:
  4896  0023C0  0E00               	movlw	0
  4897  0023C2  1417               	andwf	___xxtofl@arg,w,c
  4898  0023C4  6E11               	movwf	??___xxtofl& (0+255),c
  4899  0023C6  0E00               	movlw	0
  4900  0023C8  1418               	andwf	___xxtofl@arg+1,w,c
  4901  0023CA  6E12               	movwf	(??___xxtofl+1)& (0+255),c
  4902  0023CC  0E00               	movlw	0
  4903  0023CE  1419               	andwf	___xxtofl@arg+2,w,c
  4904  0023D0  6E13               	movwf	(??___xxtofl+2)& (0+255),c
  4905  0023D2  0EFF               	movlw	255
  4906  0023D4  141A               	andwf	___xxtofl@arg+3,w,c
  4907  0023D6  6E14               	movwf	(??___xxtofl+3)& (0+255),c
  4908  0023D8  5011               	movf	??___xxtofl,w,c
  4909  0023DA  1012               	iorwf	??___xxtofl+1,w,c
  4910  0023DC  1013               	iorwf	??___xxtofl+2,w,c
  4911  0023DE  1014               	iorwf	??___xxtofl+3,w,c
  4912  0023E0  B4D8               	btfsc	status,2,c
  4913  0023E2  D007               	goto	l3911
  4914  0023E4  D7E1               	goto	l3903
  4915  0023E6                     l3909:
  4916  0023E6  0616               	decf	___xxtofl@exp,f,c
  4917  0023E8  90D8               	bcf	status,0,c
  4918  0023EA  3617               	rlcf	___xxtofl@arg,f,c
  4919  0023EC  3618               	rlcf	___xxtofl@arg+1,f,c
  4920  0023EE  3619               	rlcf	___xxtofl@arg+2,f,c
  4921  0023F0  361A               	rlcf	___xxtofl@arg+3,f,c
  4922  0023F2                     l3911:
  4923  0023F2  BE19               	btfsc	___xxtofl@arg+2,7,c
  4924  0023F4  D003               	goto	u3710
  4925  0023F6  0E02               	movlw	2
  4926  0023F8  6016               	cpfslt	___xxtofl@exp,c
  4927  0023FA  D7F5               	goto	l3909
  4928  0023FC                     u3710:
  4929  0023FC  A016               	btfss	___xxtofl@exp,0,c
  4930  0023FE  9E19               	bcf	___xxtofl@arg+2,7,c
  4931  002400  90D8               	bcf	status,0,c
  4932  002402  3216               	rrcf	___xxtofl@exp,f,c
  4933  002404  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  4934  002408  6A12               	clrf	(??___xxtofl+1)& (0+255),c
  4935  00240A  6A13               	clrf	(??___xxtofl+2)& (0+255),c
  4936  00240C  6A14               	clrf	(??___xxtofl+3)& (0+255),c
  4937  00240E  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  4938  002412  6A13               	clrf	??___xxtofl+2,c
  4939  002414  6A12               	clrf	??___xxtofl+1,c
  4940  002416  6A11               	clrf	??___xxtofl,c
  4941  002418  5011               	movf	??___xxtofl,w,c
  4942  00241A  1217               	iorwf	___xxtofl@arg,f,c
  4943  00241C  5012               	movf	??___xxtofl+1,w,c
  4944  00241E  1218               	iorwf	___xxtofl@arg+1,f,c
  4945  002420  5013               	movf	??___xxtofl+2,w,c
  4946  002422  1219               	iorwf	___xxtofl@arg+2,f,c
  4947  002424  5014               	movf	??___xxtofl+3,w,c
  4948  002426  121A               	iorwf	___xxtofl@arg+3,f,c
  4949  002428  5015               	movf	___xxtofl@sign,w,c
  4950  00242A  A4D8               	btfss	status,2,c
  4951  00242C  AE10               	btfss	___xxtofl@val+3,7,c
  4952  00242E  D001               	goto	l3927
  4953  002430  8E1A               	bsf	___xxtofl@arg+3,7,c
  4954  002432                     l3927:
  4955  002432  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  4956  002436  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  4957  00243A  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  4958  00243E  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  4959  002442  0012               	return		;funcret
  4960  002444                     __end_of___xxtofl:
  4961                           	opt callstack 0
  4962                           
  4963 ;; *************** function ___wmul *****************
  4964 ;; Defined at:
  4965 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  multiplier      2    8[COMRAM] unsigned int 
  4968 ;;  multiplicand    2   10[COMRAM] unsigned int 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  product         2   12[COMRAM] unsigned int 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  2    8[COMRAM] unsigned int 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0, prodl, prodh
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4980 ;;      Params:         4       0       0       0       0       0       0       0       0
  4981 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4983 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4984 ;;Total ram usage:        6 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    5
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_sprintf
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text13
  4995  002EA0                     __ptext13:
  4996                           	opt callstack 0
  4997  002EA0                     ___wmul:
  4998                           	opt callstack 24
  4999                           
  5000                           ;incstack = 0
  5001  002EA0  5009               	movf	___wmul@multiplier,w,c
  5002  002EA2  020B               	mulwf	___wmul@multiplicand,c
  5003  002EA4  CFF3 F00D          	movff	prodl,___wmul@product
  5004  002EA8  CFF4 F00E          	movff	prodh,___wmul@product+1
  5005  002EAC  5009               	movf	___wmul@multiplier,w,c
  5006  002EAE  020C               	mulwf	___wmul@multiplicand+1,c
  5007  002EB0  50F3               	movf	prodl,w,c
  5008  002EB2  260E               	addwf	___wmul@product+1,f,c
  5009  002EB4  500A               	movf	___wmul@multiplier+1,w,c
  5010  002EB6  020B               	mulwf	___wmul@multiplicand,c
  5011  002EB8  50F3               	movf	prodl,w,c
  5012  002EBA  260E               	addwf	___wmul@product+1,f,c
  5013  002EBC  C00D  F009         	movff	___wmul@product,?___wmul
  5014  002EC0  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  5015  002EC4  0012               	return		;funcret
  5016  002EC6                     __end_of___wmul:
  5017                           	opt callstack 0
  5018                           
  5019 ;; *************** function ___llmod *****************
  5020 ;; Defined at:
  5021 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  dividend        4   21[COMRAM] unsigned long 
  5024 ;;  divisor         4   25[COMRAM] unsigned long 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  counter         1   29[COMRAM] unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  4   21[COMRAM] unsigned long 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5036 ;;      Params:         8       0       0       0       0       0       0       0       0
  5037 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5039 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5040 ;;Total ram usage:        9 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    5
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_sprintf
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text14
  5051  002B9C                     __ptext14:
  5052                           	opt callstack 0
  5053  002B9C                     ___llmod:
  5054                           	opt callstack 24
  5055                           
  5056                           ;incstack = 0
  5057  002B9C  501A               	movf	___llmod@divisor,w,c
  5058  002B9E  101B               	iorwf	___llmod@divisor+1,w,c
  5059  002BA0  101C               	iorwf	___llmod@divisor+2,w,c
  5060  002BA2  101D               	iorwf	___llmod@divisor+3,w,c
  5061  002BA4  B4D8               	btfsc	status,2,c
  5062  002BA6  D024               	goto	l1057
  5063  002BA8  0E01               	movlw	1
  5064  002BAA  6E1E               	movwf	___llmod@counter,c
  5065  002BAC  D006               	goto	l3875
  5066  002BAE                     l3873:
  5067  002BAE  90D8               	bcf	status,0,c
  5068  002BB0  361A               	rlcf	___llmod@divisor,f,c
  5069  002BB2  361B               	rlcf	___llmod@divisor+1,f,c
  5070  002BB4  361C               	rlcf	___llmod@divisor+2,f,c
  5071  002BB6  361D               	rlcf	___llmod@divisor+3,f,c
  5072  002BB8  2A1E               	incf	___llmod@counter,f,c
  5073  002BBA                     l3875:
  5074  002BBA  AE1D               	btfss	___llmod@divisor+3,7,c
  5075  002BBC  D7F8               	goto	l3873
  5076  002BBE                     u3630:
  5077  002BBE  501A               	movf	___llmod@divisor,w,c
  5078  002BC0  5C16               	subwf	___llmod@dividend,w,c
  5079  002BC2  501B               	movf	___llmod@divisor+1,w,c
  5080  002BC4  5817               	subwfb	___llmod@dividend+1,w,c
  5081  002BC6  501C               	movf	___llmod@divisor+2,w,c
  5082  002BC8  5818               	subwfb	___llmod@dividend+2,w,c
  5083  002BCA  501D               	movf	___llmod@divisor+3,w,c
  5084  002BCC  5819               	subwfb	___llmod@dividend+3,w,c
  5085  002BCE  A0D8               	btfss	status,0,c
  5086  002BD0  D008               	goto	l3881
  5087  002BD2  501A               	movf	___llmod@divisor,w,c
  5088  002BD4  5E16               	subwf	___llmod@dividend,f,c
  5089  002BD6  501B               	movf	___llmod@divisor+1,w,c
  5090  002BD8  5A17               	subwfb	___llmod@dividend+1,f,c
  5091  002BDA  501C               	movf	___llmod@divisor+2,w,c
  5092  002BDC  5A18               	subwfb	___llmod@dividend+2,f,c
  5093  002BDE  501D               	movf	___llmod@divisor+3,w,c
  5094  002BE0  5A19               	subwfb	___llmod@dividend+3,f,c
  5095  002BE2                     l3881:
  5096  002BE2  90D8               	bcf	status,0,c
  5097  002BE4  321D               	rrcf	___llmod@divisor+3,f,c
  5098  002BE6  321C               	rrcf	___llmod@divisor+2,f,c
  5099  002BE8  321B               	rrcf	___llmod@divisor+1,f,c
  5100  002BEA  321A               	rrcf	___llmod@divisor,f,c
  5101  002BEC  2E1E               	decfsz	___llmod@counter,f,c
  5102  002BEE  D7E7               	goto	u3630
  5103  002BF0                     l1057:
  5104  002BF0  C016  F016         	movff	___llmod@dividend,?___llmod
  5105  002BF4  C017  F017         	movff	___llmod@dividend+1,?___llmod+1
  5106  002BF8  C018  F018         	movff	___llmod@dividend+2,?___llmod+2
  5107  002BFC  C019  F019         	movff	___llmod@dividend+3,?___llmod+3
  5108  002C00  0012               	return		;funcret
  5109  002C02                     __end_of___llmod:
  5110                           	opt callstack 0
  5111                           
  5112 ;; *************** function ___lldiv *****************
  5113 ;; Defined at:
  5114 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  dividend        4    8[COMRAM] unsigned long 
  5117 ;;  divisor         4   12[COMRAM] unsigned long 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  quotient        4   16[COMRAM] unsigned long 
  5120 ;;  counter         1   20[COMRAM] unsigned char 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  4    8[COMRAM] unsigned long 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5130 ;;      Params:         8       0       0       0       0       0       0       0       0
  5131 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5133 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5134 ;;Total ram usage:       13 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    5
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_sprintf
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text15
  5145  002AAA                     __ptext15:
  5146                           	opt callstack 0
  5147  002AAA                     ___lldiv:
  5148                           	opt callstack 24
  5149                           
  5150                           ;incstack = 0
  5151  002AAA  0E00               	movlw	0
  5152  002AAC  6E11               	movwf	___lldiv@quotient,c
  5153  002AAE  0E00               	movlw	0
  5154  002AB0  6E12               	movwf	___lldiv@quotient+1,c
  5155  002AB2  0E00               	movlw	0
  5156  002AB4  6E13               	movwf	___lldiv@quotient+2,c
  5157  002AB6  0E00               	movlw	0
  5158  002AB8  6E14               	movwf	___lldiv@quotient+3,c
  5159  002ABA  500D               	movf	___lldiv@divisor,w,c
  5160  002ABC  100E               	iorwf	___lldiv@divisor+1,w,c
  5161  002ABE  100F               	iorwf	___lldiv@divisor+2,w,c
  5162  002AC0  1010               	iorwf	___lldiv@divisor+3,w,c
  5163  002AC2  B4D8               	btfsc	status,2,c
  5164  002AC4  D02A               	goto	l642
  5165  002AC6  0E01               	movlw	1
  5166  002AC8  6E15               	movwf	___lldiv@counter,c
  5167  002ACA  D006               	goto	l3759
  5168  002ACC                     l3757:
  5169  002ACC  90D8               	bcf	status,0,c
  5170  002ACE  360D               	rlcf	___lldiv@divisor,f,c
  5171  002AD0  360E               	rlcf	___lldiv@divisor+1,f,c
  5172  002AD2  360F               	rlcf	___lldiv@divisor+2,f,c
  5173  002AD4  3610               	rlcf	___lldiv@divisor+3,f,c
  5174  002AD6  2A15               	incf	___lldiv@counter,f,c
  5175  002AD8                     l3759:
  5176  002AD8  AE10               	btfss	___lldiv@divisor+3,7,c
  5177  002ADA  D7F8               	goto	l3757
  5178  002ADC                     u3440:
  5179  002ADC  90D8               	bcf	status,0,c
  5180  002ADE  3611               	rlcf	___lldiv@quotient,f,c
  5181  002AE0  3612               	rlcf	___lldiv@quotient+1,f,c
  5182  002AE2  3613               	rlcf	___lldiv@quotient+2,f,c
  5183  002AE4  3614               	rlcf	___lldiv@quotient+3,f,c
  5184  002AE6  500D               	movf	___lldiv@divisor,w,c
  5185  002AE8  5C09               	subwf	___lldiv@dividend,w,c
  5186  002AEA  500E               	movf	___lldiv@divisor+1,w,c
  5187  002AEC  580A               	subwfb	___lldiv@dividend+1,w,c
  5188  002AEE  500F               	movf	___lldiv@divisor+2,w,c
  5189  002AF0  580B               	subwfb	___lldiv@dividend+2,w,c
  5190  002AF2  5010               	movf	___lldiv@divisor+3,w,c
  5191  002AF4  580C               	subwfb	___lldiv@dividend+3,w,c
  5192  002AF6  A0D8               	btfss	status,0,c
  5193  002AF8  D009               	goto	l3769
  5194  002AFA  500D               	movf	___lldiv@divisor,w,c
  5195  002AFC  5E09               	subwf	___lldiv@dividend,f,c
  5196  002AFE  500E               	movf	___lldiv@divisor+1,w,c
  5197  002B00  5A0A               	subwfb	___lldiv@dividend+1,f,c
  5198  002B02  500F               	movf	___lldiv@divisor+2,w,c
  5199  002B04  5A0B               	subwfb	___lldiv@dividend+2,f,c
  5200  002B06  5010               	movf	___lldiv@divisor+3,w,c
  5201  002B08  5A0C               	subwfb	___lldiv@dividend+3,f,c
  5202  002B0A  8011               	bsf	___lldiv@quotient,0,c
  5203  002B0C                     l3769:
  5204  002B0C  90D8               	bcf	status,0,c
  5205  002B0E  3210               	rrcf	___lldiv@divisor+3,f,c
  5206  002B10  320F               	rrcf	___lldiv@divisor+2,f,c
  5207  002B12  320E               	rrcf	___lldiv@divisor+1,f,c
  5208  002B14  320D               	rrcf	___lldiv@divisor,f,c
  5209  002B16  2E15               	decfsz	___lldiv@counter,f,c
  5210  002B18  D7E1               	goto	u3440
  5211  002B1A                     l642:
  5212  002B1A  C011  F009         	movff	___lldiv@quotient,?___lldiv
  5213  002B1E  C012  F00A         	movff	___lldiv@quotient+1,?___lldiv+1
  5214  002B22  C013  F00B         	movff	___lldiv@quotient+2,?___lldiv+2
  5215  002B26  C014  F00C         	movff	___lldiv@quotient+3,?___lldiv+3
  5216  002B2A  0012               	return		;funcret
  5217  002B2C                     __end_of___lldiv:
  5218                           	opt callstack 0
  5219                           
  5220 ;; *************** function ___fltol *****************
  5221 ;; Defined at:
  5222 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  f1              4   26[BANK0 ] unsigned long 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  exp1            1   35[BANK0 ] unsigned char 
  5227 ;;  sign1           1   34[BANK0 ] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  4   26[BANK0 ] long 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5237 ;;      Params:         0       4       0       0       0       0       0       0       0
  5238 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5239 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5240 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5241 ;;Total ram usage:       10 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    5
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_sprintf
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text16
  5252  002706                     __ptext16:
  5253                           	opt callstack 0
  5254  002706                     ___fltol:
  5255                           	opt callstack 24
  5256                           
  5257                           ;incstack = 0
  5258  002706  0100               	movlb	0	; () banked
  5259  002708  357C               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5260  00270A  357D               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5261  00270C  6F83               	movwf	___fltol@exp1& (0+255),b
  5262  00270E  5183               	movf	___fltol@exp1& (0+255),w,b
  5263  002710  A4D8               	btfss	status,2,c
  5264  002712  D009               	goto	l3831
  5265  002714                     u3550:
  5266                           
  5267                           ; BSR set to: 0
  5268  002714  0E00               	movlw	0
  5269  002716  6F7A               	movwf	?___fltol& (0+255),b
  5270  002718  0E00               	movlw	0
  5271  00271A  6F7B               	movwf	(?___fltol+1)& (0+255),b
  5272  00271C  0E00               	movlw	0
  5273  00271E  6F7C               	movwf	(?___fltol+2)& (0+255),b
  5274  002720  0E00               	movlw	0
  5275  002722  6F7D               	movwf	(?___fltol+3)& (0+255),b
  5276  002724  0012               	return	
  5277  002726                     l3831:
  5278                           
  5279                           ; BSR set to: 0
  5280  002726  C07A  F07E         	movff	___fltol@f1,??___fltol
  5281  00272A  C07B  F07F         	movff	___fltol@f1+1,??___fltol+1
  5282  00272E  C07C  F080         	movff	___fltol@f1+2,??___fltol+2
  5283  002732  C07D  F081         	movff	___fltol@f1+3,??___fltol+3
  5284  002736  0E20               	movlw	32
  5285  002738  D005               	goto	u3560
  5286  00273A                     u3565:
  5287  00273A  90D8               	bcf	status,0,c
  5288  00273C  3381               	rrcf	(??___fltol+3)& (0+255),f,b
  5289  00273E  3380               	rrcf	(??___fltol+2)& (0+255),f,b
  5290  002740  337F               	rrcf	(??___fltol+1)& (0+255),f,b
  5291  002742  337E               	rrcf	??___fltol& (0+255),f,b
  5292  002744                     u3560:
  5293  002744  2EE8               	decfsz	wreg,f,c
  5294  002746  D7F9               	goto	u3565
  5295  002748  517E               	movf	??___fltol& (0+255),w,b
  5296  00274A  6F82               	movwf	___fltol@sign1& (0+255),b
  5297                           
  5298                           ; BSR set to: 0
  5299  00274C  8F7C               	bsf	(___fltol@f1+2)& (0+255),7,b
  5300                           
  5301                           ; BSR set to: 0
  5302  00274E  0EFF               	movlw	255
  5303  002750  177A               	andwf	___fltol@f1& (0+255),f,b
  5304  002752  0EFF               	movlw	255
  5305  002754  177B               	andwf	(___fltol@f1+1)& (0+255),f,b
  5306  002756  0EFF               	movlw	255
  5307  002758  177C               	andwf	(___fltol@f1+2)& (0+255),f,b
  5308  00275A  0E00               	movlw	0
  5309  00275C  177D               	andwf	(___fltol@f1+3)& (0+255),f,b
  5310                           
  5311                           ; BSR set to: 0
  5312  00275E  0E96               	movlw	150
  5313  002760  5F83               	subwf	___fltol@exp1& (0+255),f,b
  5314                           
  5315                           ; BSR set to: 0
  5316  002762  AF83               	btfss	___fltol@exp1& (0+255),7,b
  5317  002764  D00D               	goto	l3851
  5318                           
  5319                           ; BSR set to: 0
  5320  002766  5183               	movf	___fltol@exp1& (0+255),w,b
  5321  002768  0A80               	xorlw	128
  5322  00276A  0F97               	addlw	151
  5323  00276C  A0D8               	btfss	status,0,c
  5324  00276E  D7D2               	goto	u3550
  5325  002770                     l3847:
  5326                           
  5327                           ; BSR set to: 0
  5328  002770  90D8               	bcf	status,0,c
  5329  002772  337D               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5330  002774  337C               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5331  002776  337B               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5332  002778  337A               	rrcf	___fltol@f1& (0+255),f,b
  5333                           
  5334                           ; BSR set to: 0
  5335  00277A  3F83               	incfsz	___fltol@exp1& (0+255),f,b
  5336  00277C  D7F9               	goto	l3847
  5337  00277E  D00D               	goto	u3600
  5338  002780                     l3851:
  5339                           
  5340                           ; BSR set to: 0
  5341  002780  0E1F               	movlw	31
  5342  002782  6583               	cpfsgt	___fltol@exp1& (0+255),b
  5343  002784  D007               	goto	l3859
  5344  002786  D7C6               	goto	u3550
  5345  002788                     l3857:
  5346                           
  5347                           ; BSR set to: 0
  5348  002788  90D8               	bcf	status,0,c
  5349  00278A  377A               	rlcf	___fltol@f1& (0+255),f,b
  5350  00278C  377B               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5351  00278E  377C               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5352  002790  377D               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5353  002792  0783               	decf	___fltol@exp1& (0+255),f,b
  5354  002794                     l3859:
  5355                           
  5356                           ; BSR set to: 0
  5357  002794  5183               	movf	___fltol@exp1& (0+255),w,b
  5358  002796  A4D8               	btfss	status,2,c
  5359  002798  D7F7               	goto	l3857
  5360  00279A                     u3600:
  5361                           
  5362                           ; BSR set to: 0
  5363  00279A  5182               	movf	___fltol@sign1& (0+255),w,b
  5364  00279C  B4D8               	btfsc	status,2,c
  5365  00279E  D008               	goto	l3865
  5366                           
  5367                           ; BSR set to: 0
  5368  0027A0  1F7D               	comf	(___fltol@f1+3)& (0+255),f,b
  5369  0027A2  1F7C               	comf	(___fltol@f1+2)& (0+255),f,b
  5370  0027A4  1F7B               	comf	(___fltol@f1+1)& (0+255),f,b
  5371  0027A6  6D7A               	negf	___fltol@f1& (0+255),b
  5372  0027A8  0E00               	movlw	0
  5373  0027AA  237B               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5374  0027AC  237C               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5375  0027AE  237D               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5376  0027B0                     l3865:
  5377                           
  5378                           ; BSR set to: 0
  5379  0027B0  C07A  F07A         	movff	___fltol@f1,?___fltol
  5380  0027B4  C07B  F07B         	movff	___fltol@f1+1,?___fltol+1
  5381  0027B8  C07C  F07C         	movff	___fltol@f1+2,?___fltol+2
  5382  0027BC  C07D  F07D         	movff	___fltol@f1+3,?___fltol+3
  5383                           
  5384                           ; BSR set to: 0
  5385  0027C0  0012               	return		;funcret
  5386  0027C2                     __end_of___fltol:
  5387                           	opt callstack 0
  5388                           
  5389 ;; *************** function ___flsub *****************
  5390 ;; Defined at:
  5391 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  b               4   36[COMRAM] long 
  5394 ;;  a               4   40[COMRAM] long 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;		None
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  4   36[COMRAM] long 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0, cstack
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5406 ;;      Params:         8       0       0       0       0       0       0       0       0
  5407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5409 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5410 ;;Total ram usage:        8 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    6
  5413 ;; This function calls:
  5414 ;;		___fladd
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;;		_sprintf
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text17
  5422  002CF6                     __ptext17:
  5423                           	opt callstack 0
  5424  002CF6                     ___flsub:
  5425                           	opt callstack 23
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;incstack = 0
  5429  002CF6  0E00               	movlw	0
  5430  002CF8  1A29               	xorwf	___flsub@a,f,c
  5431  002CFA  0E00               	movlw	0
  5432  002CFC  1A2A               	xorwf	___flsub@a+1,f,c
  5433  002CFE  0E00               	movlw	0
  5434  002D00  1A2B               	xorwf	___flsub@a+2,f,c
  5435  002D02  0E80               	movlw	128
  5436  002D04  1A2C               	xorwf	___flsub@a+3,f,c
  5437  002D06  C025  F015         	movff	___flsub@b,___fladd@b
  5438  002D0A  C026  F016         	movff	___flsub@b+1,___fladd@b+1
  5439  002D0E  C027  F017         	movff	___flsub@b+2,___fladd@b+2
  5440  002D12  C028  F018         	movff	___flsub@b+3,___fladd@b+3
  5441  002D16  C029  F019         	movff	___flsub@a,___fladd@a
  5442  002D1A  C02A  F01A         	movff	___flsub@a+1,___fladd@a+1
  5443  002D1E  C02B  F01B         	movff	___flsub@a+2,___fladd@a+2
  5444  002D22  C02C  F01C         	movff	___flsub@a+3,___fladd@a+3
  5445  002D26  EC55  F00C         	call	___fladd	;wreg free
  5446  002D2A  C015  F025         	movff	?___fladd,?___flsub
  5447  002D2E  C016  F026         	movff	?___fladd+1,?___flsub+1
  5448  002D32  C017  F027         	movff	?___fladd+2,?___flsub+2
  5449  002D36  C018  F028         	movff	?___fladd+3,?___flsub+3
  5450  002D3A  0012               	return		;funcret
  5451  002D3C                     __end_of___flsub:
  5452                           	opt callstack 0
  5453                           
  5454 ;; *************** function ___fladd *****************
  5455 ;; Defined at:
  5456 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  b               4   20[COMRAM] long 
  5459 ;;  a               4   24[COMRAM] long 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  grs             1   35[COMRAM] unsigned char 
  5462 ;;  bexp            1   34[COMRAM] unsigned char 
  5463 ;;  aexp            1   33[COMRAM] unsigned char 
  5464 ;;  signs           1   32[COMRAM] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  4   20[COMRAM] unsigned char 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5474 ;;      Params:         8       0       0       0       0       0       0       0       0
  5475 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5476 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5477 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5478 ;;Total ram usage:       16 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    5
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_sprintf
  5485 ;;		___flsub
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text18
  5490  0018AA                     __ptext18:
  5491                           	opt callstack 0
  5492  0018AA                     ___fladd:
  5493                           	opt callstack 23
  5494                           
  5495                           ;incstack = 0
  5496  0018AA  5018               	movf	___fladd@b+3,w,c
  5497  0018AC  0B80               	andlw	128
  5498  0018AE  6E21               	movwf	___fladd@signs,c
  5499  0018B0  5018               	movf	___fladd@b+3,w,c
  5500  0018B2  2418               	addwf	___fladd@b+3,w,c
  5501  0018B4  6E23               	movwf	___fladd@bexp,c
  5502  0018B6  BE17               	btfsc	___fladd@b+2,7,c
  5503  0018B8  8023               	bsf	___fladd@bexp,0,c
  5504  0018BA  5023               	movf	___fladd@bexp,w,c
  5505  0018BC  B4D8               	btfsc	status,2,c
  5506  0018BE  D00D               	goto	l3071
  5507  0018C0  2823               	incf	___fladd@bexp,w,c
  5508  0018C2  A4D8               	btfss	status,2,c
  5509  0018C4  D008               	goto	l3067
  5510  0018C6  0E00               	movlw	0
  5511  0018C8  6E15               	movwf	___fladd@b,c
  5512  0018CA  0E00               	movlw	0
  5513  0018CC  6E16               	movwf	___fladd@b+1,c
  5514  0018CE  0E00               	movlw	0
  5515  0018D0  6E17               	movwf	___fladd@b+2,c
  5516  0018D2  0E00               	movlw	0
  5517  0018D4  6E18               	movwf	___fladd@b+3,c
  5518  0018D6                     l3067:
  5519  0018D6  8E17               	bsf	___fladd@b+2,7,c
  5520  0018D8  D006               	goto	L4
  5521  0018DA                     l3071:
  5522  0018DA  0E00               	movlw	0
  5523  0018DC  6E15               	movwf	___fladd@b,c
  5524  0018DE  0E00               	movlw	0
  5525  0018E0  6E16               	movwf	___fladd@b+1,c
  5526  0018E2  0E00               	movlw	0
  5527  0018E4  6E17               	movwf	___fladd@b+2,c
  5528  0018E6                     L4:
  5529  0018E6  0E00               	movlw	0
  5530  0018E8  6E18               	movwf	___fladd@b+3,c
  5531  0018EA  501C               	movf	___fladd@a+3,w,c
  5532  0018EC  0B80               	andlw	128
  5533  0018EE  6E22               	movwf	___fladd@aexp,c
  5534  0018F0  5021               	movf	___fladd@signs,w,c
  5535  0018F2  1822               	xorwf	___fladd@aexp,w,c
  5536  0018F4  A4D8               	btfss	status,2,c
  5537  0018F6  8C21               	bsf	___fladd@signs,6,c
  5538  0018F8  501C               	movf	___fladd@a+3,w,c
  5539  0018FA  241C               	addwf	___fladd@a+3,w,c
  5540  0018FC  6E22               	movwf	___fladd@aexp,c
  5541  0018FE  BE1B               	btfsc	___fladd@a+2,7,c
  5542  001900  8022               	bsf	___fladd@aexp,0,c
  5543  001902  5022               	movf	___fladd@aexp,w,c
  5544  001904  B4D8               	btfsc	status,2,c
  5545  001906  D00D               	goto	l3095
  5546  001908  2822               	incf	___fladd@aexp,w,c
  5547  00190A  A4D8               	btfss	status,2,c
  5548  00190C  D008               	goto	l3091
  5549  00190E  0E00               	movlw	0
  5550  001910  6E19               	movwf	___fladd@a,c
  5551  001912  0E00               	movlw	0
  5552  001914  6E1A               	movwf	___fladd@a+1,c
  5553  001916  0E00               	movlw	0
  5554  001918  6E1B               	movwf	___fladd@a+2,c
  5555  00191A  0E00               	movlw	0
  5556  00191C  6E1C               	movwf	___fladd@a+3,c
  5557  00191E                     l3091:
  5558  00191E  8E1B               	bsf	___fladd@a+2,7,c
  5559  001920  D006               	goto	L5
  5560  001922                     l3095:
  5561  001922  0E00               	movlw	0
  5562  001924  6E19               	movwf	___fladd@a,c
  5563  001926  0E00               	movlw	0
  5564  001928  6E1A               	movwf	___fladd@a+1,c
  5565  00192A  0E00               	movlw	0
  5566  00192C  6E1B               	movwf	___fladd@a+2,c
  5567  00192E                     L5:
  5568  00192E  0E00               	movlw	0
  5569  001930  6E1C               	movwf	___fladd@a+3,c
  5570  001932  5023               	movf	___fladd@bexp,w,c
  5571  001934  5C22               	subwf	___fladd@aexp,w,c
  5572  001936  B0D8               	btfsc	status,0,c
  5573  001938  D022               	goto	l3133
  5574  00193A  AC21               	btfss	___fladd@signs,6,c
  5575  00193C  D002               	goto	l3103
  5576  00193E  0E80               	movlw	128
  5577  001940  1A21               	xorwf	___fladd@signs,f,c
  5578  001942                     l3103:
  5579  001942  C023  F024         	movff	___fladd@bexp,___fladd@grs
  5580  001946  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  5581  00194A  C024  F022         	movff	___fladd@grs,___fladd@aexp
  5582  00194E  C015  F024         	movff	___fladd@b,___fladd@grs
  5583  001952  C019  F015         	movff	___fladd@a,___fladd@b
  5584  001956  C024  F019         	movff	___fladd@grs,___fladd@a
  5585  00195A  C016  F024         	movff	___fladd@b+1,___fladd@grs
  5586  00195E  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
  5587  001962  C024  F01A         	movff	___fladd@grs,___fladd@a+1
  5588  001966  C017  F024         	movff	___fladd@b+2,___fladd@grs
  5589  00196A  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
  5590  00196E  C024  F01B         	movff	___fladd@grs,___fladd@a+2
  5591  001972  C018  F024         	movff	___fladd@b+3,___fladd@grs
  5592  001976  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
  5593  00197A  C024  F01C         	movff	___fladd@grs,___fladd@a+3
  5594  00197E                     l3133:
  5595  00197E  0E00               	movlw	0
  5596  001980  6E24               	movwf	___fladd@grs,c
  5597  001982  5023               	movf	___fladd@bexp,w,c
  5598  001984  C022  F01D         	movff	___fladd@aexp,??___fladd
  5599  001988  6A1E               	clrf	(??___fladd+1)& (0+255),c
  5600  00198A  5E1D               	subwf	??___fladd,f,c
  5601  00198C  0E00               	movlw	0
  5602  00198E  5A1E               	subwfb	??___fladd+1,f,c
  5603  001990  BE1E               	btfsc	??___fladd+1,7,c
  5604  001992  D02C               	goto	l1166
  5605  001994  501E               	movf	??___fladd+1,w,c
  5606  001996  E104               	bnz	u2490
  5607  001998  0E1A               	movlw	26
  5608  00199A  5C1D               	subwf	??___fladd,w,c
  5609  00199C  A0D8               	btfss	status,0,c
  5610  00199E  D026               	goto	l1166
  5611  0019A0                     u2490:
  5612  0019A0  5015               	movf	___fladd@b,w,c
  5613  0019A2  1016               	iorwf	___fladd@b+1,w,c
  5614  0019A4  1017               	iorwf	___fladd@b+2,w,c
  5615  0019A6  1018               	iorwf	___fladd@b+3,w,c
  5616  0019A8  B4D8               	btfsc	status,2,c
  5617  0019AA  D002               	goto	u2500
  5618  0019AC  0E01               	movlw	1
  5619  0019AE  D001               	goto	u2510
  5620  0019B0                     u2500:
  5621  0019B0  0E00               	movlw	0
  5622  0019B2                     u2510:
  5623  0019B2  6E24               	movwf	___fladd@grs,c
  5624  0019B4  0E00               	movlw	0
  5625  0019B6  6E15               	movwf	___fladd@b,c
  5626  0019B8  0E00               	movlw	0
  5627  0019BA  6E16               	movwf	___fladd@b+1,c
  5628  0019BC  0E00               	movlw	0
  5629  0019BE  6E17               	movwf	___fladd@b+2,c
  5630  0019C0  0E00               	movlw	0
  5631  0019C2  6E18               	movwf	___fladd@b+3,c
  5632  0019C4  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  5633  0019C8  D015               	goto	u2540
  5634  0019CA                     l1167:
  5635  0019CA  A024               	btfss	___fladd@grs,0,c
  5636  0019CC  D005               	goto	l3145
  5637  0019CE  90D8               	bcf	status,0,c
  5638  0019D0  3024               	rrcf	___fladd@grs,w,c
  5639  0019D2  0901               	iorlw	1
  5640  0019D4  6E24               	movwf	___fladd@grs,c
  5641  0019D6  D002               	goto	l3147
  5642  0019D8                     l3145:
  5643  0019D8  90D8               	bcf	status,0,c
  5644  0019DA  3224               	rrcf	___fladd@grs,f,c
  5645  0019DC                     l3147:
  5646  0019DC  B015               	btfsc	___fladd@b,0,c
  5647  0019DE  8E24               	bsf	___fladd@grs,7,c
  5648  0019E0  3418               	rlcf	___fladd@b+3,w,c
  5649  0019E2  3218               	rrcf	___fladd@b+3,f,c
  5650  0019E4  3217               	rrcf	___fladd@b+2,f,c
  5651  0019E6  3216               	rrcf	___fladd@b+1,f,c
  5652  0019E8  3215               	rrcf	___fladd@b,f,c
  5653  0019EA  2A23               	incf	___fladd@bexp,f,c
  5654  0019EC                     l1166:
  5655  0019EC  5022               	movf	___fladd@aexp,w,c
  5656  0019EE  5C23               	subwf	___fladd@bexp,w,c
  5657  0019F0  A0D8               	btfss	status,0,c
  5658  0019F2  D7EB               	goto	l1167
  5659  0019F4                     u2540:
  5660  0019F4  BC21               	btfsc	___fladd@signs,6,c
  5661  0019F6  D028               	goto	l3179
  5662  0019F8  5023               	movf	___fladd@bexp,w,c
  5663  0019FA  A4D8               	btfss	status,2,c
  5664  0019FC  D009               	goto	l3161
  5665  0019FE  0E00               	movlw	0
  5666  001A00  6E15               	movwf	?___fladd,c
  5667  001A02  0E00               	movlw	0
  5668  001A04  6E16               	movwf	?___fladd+1,c
  5669  001A06  0E00               	movlw	0
  5670  001A08  6E17               	movwf	?___fladd+2,c
  5671  001A0A  0E00               	movlw	0
  5672  001A0C  6E18               	movwf	?___fladd+3,c
  5673  001A0E  0012               	return	
  5674  001A10                     l3161:
  5675  001A10  5019               	movf	___fladd@a,w,c
  5676  001A12  2615               	addwf	___fladd@b,f,c
  5677  001A14  501A               	movf	___fladd@a+1,w,c
  5678  001A16  2216               	addwfc	___fladd@b+1,f,c
  5679  001A18  501B               	movf	___fladd@a+2,w,c
  5680  001A1A  2217               	addwfc	___fladd@b+2,f,c
  5681  001A1C  501C               	movf	___fladd@a+3,w,c
  5682  001A1E  2218               	addwfc	___fladd@b+3,f,c
  5683  001A20  A018               	btfss	___fladd@b+3,0,c
  5684  001A22  D071               	goto	u2670
  5685  001A24  A024               	btfss	___fladd@grs,0,c
  5686  001A26  D005               	goto	l3169
  5687  001A28  90D8               	bcf	status,0,c
  5688  001A2A  3024               	rrcf	___fladd@grs,w,c
  5689  001A2C  0901               	iorlw	1
  5690  001A2E  6E24               	movwf	___fladd@grs,c
  5691  001A30  D002               	goto	l3171
  5692  001A32                     l3169:
  5693  001A32  90D8               	bcf	status,0,c
  5694  001A34  3224               	rrcf	___fladd@grs,f,c
  5695  001A36                     l3171:
  5696  001A36  B015               	btfsc	___fladd@b,0,c
  5697  001A38  8E24               	bsf	___fladd@grs,7,c
  5698  001A3A  3418               	rlcf	___fladd@b+3,w,c
  5699  001A3C  3218               	rrcf	___fladd@b+3,f,c
  5700  001A3E  3217               	rrcf	___fladd@b+2,f,c
  5701  001A40  3216               	rrcf	___fladd@b+1,f,c
  5702  001A42  3215               	rrcf	___fladd@b,f,c
  5703  001A44  2A23               	incf	___fladd@bexp,f,c
  5704  001A46  D05F               	goto	u2670
  5705  001A48                     l3179:
  5706  001A48  5019               	movf	___fladd@a,w,c
  5707  001A4A  5C15               	subwf	___fladd@b,w,c
  5708  001A4C  501A               	movf	___fladd@a+1,w,c
  5709  001A4E  5816               	subwfb	___fladd@b+1,w,c
  5710  001A50  501B               	movf	___fladd@a+2,w,c
  5711  001A52  5817               	subwfb	___fladd@b+2,w,c
  5712  001A54  5018               	movf	___fladd@b+3,w,c
  5713  001A56  0A80               	xorlw	128
  5714  001A58  6E1D               	movwf	??___fladd& (0+255),c
  5715  001A5A  501C               	movf	___fladd@a+3,w,c
  5716  001A5C  0A80               	xorlw	128
  5717  001A5E  581D               	subwfb	??___fladd& (0+255),w,c
  5718  001A60  B0D8               	btfsc	status,0,c
  5719  001A62  D025               	goto	l3189
  5720  001A64  5015               	movf	___fladd@b,w,c
  5721  001A66  5C19               	subwf	___fladd@a,w,c
  5722  001A68  6E1D               	movwf	??___fladd& (0+255),c
  5723  001A6A  5016               	movf	___fladd@b+1,w,c
  5724  001A6C  581A               	subwfb	___fladd@a+1,w,c
  5725  001A6E  6E1E               	movwf	(??___fladd+1)& (0+255),c
  5726  001A70  5017               	movf	___fladd@b+2,w,c
  5727  001A72  581B               	subwfb	___fladd@a+2,w,c
  5728  001A74  6E1F               	movwf	(??___fladd+2)& (0+255),c
  5729  001A76  5018               	movf	___fladd@b+3,w,c
  5730  001A78  581C               	subwfb	___fladd@a+3,w,c
  5731  001A7A  6E20               	movwf	(??___fladd+3)& (0+255),c
  5732  001A7C  0EFF               	movlw	255
  5733  001A7E  241D               	addwf	??___fladd,w,c
  5734  001A80  6E15               	movwf	___fladd@b,c
  5735  001A82  0EFF               	movlw	255
  5736  001A84  201E               	addwfc	??___fladd+1,w,c
  5737  001A86  6E16               	movwf	___fladd@b+1,c
  5738  001A88  0EFF               	movlw	255
  5739  001A8A  201F               	addwfc	??___fladd+2,w,c
  5740  001A8C  6E17               	movwf	___fladd@b+2,c
  5741  001A8E  0EFF               	movlw	255
  5742  001A90  2020               	addwfc	??___fladd+3,w,c
  5743  001A92  6E18               	movwf	___fladd@b+3,c
  5744  001A94  0E80               	movlw	128
  5745  001A96  1A21               	xorwf	___fladd@signs,f,c
  5746  001A98  6C24               	negf	___fladd@grs,c
  5747  001A9A  5024               	movf	___fladd@grs,w,c
  5748  001A9C  A4D8               	btfss	status,2,c
  5749  001A9E  D00F               	goto	l1182
  5750  001AA0  0E01               	movlw	1
  5751  001AA2  2615               	addwf	___fladd@b,f,c
  5752  001AA4  0E00               	movlw	0
  5753  001AA6  2216               	addwfc	___fladd@b+1,f,c
  5754  001AA8  2217               	addwfc	___fladd@b+2,f,c
  5755  001AAA  2218               	addwfc	___fladd@b+3,f,c
  5756  001AAC  D008               	goto	l1182
  5757  001AAE                     l3189:
  5758  001AAE  5019               	movf	___fladd@a,w,c
  5759  001AB0  5E15               	subwf	___fladd@b,f,c
  5760  001AB2  501A               	movf	___fladd@a+1,w,c
  5761  001AB4  5A16               	subwfb	___fladd@b+1,f,c
  5762  001AB6  501B               	movf	___fladd@a+2,w,c
  5763  001AB8  5A17               	subwfb	___fladd@b+2,f,c
  5764  001ABA  501C               	movf	___fladd@a+3,w,c
  5765  001ABC  5A18               	subwfb	___fladd@b+3,f,c
  5766  001ABE                     l1182:
  5767  001ABE  5015               	movf	___fladd@b,w,c
  5768  001AC0  1016               	iorwf	___fladd@b+1,w,c
  5769  001AC2  1017               	iorwf	___fladd@b+2,w,c
  5770  001AC4  1018               	iorwf	___fladd@b+3,w,c
  5771  001AC6  A4D8               	btfss	status,2,c
  5772  001AC8  D01C               	goto	l3213
  5773  001ACA  5024               	movf	___fladd@grs,w,c
  5774  001ACC  A4D8               	btfss	status,2,c
  5775  001ACE  D019               	goto	l3213
  5776  001AD0  0E00               	movlw	0
  5777  001AD2  6E15               	movwf	?___fladd,c
  5778  001AD4  0E00               	movlw	0
  5779  001AD6  6E16               	movwf	?___fladd+1,c
  5780  001AD8  0E00               	movlw	0
  5781  001ADA  6E17               	movwf	?___fladd+2,c
  5782  001ADC  0E00               	movlw	0
  5783  001ADE  6E18               	movwf	?___fladd+3,c
  5784  001AE0  0012               	return	
  5785  001AE2                     l3197:
  5786  001AE2  90D8               	bcf	status,0,c
  5787  001AE4  3615               	rlcf	___fladd@b,f,c
  5788  001AE6  3616               	rlcf	___fladd@b+1,f,c
  5789  001AE8  3617               	rlcf	___fladd@b+2,f,c
  5790  001AEA  3618               	rlcf	___fladd@b+3,f,c
  5791  001AEC  BE24               	btfsc	___fladd@grs,7,c
  5792  001AEE  8015               	bsf	___fladd@b,0,c
  5793  001AF0  A024               	btfss	___fladd@grs,0,c
  5794  001AF2  D002               	goto	l3207
  5795  001AF4  80D8               	bsf	status,0,c
  5796  001AF6  D001               	goto	L6
  5797  001AF8                     l3207:
  5798  001AF8  90D8               	bcf	status,0,c
  5799  001AFA                     L6:
  5800  001AFA  3624               	rlcf	___fladd@grs,f,c
  5801  001AFC  5023               	movf	___fladd@bexp,w,c
  5802  001AFE  A4D8               	btfss	status,2,c
  5803  001B00  0623               	decf	___fladd@bexp,f,c
  5804  001B02                     l3213:
  5805  001B02  AE17               	btfss	___fladd@b+2,7,c
  5806  001B04  D7EE               	goto	l3197
  5807  001B06                     u2670:
  5808  001B06  0E00               	movlw	0
  5809  001B08  6E22               	movwf	___fladd@aexp,c
  5810  001B0A  AE24               	btfss	___fladd@grs,7,c
  5811  001B0C  D00B               	goto	l1191
  5812  001B0E  C024  F01D         	movff	___fladd@grs,??___fladd
  5813  001B12  0E7F               	movlw	127
  5814  001B14  161D               	andwf	??___fladd,f,c
  5815  001B16  B4D8               	btfsc	status,2,c
  5816  001B18  D003               	goto	l1192
  5817  001B1A                     u2690:
  5818  001B1A  0E01               	movlw	1
  5819  001B1C  6E22               	movwf	___fladd@aexp,c
  5820  001B1E  D002               	goto	l1191
  5821  001B20                     l1192:
  5822  001B20  B015               	btfsc	___fladd@b,0,c
  5823  001B22  D7FB               	goto	u2690
  5824  001B24                     l1191:
  5825  001B24  5022               	movf	___fladd@aexp,w,c
  5826  001B26  B4D8               	btfsc	status,2,c
  5827  001B28  D020               	goto	l3233
  5828  001B2A  0E01               	movlw	1
  5829  001B2C  2615               	addwf	___fladd@b,f,c
  5830  001B2E  0E00               	movlw	0
  5831  001B30  2216               	addwfc	___fladd@b+1,f,c
  5832  001B32  2217               	addwfc	___fladd@b+2,f,c
  5833  001B34  2218               	addwfc	___fladd@b+3,f,c
  5834  001B36  A018               	btfss	___fladd@b+3,0,c
  5835  001B38  D018               	goto	l3233
  5836  001B3A  C015  F01D         	movff	___fladd@b,??___fladd
  5837  001B3E  C016  F01E         	movff	___fladd@b+1,??___fladd+1
  5838  001B42  C017  F01F         	movff	___fladd@b+2,??___fladd+2
  5839  001B46  C018  F020         	movff	___fladd@b+3,??___fladd+3
  5840  001B4A  3420               	rlcf	??___fladd+3,w,c
  5841  001B4C  3220               	rrcf	??___fladd+3,f,c
  5842  001B4E  321F               	rrcf	??___fladd+2,f,c
  5843  001B50  321E               	rrcf	??___fladd+1,f,c
  5844  001B52  321D               	rrcf	??___fladd,f,c
  5845  001B54  C01D  F015         	movff	??___fladd,___fladd@b
  5846  001B58  C01E  F016         	movff	??___fladd+1,___fladd@b+1
  5847  001B5C  C01F  F017         	movff	??___fladd+2,___fladd@b+2
  5848  001B60  C020  F018         	movff	??___fladd+3,___fladd@b+3
  5849  001B64  2823               	incf	___fladd@bexp,w,c
  5850  001B66  A4D8               	btfss	status,2,c
  5851  001B68  2A23               	incf	___fladd@bexp,f,c
  5852  001B6A                     l3233:
  5853  001B6A  2823               	incf	___fladd@bexp,w,c
  5854  001B6C  B4D8               	btfsc	status,2,c
  5855  001B6E  D003               	goto	u2750
  5856  001B70  5023               	movf	___fladd@bexp,w,c
  5857  001B72  A4D8               	btfss	status,2,c
  5858  001B74  D00D               	goto	l3241
  5859  001B76                     u2750:
  5860  001B76  0E00               	movlw	0
  5861  001B78  6E15               	movwf	___fladd@b,c
  5862  001B7A  0E00               	movlw	0
  5863  001B7C  6E16               	movwf	___fladd@b+1,c
  5864  001B7E  0E00               	movlw	0
  5865  001B80  6E17               	movwf	___fladd@b+2,c
  5866  001B82  0E00               	movlw	0
  5867  001B84  6E18               	movwf	___fladd@b+3,c
  5868  001B86  5023               	movf	___fladd@bexp,w,c
  5869  001B88  A4D8               	btfss	status,2,c
  5870  001B8A  D002               	goto	l3241
  5871  001B8C  0E00               	movlw	0
  5872  001B8E  6E21               	movwf	___fladd@signs,c
  5873  001B90                     l3241:
  5874  001B90  A023               	btfss	___fladd@bexp,0,c
  5875  001B92  D002               	goto	l3245
  5876  001B94  8E17               	bsf	___fladd@b+2,7,c
  5877  001B96  D001               	goto	l3247
  5878  001B98                     l3245:
  5879  001B98  9E17               	bcf	___fladd@b+2,7,c
  5880  001B9A                     l3247:
  5881  001B9A  90D8               	bcf	status,0,c
  5882  001B9C  3023               	rrcf	___fladd@bexp,w,c
  5883  001B9E  6E18               	movwf	___fladd@b+3,c
  5884  001BA0  BE21               	btfsc	___fladd@signs,7,c
  5885  001BA2  8E18               	bsf	___fladd@b+3,7,c
  5886  001BA4  C015  F015         	movff	___fladd@b,?___fladd
  5887  001BA8  C016  F016         	movff	___fladd@b+1,?___fladd+1
  5888  001BAC  C017  F017         	movff	___fladd@b+2,?___fladd+2
  5889  001BB0  C018  F018         	movff	___fladd@b+3,?___fladd+3
  5890  001BB4  0012               	return		;funcret
  5891  001BB6                     __end_of___fladd:
  5892                           	opt callstack 0
  5893                           
  5894 ;; *************** function ___flneg *****************
  5895 ;; Defined at:
  5896 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  f1              4    8[COMRAM] unsigned char 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  4    8[COMRAM] unsigned char 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5910 ;;      Params:         4       0       0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5913 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5914 ;;Total ram usage:        4 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    5
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_sprintf
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text19
  5925  002E16                     __ptext19:
  5926                           	opt callstack 0
  5927  002E16                     ___flneg:
  5928                           	opt callstack 24
  5929                           
  5930                           ;incstack = 0
  5931  002E16  5009               	movf	___flneg@f1,w,c
  5932  002E18  100A               	iorwf	___flneg@f1+1,w,c
  5933  002E1A  100B               	iorwf	___flneg@f1+2,w,c
  5934  002E1C  100C               	iorwf	___flneg@f1+3,w,c
  5935  002E1E  B4D8               	btfsc	status,2,c
  5936  002E20  D008               	goto	l3821
  5937  002E22  0E00               	movlw	0
  5938  002E24  1A09               	xorwf	___flneg@f1,f,c
  5939  002E26  0E00               	movlw	0
  5940  002E28  1A0A               	xorwf	___flneg@f1+1,f,c
  5941  002E2A  0E00               	movlw	0
  5942  002E2C  1A0B               	xorwf	___flneg@f1+2,f,c
  5943  002E2E  0E80               	movlw	128
  5944  002E30  1A0C               	xorwf	___flneg@f1+3,f,c
  5945  002E32                     l3821:
  5946  002E32  C009  F009         	movff	___flneg@f1,?___flneg
  5947  002E36  C00A  F00A         	movff	___flneg@f1+1,?___flneg+1
  5948  002E3A  C00B  F00B         	movff	___flneg@f1+2,?___flneg+2
  5949  002E3E  C00C  F00C         	movff	___flneg@f1+3,?___flneg+3
  5950  002E42  0012               	return		;funcret
  5951  002E44                     __end_of___flneg:
  5952                           	opt callstack 0
  5953                           
  5954 ;; *************** function ___flge *****************
  5955 ;; Defined at:
  5956 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  ff1             4    8[COMRAM] unsigned char 
  5959 ;;  ff2             4   12[COMRAM] unsigned char 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;		None               void
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5971 ;;      Params:         8       0       0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5973 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5974 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5975 ;;Total ram usage:       12 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    5
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_sprintf
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text20
  5986  002636                     __ptext20:
  5987                           	opt callstack 0
  5988  002636                     ___flge:
  5989                           	opt callstack 24
  5990                           
  5991                           ;incstack = 0
  5992  002636  0E00               	movlw	0
  5993  002638  1409               	andwf	___flge@ff1,w,c
  5994  00263A  6E11               	movwf	??___flge& (0+255),c
  5995  00263C  0E00               	movlw	0
  5996  00263E  140A               	andwf	___flge@ff1+1,w,c
  5997  002640  6E12               	movwf	(??___flge+1)& (0+255),c
  5998  002642  0E80               	movlw	128
  5999  002644  140B               	andwf	___flge@ff1+2,w,c
  6000  002646  6E13               	movwf	(??___flge+2)& (0+255),c
  6001  002648  0E7F               	movlw	127
  6002  00264A  140C               	andwf	___flge@ff1+3,w,c
  6003  00264C  6E14               	movwf	(??___flge+3)& (0+255),c
  6004  00264E  5011               	movf	??___flge,w,c
  6005  002650  1012               	iorwf	??___flge+1,w,c
  6006  002652  1013               	iorwf	??___flge+2,w,c
  6007  002654  1014               	iorwf	??___flge+3,w,c
  6008  002656  A4D8               	btfss	status,2,c
  6009  002658  D008               	goto	l3799
  6010  00265A  0E00               	movlw	0
  6011  00265C  6E09               	movwf	___flge@ff1,c
  6012  00265E  0E00               	movlw	0
  6013  002660  6E0A               	movwf	___flge@ff1+1,c
  6014  002662  0E00               	movlw	0
  6015  002664  6E0B               	movwf	___flge@ff1+2,c
  6016  002666  0E00               	movlw	0
  6017  002668  6E0C               	movwf	___flge@ff1+3,c
  6018  00266A                     l3799:
  6019  00266A  0E00               	movlw	0
  6020  00266C  140D               	andwf	___flge@ff2,w,c
  6021  00266E  6E11               	movwf	??___flge& (0+255),c
  6022  002670  0E00               	movlw	0
  6023  002672  140E               	andwf	___flge@ff2+1,w,c
  6024  002674  6E12               	movwf	(??___flge+1)& (0+255),c
  6025  002676  0E80               	movlw	128
  6026  002678  140F               	andwf	___flge@ff2+2,w,c
  6027  00267A  6E13               	movwf	(??___flge+2)& (0+255),c
  6028  00267C  0E7F               	movlw	127
  6029  00267E  1410               	andwf	___flge@ff2+3,w,c
  6030  002680  6E14               	movwf	(??___flge+3)& (0+255),c
  6031  002682  5011               	movf	??___flge,w,c
  6032  002684  1012               	iorwf	??___flge+1,w,c
  6033  002686  1013               	iorwf	??___flge+2,w,c
  6034  002688  1014               	iorwf	??___flge+3,w,c
  6035  00268A  A4D8               	btfss	status,2,c
  6036  00268C  D008               	goto	l3803
  6037  00268E  0E00               	movlw	0
  6038  002690  6E0D               	movwf	___flge@ff2,c
  6039  002692  0E00               	movlw	0
  6040  002694  6E0E               	movwf	___flge@ff2+1,c
  6041  002696  0E00               	movlw	0
  6042  002698  6E0F               	movwf	___flge@ff2+2,c
  6043  00269A  0E00               	movlw	0
  6044  00269C  6E10               	movwf	___flge@ff2+3,c
  6045  00269E                     l3803:
  6046  00269E  AE0C               	btfss	___flge@ff1+3,7,c
  6047  0026A0  D009               	goto	l3807
  6048  0026A2  6C09               	negf	___flge@ff1,c
  6049  0026A4  1E0A               	comf	___flge@ff1+1,f,c
  6050  0026A6  B0D8               	btfsc	status,0,c
  6051  0026A8  2A0A               	incf	___flge@ff1+1,f,c
  6052  0026AA  1E0B               	comf	___flge@ff1+2,f,c
  6053  0026AC  B0D8               	btfsc	status,0,c
  6054  0026AE  2A0B               	incf	___flge@ff1+2,f,c
  6055  0026B0  0E80               	movlw	128
  6056  0026B2  560C               	subfwb	___flge@ff1+3,f,c
  6057  0026B4                     l3807:
  6058  0026B4  AE10               	btfss	___flge@ff2+3,7,c
  6059  0026B6  D009               	goto	l893
  6060  0026B8  6C0D               	negf	___flge@ff2,c
  6061  0026BA  1E0E               	comf	___flge@ff2+1,f,c
  6062  0026BC  B0D8               	btfsc	status,0,c
  6063  0026BE  2A0E               	incf	___flge@ff2+1,f,c
  6064  0026C0  1E0F               	comf	___flge@ff2+2,f,c
  6065  0026C2  B0D8               	btfsc	status,0,c
  6066  0026C4  2A0F               	incf	___flge@ff2+2,f,c
  6067  0026C6  0E80               	movlw	128
  6068  0026C8  5610               	subfwb	___flge@ff2+3,f,c
  6069  0026CA                     l893:
  6070  0026CA  0E00               	movlw	0
  6071  0026CC  1A09               	xorwf	___flge@ff1,f,c
  6072  0026CE  0E00               	movlw	0
  6073  0026D0  1A0A               	xorwf	___flge@ff1+1,f,c
  6074  0026D2  0E00               	movlw	0
  6075  0026D4  1A0B               	xorwf	___flge@ff1+2,f,c
  6076  0026D6  0E80               	movlw	128
  6077  0026D8  1A0C               	xorwf	___flge@ff1+3,f,c
  6078  0026DA  0E00               	movlw	0
  6079  0026DC  1A0D               	xorwf	___flge@ff2,f,c
  6080  0026DE  0E00               	movlw	0
  6081  0026E0  1A0E               	xorwf	___flge@ff2+1,f,c
  6082  0026E2  0E00               	movlw	0
  6083  0026E4  1A0F               	xorwf	___flge@ff2+2,f,c
  6084  0026E6  0E80               	movlw	128
  6085  0026E8  1A10               	xorwf	___flge@ff2+3,f,c
  6086  0026EA  500D               	movf	___flge@ff2,w,c
  6087  0026EC  5C09               	subwf	___flge@ff1,w,c
  6088  0026EE  500E               	movf	___flge@ff2+1,w,c
  6089  0026F0  580A               	subwfb	___flge@ff1+1,w,c
  6090  0026F2  500F               	movf	___flge@ff2+2,w,c
  6091  0026F4  580B               	subwfb	___flge@ff1+2,w,c
  6092  0026F6  5010               	movf	___flge@ff2+3,w,c
  6093  0026F8  580C               	subwfb	___flge@ff1+3,w,c
  6094  0026FA  B0D8               	btfsc	status,0,c
  6095  0026FC  D002               	goto	l3813
  6096  0026FE  90D8               	bcf	status,0,c
  6097  002700  0012               	return	
  6098  002702                     l3813:
  6099  002702  80D8               	bsf	status,0,c
  6100  002704  0012               	return		;funcret
  6101  002706                     __end_of___flge:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function ___fleq *****************
  6105 ;; Defined at:
  6106 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  ff1             4    8[COMRAM] unsigned char 
  6109 ;;  ff2             4   12[COMRAM] unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;		None               void
  6114 ;; Registers used:
  6115 ;;		wreg, status,2, status,0
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6121 ;;      Params:         8       0       0       0       0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6123 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6124 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6125 ;;Total ram usage:       12 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    5
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_sprintf
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text21
  6136  00299C                     __ptext21:
  6137                           	opt callstack 0
  6138  00299C                     ___fleq:
  6139                           	opt callstack 24
  6140                           
  6141                           ;incstack = 0
  6142  00299C  0E00               	movlw	0
  6143  00299E  1409               	andwf	___fleq@ff1,w,c
  6144  0029A0  6E11               	movwf	??___fleq& (0+255),c
  6145  0029A2  0E00               	movlw	0
  6146  0029A4  140A               	andwf	___fleq@ff1+1,w,c
  6147  0029A6  6E12               	movwf	(??___fleq+1)& (0+255),c
  6148  0029A8  0E80               	movlw	128
  6149  0029AA  140B               	andwf	___fleq@ff1+2,w,c
  6150  0029AC  6E13               	movwf	(??___fleq+2)& (0+255),c
  6151  0029AE  0E7F               	movlw	127
  6152  0029B0  140C               	andwf	___fleq@ff1+3,w,c
  6153  0029B2  6E14               	movwf	(??___fleq+3)& (0+255),c
  6154  0029B4  5011               	movf	??___fleq,w,c
  6155  0029B6  1012               	iorwf	??___fleq+1,w,c
  6156  0029B8  1013               	iorwf	??___fleq+2,w,c
  6157  0029BA  1014               	iorwf	??___fleq+3,w,c
  6158  0029BC  A4D8               	btfss	status,2,c
  6159  0029BE  D008               	goto	l3783
  6160  0029C0  0E00               	movlw	0
  6161  0029C2  6E09               	movwf	___fleq@ff1,c
  6162  0029C4  0E00               	movlw	0
  6163  0029C6  6E0A               	movwf	___fleq@ff1+1,c
  6164  0029C8  0E00               	movlw	0
  6165  0029CA  6E0B               	movwf	___fleq@ff1+2,c
  6166  0029CC  0E00               	movlw	0
  6167  0029CE  6E0C               	movwf	___fleq@ff1+3,c
  6168  0029D0                     l3783:
  6169  0029D0  0E00               	movlw	0
  6170  0029D2  140D               	andwf	___fleq@ff2,w,c
  6171  0029D4  6E11               	movwf	??___fleq& (0+255),c
  6172  0029D6  0E00               	movlw	0
  6173  0029D8  140E               	andwf	___fleq@ff2+1,w,c
  6174  0029DA  6E12               	movwf	(??___fleq+1)& (0+255),c
  6175  0029DC  0E80               	movlw	128
  6176  0029DE  140F               	andwf	___fleq@ff2+2,w,c
  6177  0029E0  6E13               	movwf	(??___fleq+2)& (0+255),c
  6178  0029E2  0E7F               	movlw	127
  6179  0029E4  1410               	andwf	___fleq@ff2+3,w,c
  6180  0029E6  6E14               	movwf	(??___fleq+3)& (0+255),c
  6181  0029E8  5011               	movf	??___fleq,w,c
  6182  0029EA  1012               	iorwf	??___fleq+1,w,c
  6183  0029EC  1013               	iorwf	??___fleq+2,w,c
  6184  0029EE  1014               	iorwf	??___fleq+3,w,c
  6185  0029F0  A4D8               	btfss	status,2,c
  6186  0029F2  D008               	goto	l3787
  6187  0029F4  0E00               	movlw	0
  6188  0029F6  6E0D               	movwf	___fleq@ff2,c
  6189  0029F8  0E00               	movlw	0
  6190  0029FA  6E0E               	movwf	___fleq@ff2+1,c
  6191  0029FC  0E00               	movlw	0
  6192  0029FE  6E0F               	movwf	___fleq@ff2+2,c
  6193  002A00  0E00               	movlw	0
  6194  002A02  6E10               	movwf	___fleq@ff2+3,c
  6195  002A04                     l3787:
  6196  002A04  500D               	movf	___fleq@ff2,w,c
  6197  002A06  1809               	xorwf	___fleq@ff1,w,c
  6198  002A08  E10A               	bnz	u3480
  6199  002A0A  500E               	movf	___fleq@ff2+1,w,c
  6200  002A0C  180A               	xorwf	___fleq@ff1+1,w,c
  6201  002A0E  E107               	bnz	u3480
  6202  002A10  500F               	movf	___fleq@ff2+2,w,c
  6203  002A12  180B               	xorwf	___fleq@ff1+2,w,c
  6204  002A14  E104               	bnz	u3480
  6205  002A16  5010               	movf	___fleq@ff2+3,w,c
  6206  002A18  180C               	xorwf	___fleq@ff1+3,w,c
  6207  002A1A  B4D8               	btfsc	status,2,c
  6208  002A1C  D002               	goto	l3791
  6209  002A1E                     u3480:
  6210  002A1E  90D8               	bcf	status,0,c
  6211  002A20  0012               	return	
  6212  002A22                     l3791:
  6213  002A22  80D8               	bsf	status,0,c
  6214  002A24  0012               	return		;funcret
  6215  002A26                     __end_of___fleq:
  6216                           	opt callstack 0
  6217                           
  6218 ;; *************** function ___fldiv *****************
  6219 ;; Defined at:
  6220 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  b               4   44[COMRAM] unsigned char 
  6223 ;;  a               4   48[COMRAM] unsigned char 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  grs             4   63[COMRAM] unsigned long 
  6226 ;;  rem             4   56[COMRAM] unsigned long 
  6227 ;;  new_exp         2   61[COMRAM] int 
  6228 ;;  aexp            1   68[COMRAM] unsigned char 
  6229 ;;  bexp            1   67[COMRAM] unsigned char 
  6230 ;;  sign            1   60[COMRAM] unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  4   44[COMRAM] unsigned char 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6240 ;;      Params:         8       0       0       0       0       0       0       0       0
  6241 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6242 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6243 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6244 ;;Total ram usage:       25 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    5
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_main
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text22
  6255  001E44                     __ptext22:
  6256                           	opt callstack 0
  6257  001E44                     ___fldiv:
  6258                           	opt callstack 25
  6259                           
  6260                           ;incstack = 0
  6261  001E44  5030               	movf	___fldiv@b+3,w,c
  6262  001E46  0B80               	andlw	128
  6263  001E48  6E3D               	movwf	___fldiv@sign,c
  6264  001E4A  5030               	movf	___fldiv@b+3,w,c
  6265  001E4C  2430               	addwf	___fldiv@b+3,w,c
  6266  001E4E  6E44               	movwf	___fldiv@bexp,c
  6267  001E50  BE2F               	btfsc	___fldiv@b+2,7,c
  6268  001E52  8044               	bsf	___fldiv@bexp,0,c
  6269  001E54  5044               	movf	___fldiv@bexp,w,c
  6270  001E56  B4D8               	btfsc	status,2,c
  6271  001E58  D00D               	goto	l4301
  6272  001E5A  2844               	incf	___fldiv@bexp,w,c
  6273  001E5C  A4D8               	btfss	status,2,c
  6274  001E5E  D008               	goto	l4297
  6275  001E60  0E00               	movlw	0
  6276  001E62  6E2D               	movwf	___fldiv@b,c
  6277  001E64  0E00               	movlw	0
  6278  001E66  6E2E               	movwf	___fldiv@b+1,c
  6279  001E68  0E00               	movlw	0
  6280  001E6A  6E2F               	movwf	___fldiv@b+2,c
  6281  001E6C  0E00               	movlw	0
  6282  001E6E  6E30               	movwf	___fldiv@b+3,c
  6283  001E70                     l4297:
  6284  001E70  8E2F               	bsf	___fldiv@b+2,7,c
  6285  001E72  D006               	goto	L7
  6286  001E74                     l4301:
  6287  001E74  0E00               	movlw	0
  6288  001E76  6E2D               	movwf	___fldiv@b,c
  6289  001E78  0E00               	movlw	0
  6290  001E7A  6E2E               	movwf	___fldiv@b+1,c
  6291  001E7C  0E00               	movlw	0
  6292  001E7E  6E2F               	movwf	___fldiv@b+2,c
  6293  001E80                     L7:
  6294  001E80  0E00               	movlw	0
  6295  001E82  6E30               	movwf	___fldiv@b+3,c
  6296  001E84  5034               	movf	___fldiv@a+3,w,c
  6297  001E86  0B80               	andlw	128
  6298  001E88  1A3D               	xorwf	___fldiv@sign,f,c
  6299  001E8A  5034               	movf	___fldiv@a+3,w,c
  6300  001E8C  2434               	addwf	___fldiv@a+3,w,c
  6301  001E8E  6E45               	movwf	___fldiv@aexp,c
  6302  001E90  BE33               	btfsc	___fldiv@a+2,7,c
  6303  001E92  8045               	bsf	___fldiv@aexp,0,c
  6304  001E94  5045               	movf	___fldiv@aexp,w,c
  6305  001E96  B4D8               	btfsc	status,2,c
  6306  001E98  D00D               	goto	l4321
  6307  001E9A  2845               	incf	___fldiv@aexp,w,c
  6308  001E9C  A4D8               	btfss	status,2,c
  6309  001E9E  D008               	goto	l4317
  6310  001EA0  0E00               	movlw	0
  6311  001EA2  6E31               	movwf	___fldiv@a,c
  6312  001EA4  0E00               	movlw	0
  6313  001EA6  6E32               	movwf	___fldiv@a+1,c
  6314  001EA8  0E00               	movlw	0
  6315  001EAA  6E33               	movwf	___fldiv@a+2,c
  6316  001EAC  0E00               	movlw	0
  6317  001EAE  6E34               	movwf	___fldiv@a+3,c
  6318  001EB0                     l4317:
  6319  001EB0  8E33               	bsf	___fldiv@a+2,7,c
  6320  001EB2  D006               	goto	L8
  6321  001EB4                     l4321:
  6322  001EB4  0E00               	movlw	0
  6323  001EB6  6E31               	movwf	___fldiv@a,c
  6324  001EB8  0E00               	movlw	0
  6325  001EBA  6E32               	movwf	___fldiv@a+1,c
  6326  001EBC  0E00               	movlw	0
  6327  001EBE  6E33               	movwf	___fldiv@a+2,c
  6328  001EC0                     L8:
  6329  001EC0  0E00               	movlw	0
  6330  001EC2  6E34               	movwf	___fldiv@a+3,c
  6331  001EC4  5031               	movf	___fldiv@a,w,c
  6332  001EC6  1032               	iorwf	___fldiv@a+1,w,c
  6333  001EC8  1033               	iorwf	___fldiv@a+2,w,c
  6334  001ECA  1034               	iorwf	___fldiv@a+3,w,c
  6335  001ECC  A4D8               	btfss	status,2,c
  6336  001ECE  D017               	goto	l4335
  6337  001ED0  0E00               	movlw	0
  6338  001ED2  6E2D               	movwf	___fldiv@b,c
  6339  001ED4  0E00               	movlw	0
  6340  001ED6  6E2E               	movwf	___fldiv@b+1,c
  6341  001ED8  0E00               	movlw	0
  6342  001EDA  6E2F               	movwf	___fldiv@b+2,c
  6343  001EDC  0E00               	movlw	0
  6344  001EDE  6E30               	movwf	___fldiv@b+3,c
  6345  001EE0  0E80               	movlw	128
  6346  001EE2  122F               	iorwf	___fldiv@b+2,f,c
  6347  001EE4  0E7F               	movlw	127
  6348  001EE6  1230               	iorwf	___fldiv@b+3,f,c
  6349  001EE8                     l4329:
  6350  001EE8  503D               	movf	___fldiv@sign,w,c
  6351  001EEA  1230               	iorwf	___fldiv@b+3,f,c
  6352  001EEC  C02D  F02D         	movff	___fldiv@b,?___fldiv
  6353  001EF0  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  6354  001EF4  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  6355  001EF8  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  6356  001EFC  0012               	return	
  6357  001EFE                     l4335:
  6358  001EFE  5044               	movf	___fldiv@bexp,w,c
  6359  001F00  A4D8               	btfss	status,2,c
  6360  001F02  D009               	goto	l4343
  6361  001F04  0E00               	movlw	0
  6362  001F06  6E2D               	movwf	?___fldiv,c
  6363  001F08  0E00               	movlw	0
  6364  001F0A  6E2E               	movwf	?___fldiv+1,c
  6365  001F0C  0E00               	movlw	0
  6366  001F0E  6E2F               	movwf	?___fldiv+2,c
  6367  001F10  0E00               	movlw	0
  6368  001F12  6E30               	movwf	?___fldiv+3,c
  6369  001F14  0012               	return	
  6370  001F16                     l4343:
  6371  001F16  5045               	movf	___fldiv@aexp,w,c
  6372  001F18  C044  F035         	movff	___fldiv@bexp,??___fldiv
  6373  001F1C  6A36               	clrf	(??___fldiv+1)& (0+255),c
  6374  001F1E  5E35               	subwf	??___fldiv,f,c
  6375  001F20  0E00               	movlw	0
  6376  001F22  5A36               	subwfb	??___fldiv+1,f,c
  6377  001F24  0E7F               	movlw	127
  6378  001F26  2435               	addwf	??___fldiv,w,c
  6379  001F28  6E3E               	movwf	___fldiv@new_exp,c
  6380  001F2A  0E00               	movlw	0
  6381  001F2C  2036               	addwfc	??___fldiv+1,w,c
  6382  001F2E  6E3F               	movwf	___fldiv@new_exp+1,c
  6383  001F30  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  6384  001F34  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  6385  001F38  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  6386  001F3C  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  6387  001F40  0E00               	movlw	0
  6388  001F42  6E2D               	movwf	___fldiv@b,c
  6389  001F44  0E00               	movlw	0
  6390  001F46  6E2E               	movwf	___fldiv@b+1,c
  6391  001F48  0E00               	movlw	0
  6392  001F4A  6E2F               	movwf	___fldiv@b+2,c
  6393  001F4C  0E00               	movlw	0
  6394  001F4E  6E30               	movwf	___fldiv@b+3,c
  6395  001F50  0E00               	movlw	0
  6396  001F52  6E40               	movwf	___fldiv@grs,c
  6397  001F54  0E00               	movlw	0
  6398  001F56  6E41               	movwf	___fldiv@grs+1,c
  6399  001F58  0E00               	movlw	0
  6400  001F5A  6E42               	movwf	___fldiv@grs+2,c
  6401  001F5C  0E00               	movlw	0
  6402  001F5E  6E43               	movwf	___fldiv@grs+3,c
  6403  001F60  0E00               	movlw	0
  6404  001F62  6E45               	movwf	___fldiv@aexp,c
  6405  001F64  D028               	goto	l1221
  6406  001F66                     l4353:
  6407  001F66  5045               	movf	___fldiv@aexp,w,c
  6408  001F68  B4D8               	btfsc	status,2,c
  6409  001F6A  D011               	goto	l4361
  6410  001F6C  90D8               	bcf	status,0,c
  6411  001F6E  3639               	rlcf	___fldiv@rem,f,c
  6412  001F70  363A               	rlcf	___fldiv@rem+1,f,c
  6413  001F72  363B               	rlcf	___fldiv@rem+2,f,c
  6414  001F74  363C               	rlcf	___fldiv@rem+3,f,c
  6415  001F76  90D8               	bcf	status,0,c
  6416  001F78  362D               	rlcf	___fldiv@b,f,c
  6417  001F7A  362E               	rlcf	___fldiv@b+1,f,c
  6418  001F7C  362F               	rlcf	___fldiv@b+2,f,c
  6419  001F7E  3630               	rlcf	___fldiv@b+3,f,c
  6420  001F80  BE43               	btfsc	___fldiv@grs+3,7,c
  6421  001F82  802D               	bsf	___fldiv@b,0,c
  6422  001F84  90D8               	bcf	status,0,c
  6423  001F86  3640               	rlcf	___fldiv@grs,f,c
  6424  001F88  3641               	rlcf	___fldiv@grs+1,f,c
  6425  001F8A  3642               	rlcf	___fldiv@grs+2,f,c
  6426  001F8C  3643               	rlcf	___fldiv@grs+3,f,c
  6427  001F8E                     l4361:
  6428  001F8E  5031               	movf	___fldiv@a,w,c
  6429  001F90  5C39               	subwf	___fldiv@rem,w,c
  6430  001F92  5032               	movf	___fldiv@a+1,w,c
  6431  001F94  583A               	subwfb	___fldiv@rem+1,w,c
  6432  001F96  5033               	movf	___fldiv@a+2,w,c
  6433  001F98  583B               	subwfb	___fldiv@rem+2,w,c
  6434  001F9A  5034               	movf	___fldiv@a+3,w,c
  6435  001F9C  583C               	subwfb	___fldiv@rem+3,w,c
  6436  001F9E  A0D8               	btfss	status,0,c
  6437  001FA0  D009               	goto	l4367
  6438  001FA2  8C43               	bsf	___fldiv@grs+3,6,c
  6439  001FA4  5031               	movf	___fldiv@a,w,c
  6440  001FA6  5E39               	subwf	___fldiv@rem,f,c
  6441  001FA8  5032               	movf	___fldiv@a+1,w,c
  6442  001FAA  5A3A               	subwfb	___fldiv@rem+1,f,c
  6443  001FAC  5033               	movf	___fldiv@a+2,w,c
  6444  001FAE  5A3B               	subwfb	___fldiv@rem+2,f,c
  6445  001FB0  5034               	movf	___fldiv@a+3,w,c
  6446  001FB2  5A3C               	subwfb	___fldiv@rem+3,f,c
  6447  001FB4                     l4367:
  6448  001FB4  2A45               	incf	___fldiv@aexp,f,c
  6449  001FB6                     l1221:
  6450  001FB6  0E19               	movlw	25
  6451  001FB8  6445               	cpfsgt	___fldiv@aexp,c
  6452  001FBA  D7D5               	goto	l4353
  6453  001FBC  5039               	movf	___fldiv@rem,w,c
  6454  001FBE  103A               	iorwf	___fldiv@rem+1,w,c
  6455  001FC0  103B               	iorwf	___fldiv@rem+2,w,c
  6456  001FC2  103C               	iorwf	___fldiv@rem+3,w,c
  6457  001FC4  B4D8               	btfsc	status,2,c
  6458  001FC6  D011               	goto	l4379
  6459  001FC8  8040               	bsf	___fldiv@grs,0,c
  6460  001FCA  D00F               	goto	l4379
  6461  001FCC                     l4373:
  6462  001FCC  90D8               	bcf	status,0,c
  6463  001FCE  362D               	rlcf	___fldiv@b,f,c
  6464  001FD0  362E               	rlcf	___fldiv@b+1,f,c
  6465  001FD2  362F               	rlcf	___fldiv@b+2,f,c
  6466  001FD4  3630               	rlcf	___fldiv@b+3,f,c
  6467  001FD6  BE43               	btfsc	___fldiv@grs+3,7,c
  6468  001FD8  802D               	bsf	___fldiv@b,0,c
  6469  001FDA  90D8               	bcf	status,0,c
  6470  001FDC  3640               	rlcf	___fldiv@grs,f,c
  6471  001FDE  3641               	rlcf	___fldiv@grs+1,f,c
  6472  001FE0  3642               	rlcf	___fldiv@grs+2,f,c
  6473  001FE2  3643               	rlcf	___fldiv@grs+3,f,c
  6474  001FE4  063E               	decf	___fldiv@new_exp,f,c
  6475  001FE6  A0D8               	btfss	status,0,c
  6476  001FE8  063F               	decf	___fldiv@new_exp+1,f,c
  6477  001FEA                     l4379:
  6478  001FEA  AE2F               	btfss	___fldiv@b+2,7,c
  6479  001FEC  D7EF               	goto	l4373
  6480  001FEE  0E00               	movlw	0
  6481  001FF0  6E45               	movwf	___fldiv@aexp,c
  6482  001FF2  AE43               	btfss	___fldiv@grs+3,7,c
  6483  001FF4  D017               	goto	l1232
  6484  001FF6  0EFF               	movlw	255
  6485  001FF8  1440               	andwf	___fldiv@grs,w,c
  6486  001FFA  6E35               	movwf	??___fldiv& (0+255),c
  6487  001FFC  0EFF               	movlw	255
  6488  001FFE  1441               	andwf	___fldiv@grs+1,w,c
  6489  002000  6E36               	movwf	(??___fldiv+1)& (0+255),c
  6490  002002  0EFF               	movlw	255
  6491  002004  1442               	andwf	___fldiv@grs+2,w,c
  6492  002006  6E37               	movwf	(??___fldiv+2)& (0+255),c
  6493  002008  0E7F               	movlw	127
  6494  00200A  1443               	andwf	___fldiv@grs+3,w,c
  6495  00200C  6E38               	movwf	(??___fldiv+3)& (0+255),c
  6496  00200E  5035               	movf	??___fldiv,w,c
  6497  002010  1036               	iorwf	??___fldiv+1,w,c
  6498  002012  1037               	iorwf	??___fldiv+2,w,c
  6499  002014  1038               	iorwf	??___fldiv+3,w,c
  6500  002016  B4D8               	btfsc	status,2,c
  6501  002018  D003               	goto	l1233
  6502  00201A                     u4480:
  6503  00201A  0E01               	movlw	1
  6504  00201C  6E45               	movwf	___fldiv@aexp,c
  6505  00201E  D002               	goto	l1232
  6506  002020                     l1233:
  6507  002020  B02D               	btfsc	___fldiv@b,0,c
  6508  002022  D7FB               	goto	u4480
  6509  002024                     l1232:
  6510  002024  5045               	movf	___fldiv@aexp,w,c
  6511  002026  B4D8               	btfsc	status,2,c
  6512  002028  D01F               	goto	l4399
  6513  00202A  0E01               	movlw	1
  6514  00202C  262D               	addwf	___fldiv@b,f,c
  6515  00202E  0E00               	movlw	0
  6516  002030  222E               	addwfc	___fldiv@b+1,f,c
  6517  002032  222F               	addwfc	___fldiv@b+2,f,c
  6518  002034  2230               	addwfc	___fldiv@b+3,f,c
  6519  002036  A030               	btfss	___fldiv@b+3,0,c
  6520  002038  D017               	goto	l4399
  6521  00203A  C02D  F035         	movff	___fldiv@b,??___fldiv
  6522  00203E  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  6523  002042  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  6524  002046  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  6525  00204A  3438               	rlcf	??___fldiv+3,w,c
  6526  00204C  3238               	rrcf	??___fldiv+3,f,c
  6527  00204E  3237               	rrcf	??___fldiv+2,f,c
  6528  002050  3236               	rrcf	??___fldiv+1,f,c
  6529  002052  3235               	rrcf	??___fldiv,f,c
  6530  002054  C035  F02D         	movff	??___fldiv,___fldiv@b
  6531  002058  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  6532  00205C  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  6533  002060  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  6534  002064  4A3E               	infsnz	___fldiv@new_exp,f,c
  6535  002066  2A3F               	incf	___fldiv@new_exp+1,f,c
  6536  002068                     l4399:
  6537  002068  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  6538  00206A  D010               	goto	l4403
  6539  00206C  503F               	movf	___fldiv@new_exp+1,w,c
  6540  00206E  E103               	bnz	u4520
  6541  002070  283E               	incf	___fldiv@new_exp,w,c
  6542  002072  A0D8               	btfss	status,0,c
  6543  002074  D00B               	goto	l4403
  6544  002076                     u4520:
  6545  002076  0E00               	movlw	0
  6546  002078  6E3F               	movwf	___fldiv@new_exp+1,c
  6547  00207A  683E               	setf	___fldiv@new_exp,c
  6548  00207C  0E00               	movlw	0
  6549  00207E  6E2D               	movwf	___fldiv@b,c
  6550  002080  0E00               	movlw	0
  6551  002082  6E2E               	movwf	___fldiv@b+1,c
  6552  002084  0E00               	movlw	0
  6553  002086  6E2F               	movwf	___fldiv@b+2,c
  6554  002088  0E00               	movlw	0
  6555  00208A  6E30               	movwf	___fldiv@b+3,c
  6556  00208C                     l4403:
  6557  00208C  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  6558  00208E  D005               	goto	u4530
  6559  002090  503F               	movf	___fldiv@new_exp+1,w,c
  6560  002092  E111               	bnz	l4407
  6561  002094  043E               	decf	___fldiv@new_exp,w,c
  6562  002096  B0D8               	btfsc	status,0,c
  6563  002098  D00E               	goto	l4407
  6564  00209A                     u4530:
  6565  00209A  0E00               	movlw	0
  6566  00209C  6E3F               	movwf	___fldiv@new_exp+1,c
  6567  00209E  0E00               	movlw	0
  6568  0020A0  6E3E               	movwf	___fldiv@new_exp,c
  6569  0020A2  0E00               	movlw	0
  6570  0020A4  6E2D               	movwf	___fldiv@b,c
  6571  0020A6  0E00               	movlw	0
  6572  0020A8  6E2E               	movwf	___fldiv@b+1,c
  6573  0020AA  0E00               	movlw	0
  6574  0020AC  6E2F               	movwf	___fldiv@b+2,c
  6575  0020AE  0E00               	movlw	0
  6576  0020B0  6E30               	movwf	___fldiv@b+3,c
  6577  0020B2  0E00               	movlw	0
  6578  0020B4  6E3D               	movwf	___fldiv@sign,c
  6579  0020B6                     l4407:
  6580  0020B6  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  6581  0020BA  A044               	btfss	___fldiv@bexp,0,c
  6582  0020BC  D002               	goto	l4413
  6583  0020BE  8E2F               	bsf	___fldiv@b+2,7,c
  6584  0020C0  D001               	goto	l4415
  6585  0020C2                     l4413:
  6586  0020C2  9E2F               	bcf	___fldiv@b+2,7,c
  6587  0020C4                     l4415:
  6588  0020C4  90D8               	bcf	status,0,c
  6589  0020C6  3044               	rrcf	___fldiv@bexp,w,c
  6590  0020C8  6E30               	movwf	___fldiv@b+3,c
  6591  0020CA  D70E               	goto	l4329
  6592  0020CC                     __end_of___fldiv:
  6593                           	opt callstack 0
  6594                           
  6595 ;; *************** function _UARTSendString *****************
  6596 ;; Defined at:
  6597 ;;		line 284 in file "mcc_generated_files/eusart1.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;  str             2    9[COMRAM] PTR const unsigned char 
  6600 ;;		 -> msg1(50), STR_1(6), 
  6601 ;;  max_length      1   11[COMRAM] const unsigned char 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  i               2   15[COMRAM] int 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6613 ;;      Params:         3       0       0       0       0       0       0       0       0
  6614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6615 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6616 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6617 ;;Total ram usage:        8 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    6
  6620 ;; This function calls:
  6621 ;;		_UARTSendChar
  6622 ;; This function is called by:
  6623 ;;		_main
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text23
  6628  002908                     __ptext23:
  6629                           	opt callstack 0
  6630  002908                     _UARTSendString:
  6631                           	opt callstack 24
  6632                           
  6633                           ;eusart1.c: 285: int i = 0;
  6634                           
  6635                           ;incstack = 0
  6636  002908  0E00               	movlw	0
  6637  00290A  6E11               	movwf	UARTSendString@i+1,c
  6638  00290C  0E00               	movlw	0
  6639  00290E  6E10               	movwf	UARTSendString@i,c
  6640                           
  6641                           ;eusart1.c: 286: for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  6642  002910  0E00               	movlw	0
  6643  002912  6E11               	movwf	UARTSendString@i+1,c
  6644  002914  0E00               	movlw	0
  6645  002916  6E10               	movwf	UARTSendString@i,c
  6646  002918  D01A               	goto	l4003
  6647  00291A                     l3999:
  6648                           
  6649                           ;eusart1.c: 287: UARTSendChar(str[i]);
  6650  00291A  5010               	movf	UARTSendString@i,w,c
  6651  00291C  240A               	addwf	UARTSendString@str,w,c
  6652  00291E  6E0D               	movwf	??_UARTSendString& (0+255),c
  6653  002920  5011               	movf	UARTSendString@i+1,w,c
  6654  002922  200B               	addwfc	UARTSendString@str+1,w,c
  6655  002924  6E0E               	movwf	(??_UARTSendString+1)& (0+255),c
  6656  002926  C00D  FFF6         	movff	??_UARTSendString,tblptrl
  6657  00292A  C00E  FFF7         	movff	??_UARTSendString+1,tblptrh
  6658  00292E  6AF8               	clrf	tblptru,c
  6659  002930  0E07               	movlw	(high __ramtop+-1)
  6660  002932  64F7               	cpfsgt	tblptrh,c
  6661  002934  D003               	bra	u3867
  6662  002936  0008               	tblrd		*
  6663  002938  50F5               	movf	tablat,w,c
  6664  00293A  D005               	bra	u3860
  6665  00293C                     u3867:
  6666  00293C  CFF6 FFD9          	movff	tblptrl,fsr2l
  6667  002940  CFF7 FFDA          	movff	tblptrh,fsr2h
  6668  002944  50DF               	movf	indf2,w,c
  6669  002946                     u3860:
  6670  002946  ECBE  F017         	call	_UARTSendChar
  6671  00294A  4A10               	infsnz	UARTSendString@i,f,c
  6672  00294C  2A11               	incf	UARTSendString@i+1,f,c
  6673  00294E                     l4003:
  6674  00294E  500C               	movf	UARTSendString@max_length,w,c
  6675  002950  6E0D               	movwf	??_UARTSendString& (0+255),c
  6676  002952  6A0E               	clrf	(??_UARTSendString+1)& (0+255),c
  6677  002954  500D               	movf	??_UARTSendString,w,c
  6678  002956  5C10               	subwf	UARTSendString@i,w,c
  6679  002958  5011               	movf	UARTSendString@i+1,w,c
  6680  00295A  0A80               	xorlw	128
  6681  00295C  6E0F               	movwf	(??_UARTSendString+2)& (0+255),c
  6682  00295E  500E               	movf	??_UARTSendString+1,w,c
  6683  002960  0A80               	xorlw	128
  6684  002962  580F               	subwfb	(??_UARTSendString+2)& (0+255),w,c
  6685  002964  B0D8               	btfsc	status,0,c
  6686  002966  0012               	return	
  6687  002968  5010               	movf	UARTSendString@i,w,c
  6688  00296A  240A               	addwf	UARTSendString@str,w,c
  6689  00296C  6E0D               	movwf	??_UARTSendString& (0+255),c
  6690  00296E  5011               	movf	UARTSendString@i+1,w,c
  6691  002970  200B               	addwfc	UARTSendString@str+1,w,c
  6692  002972  6E0E               	movwf	(??_UARTSendString+1)& (0+255),c
  6693  002974  C00D  FFF6         	movff	??_UARTSendString,tblptrl
  6694  002978  C00E  FFF7         	movff	??_UARTSendString+1,tblptrh
  6695  00297C  6AF8               	clrf	tblptru,c
  6696  00297E  0E07               	movlw	(high __ramtop+-1)
  6697  002980  64F7               	cpfsgt	tblptrh,c
  6698  002982  D003               	bra	u3887
  6699  002984  0008               	tblrd		*
  6700  002986  50F5               	movf	tablat,w,c
  6701  002988  D005               	bra	u3880
  6702  00298A                     u3887:
  6703  00298A  CFF6 FFD9          	movff	tblptrl,fsr2l
  6704  00298E  CFF7 FFDA          	movff	tblptrh,fsr2h
  6705  002992  50DF               	movf	indf2,w,c
  6706  002994                     u3880:
  6707  002994  0900               	iorlw	0
  6708  002996  B4D8               	btfsc	status,2,c
  6709  002998  0012               	return	
  6710  00299A  D7BF               	goto	l3999
  6711  00299C                     __end_of_UARTSendString:
  6712                           	opt callstack 0
  6713                           
  6714 ;; *************** function _UARTSendChar *****************
  6715 ;; Defined at:
  6716 ;;		line 279 in file "mcc_generated_files/eusart1.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  c               1    wreg     const unsigned char 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  c               1    8[COMRAM] const unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0
  6731 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6733 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6734 ;;Total ram usage:        1 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    5
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_UARTSendString
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text24
  6745  002F7C                     __ptext24:
  6746                           	opt callstack 0
  6747  002F7C                     _UARTSendChar:
  6748                           	opt callstack 24
  6749                           
  6750                           ;incstack = 0
  6751                           ;UARTSendChar@c stored from wreg
  6752  002F7C  6E09               	movwf	UARTSendChar@c,c
  6753  002F7E                     
  6754                           ;eusart1.c: 280: while (TXSTAbits.TRMT == 0);
  6755  002F7E  A2AC               	btfss	4012,1,c	;volatile
  6756  002F80  D7FE               	goto	l3557
  6757  002F82                     u3160:
  6758  002F82  A89E               	btfss	3998,4,c	;volatile
  6759  002F84  D7FE               	goto	u3160
  6760                           
  6761                           ;eusart1.c: 282: TXREG = c;
  6762  002F86  C009  FFAD         	movff	UARTSendChar@c,4013	;volatile
  6763  002F8A  0012               	return		;funcret
  6764  002F8C                     __end_of_UARTSendChar:
  6765                           	opt callstack 0
  6766                           
  6767 ;; *************** function _SYSTEM_Initialize *****************
  6768 ;; Defined at:
  6769 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;		None
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      void 
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6783 ;;      Params:         0       0       0       0       0       0       0       0       0
  6784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6786 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6787 ;;Total ram usage:        0 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    7
  6790 ;; This function calls:
  6791 ;;		_ADC_Initialize
  6792 ;;		_EUSART1_Initialize
  6793 ;;		_INTERRUPT_Initialize
  6794 ;;		_OSCILLATOR_Initialize
  6795 ;;		_PIN_MANAGER_Initialize
  6796 ;;		_PWM2_Initialize
  6797 ;;		_TMR0_Initialize
  6798 ;;		_TMR2_Initialize
  6799 ;; This function is called by:
  6800 ;;		_main
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text25
  6805  002EC6                     __ptext25:
  6806                           	opt callstack 0
  6807  002EC6                     _SYSTEM_Initialize:
  6808                           	opt callstack 23
  6809                           
  6810                           ;mcc.c: 53: INTERRUPT_Initialize();
  6811                           
  6812                           ;incstack = 0
  6813  002EC6  ECF4  F017         	call	_INTERRUPT_Initialize	;wreg free
  6814                           
  6815                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  6816  002ECA  EC22  F017         	call	_PIN_MANAGER_Initialize	;wreg free
  6817                           
  6818                           ;mcc.c: 55: OSCILLATOR_Initialize();
  6819  002ECE  ECB5  F017         	call	_OSCILLATOR_Initialize	;wreg free
  6820                           
  6821                           ;mcc.c: 56: PWM2_Initialize();
  6822  002ED2  ECCE  F017         	call	_PWM2_Initialize	;wreg free
  6823                           
  6824                           ;mcc.c: 57: ADC_Initialize();
  6825  002ED6  ECA0  F017         	call	_ADC_Initialize	;wreg free
  6826                           
  6827                           ;mcc.c: 58: TMR2_Initialize();
  6828  002EDA  ECC6  F017         	call	_TMR2_Initialize	;wreg free
  6829                           
  6830                           ;mcc.c: 59: TMR0_Initialize();
  6831  002EDE  EC74  F017         	call	_TMR0_Initialize	;wreg free
  6832                           
  6833                           ;mcc.c: 60: EUSART1_Initialize();
  6834  002EE2  EC01  F016         	call	_EUSART1_Initialize	;wreg free
  6835  002EE6  0012               	return		;funcret
  6836  002EE8                     __end_of_SYSTEM_Initialize:
  6837                           	opt callstack 0
  6838                           
  6839 ;; *************** function _TMR2_Initialize *****************
  6840 ;; Defined at:
  6841 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6858 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6859 ;;Total ram usage:        0 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    5
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_SYSTEM_Initialize
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text26
  6870  002F8C                     __ptext26:
  6871                           	opt callstack 0
  6872  002F8C                     _TMR2_Initialize:
  6873                           	opt callstack 24
  6874                           
  6875                           ;tmr2.c: 67: PR2 = 0xF9;
  6876                           
  6877                           ;incstack = 0
  6878  002F8C  0EF9               	movlw	249
  6879  002F8E  6EBB               	movwf	4027,c	;volatile
  6880                           
  6881                           ;tmr2.c: 70: TMR2 = 0x00;
  6882  002F90  0E00               	movlw	0
  6883  002F92  6EBC               	movwf	4028,c	;volatile
  6884                           
  6885                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  6886  002F94  929E               	bcf	3998,1,c	;volatile
  6887                           
  6888                           ;tmr2.c: 76: T2CON = 0x06;
  6889  002F96  0E06               	movlw	6
  6890  002F98  6EBA               	movwf	4026,c	;volatile
  6891  002F9A  0012               	return		;funcret
  6892  002F9C                     __end_of_TMR2_Initialize:
  6893                           	opt callstack 0
  6894                           
  6895 ;; *************** function _TMR0_Initialize *****************
  6896 ;; Defined at:
  6897 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		wreg, status,2, status,0, cstack
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6911 ;;      Params:         0       0       0       0       0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6914 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6915 ;;Total ram usage:        0 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    6
  6918 ;; This function calls:
  6919 ;;		_TMR0_SetInterruptHandler
  6920 ;; This function is called by:
  6921 ;;		_SYSTEM_Initialize
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text27
  6926  002EE8                     __ptext27:
  6927                           	opt callstack 0
  6928  002EE8                     _TMR0_Initialize:
  6929                           	opt callstack 23
  6930                           
  6931                           ;tmr0.c: 73: TMR0H = 0x00;
  6932                           
  6933                           ;incstack = 0
  6934  002EE8  0E00               	movlw	0
  6935  002EEA  6ED7               	movwf	4055,c	;volatile
  6936                           
  6937                           ;tmr0.c: 76: TMR0L = 0x64;
  6938  002EEC  0E64               	movlw	100
  6939  002EEE  6ED6               	movwf	4054,c	;volatile
  6940                           
  6941                           ;tmr0.c: 80: timer0ReloadVal = 100;
  6942  002EF0  0E64               	movlw	100
  6943  002EF2  6E56               	movwf	_timer0ReloadVal,c	;volatile
  6944                           
  6945                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  6946  002EF4  94F2               	bcf	4082,2,c	;volatile
  6947                           
  6948                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  6949  002EF6  8AF2               	bsf	4082,5,c	;volatile
  6950                           
  6951                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  6952  002EF8  0EF0               	movlw	low _TMR0_DefaultInterruptHandler
  6953  002EFA  6E09               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  6954  002EFC  0E2F               	movlw	high _TMR0_DefaultInterruptHandler
  6955  002EFE  6E0A               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  6956  002F00  ECD5  F017         	call	_TMR0_SetInterruptHandler	;wreg free
  6957                           
  6958                           ;tmr0.c: 92: T0CON = 0xD7;
  6959  002F04  0ED7               	movlw	215
  6960  002F06  6ED5               	movwf	4053,c	;volatile
  6961  002F08  0012               	return		;funcret
  6962  002F0A                     __end_of_TMR0_Initialize:
  6963                           	opt callstack 0
  6964                           
  6965 ;; *************** function _TMR0_SetInterruptHandler *****************
  6966 ;; Defined at:
  6967 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  6970 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6982 ;;      Params:         2       0       0       0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6985 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6986 ;;Total ram usage:        2 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    5
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_TMR0_Initialize
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text28
  6997  002FAA                     __ptext28:
  6998                           	opt callstack 0
  6999  002FAA                     _TMR0_SetInterruptHandler:
  7000                           	opt callstack 23
  7001                           
  7002                           ;tmr0.c: 149: TMR0_InterruptHandler = InterruptHandler;
  7003                           
  7004                           ;incstack = 0
  7005  002FAA  C009  F0DD         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  7006  002FAE  C00A  F0DE         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  7007  002FB2  0012               	return		;funcret
  7008  002FB4                     __end_of_TMR0_SetInterruptHandler:
  7009                           	opt callstack 0
  7010                           
  7011 ;; *************** function _PWM2_Initialize *****************
  7012 ;; Defined at:
  7013 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7027 ;;      Params:         0       0       0       0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7030 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    5
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_SYSTEM_Initialize
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text29
  7042  002F9C                     __ptext29:
  7043                           	opt callstack 0
  7044  002F9C                     _PWM2_Initialize:
  7045                           	opt callstack 24
  7046                           
  7047                           ;pwm2.c: 69: CCP2CON = 0x3C;
  7048                           
  7049                           ;incstack = 0
  7050  002F9C  0E3C               	movlw	60
  7051  002F9E  6E97               	movwf	3991,c	;volatile
  7052                           
  7053                           ;pwm2.c: 72: CCPR2L = 0x18;
  7054  002FA0  0E18               	movlw	24
  7055  002FA2  6E90               	movwf	3984,c	;volatile
  7056                           
  7057                           ;pwm2.c: 75: CCPR2H = 0x00;
  7058  002FA4  0E00               	movlw	0
  7059  002FA6  6E91               	movwf	3985,c	;volatile
  7060  002FA8  0012               	return		;funcret
  7061  002FAA                     __end_of_PWM2_Initialize:
  7062                           	opt callstack 0
  7063                           
  7064 ;; *************** function _PIN_MANAGER_Initialize *****************
  7065 ;; Defined at:
  7066 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;		None
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0
  7081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7083 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    5
  7087 ;; This function calls:
  7088 ;;		Nothing
  7089 ;; This function is called by:
  7090 ;;		_SYSTEM_Initialize
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text30
  7095  002E44                     __ptext30:
  7096                           	opt callstack 0
  7097  002E44                     _PIN_MANAGER_Initialize:
  7098                           	opt callstack 24
  7099                           
  7100                           ;pin_manager.c: 60: LATA = 0x00;
  7101                           
  7102                           ;incstack = 0
  7103  002E44  0E00               	movlw	0
  7104  002E46  6E89               	movwf	3977,c	;volatile
  7105                           
  7106                           ;pin_manager.c: 61: LATB = 0x01;
  7107  002E48  0E01               	movlw	1
  7108  002E4A  6E8A               	movwf	3978,c	;volatile
  7109                           
  7110                           ;pin_manager.c: 62: LATC = 0x00;
  7111  002E4C  0E00               	movlw	0
  7112  002E4E  6E8B               	movwf	3979,c	;volatile
  7113                           
  7114                           ;pin_manager.c: 67: TRISA = 0xF3;
  7115  002E50  0EF3               	movlw	243
  7116  002E52  6E92               	movwf	3986,c	;volatile
  7117                           
  7118                           ;pin_manager.c: 68: TRISB = 0xF6;
  7119  002E54  0EF6               	movlw	246
  7120  002E56  6E93               	movwf	3987,c	;volatile
  7121                           
  7122                           ;pin_manager.c: 69: TRISC = 0x87;
  7123  002E58  0E87               	movlw	135
  7124  002E5A  6E94               	movwf	3988,c	;volatile
  7125                           
  7126                           ;pin_manager.c: 74: ANSELC = 0x00;
  7127  002E5C  0E00               	movlw	0
  7128  002E5E  010F               	movlb	15	; () banked
  7129  002E60  6F5D               	movwf	93,b	;volatile
  7130                           
  7131                           ;pin_manager.c: 75: ANSELB = 0x34;
  7132  002E62  0E34               	movlw	52
  7133  002E64  6F5C               	movwf	92,b	;volatile
  7134                           
  7135                           ;pin_manager.c: 76: ANSELA = 0x27;
  7136  002E66  0E27               	movlw	39
  7137  002E68  6F5B               	movwf	91,b	;volatile
  7138                           
  7139                           ;pin_manager.c: 81: WPUB = 0x00;
  7140  002E6A  0E00               	movlw	0
  7141  002E6C  6E85               	movwf	3973,c	;volatile
  7142                           
  7143                           ; BSR set to: 15
  7144                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 0;
  7145  002E6E  9EF1               	bcf	4081,7,c	;volatile
  7146                           
  7147                           ; BSR set to: 15
  7148  002E70  0012               	return		;funcret
  7149  002E72                     __end_of_PIN_MANAGER_Initialize:
  7150                           	opt callstack 0
  7151                           
  7152 ;; *************** function _OSCILLATOR_Initialize *****************
  7153 ;; Defined at:
  7154 ;;		line 63 in file "mcc_generated_files/mcc.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7168 ;;      Params:         0       0       0       0       0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7172 ;;Total ram usage:        0 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:    5
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_SYSTEM_Initialize
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text31
  7183  002F6A                     __ptext31:
  7184                           	opt callstack 0
  7185  002F6A                     _OSCILLATOR_Initialize:
  7186                           	opt callstack 24
  7187                           
  7188                           ;mcc.c: 66: OSCCON = 0x70;
  7189                           
  7190                           ; BSR set to: 15
  7191                           ;incstack = 0
  7192  002F6A  0E70               	movlw	112
  7193  002F6C  6ED3               	movwf	4051,c	;volatile
  7194                           
  7195                           ;mcc.c: 68: OSCCON2 = 0x00;
  7196  002F6E  0E00               	movlw	0
  7197  002F70  6ED2               	movwf	4050,c	;volatile
  7198                           
  7199                           ;mcc.c: 70: OSCTUNE = 0x00;
  7200  002F72  0E00               	movlw	0
  7201  002F74  6E9B               	movwf	3995,c	;volatile
  7202                           
  7203                           ;mcc.c: 72: ACTCON = 0x00;
  7204  002F76  0E00               	movlw	0
  7205  002F78  6EB5               	movwf	4021,c	;volatile
  7206  002F7A  0012               	return		;funcret
  7207  002F7C                     __end_of_OSCILLATOR_Initialize:
  7208                           	opt callstack 0
  7209                           
  7210 ;; *************** function _INTERRUPT_Initialize *****************
  7211 ;; Defined at:
  7212 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;		None
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;		None
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      void 
  7219 ;; Registers used:
  7220 ;;		None
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7226 ;;      Params:         0       0       0       0       0       0       0       0       0
  7227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7230 ;;Total ram usage:        0 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    5
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		_SYSTEM_Initialize
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text32
  7241  002FE8                     __ptext32:
  7242                           	opt callstack 0
  7243  002FE8                     _INTERRUPT_Initialize:
  7244                           	opt callstack 24
  7245                           
  7246                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  7247                           
  7248                           ;incstack = 0
  7249  002FE8  9ED0               	bcf	4048,7,c	;volatile
  7250  002FEA  0012               	return		;funcret
  7251  002FEC                     __end_of_INTERRUPT_Initialize:
  7252                           	opt callstack 0
  7253                           
  7254 ;; *************** function _EUSART1_Initialize *****************
  7255 ;; Defined at:
  7256 ;;		line 82 in file "mcc_generated_files/eusart1.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    6
  7277 ;; This function calls:
  7278 ;;		_EUSART1_SetErrorHandler
  7279 ;;		_EUSART1_SetFramingErrorHandler
  7280 ;;		_EUSART1_SetOverrunErrorHandler
  7281 ;;		_EUSART1_SetRxInterruptHandler
  7282 ;; This function is called by:
  7283 ;;		_SYSTEM_Initialize
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text33
  7288  002C02                     __ptext33:
  7289                           	opt callstack 0
  7290  002C02                     _EUSART1_Initialize:
  7291                           	opt callstack 23
  7292                           
  7293                           ;eusart1.c: 85: PIE1bits.RC1IE = 0;
  7294                           
  7295                           ;incstack = 0
  7296  002C02  9A9D               	bcf	3997,5,c	;volatile
  7297                           
  7298                           ;eusart1.c: 86: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  7299  002C04  0E6E               	movlw	low _EUSART1_Receive_ISR
  7300  002C06  6E09               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  7301  002C08  0E28               	movlw	high _EUSART1_Receive_ISR
  7302  002C0A  6E0A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  7303  002C0C  ECDA  F017         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  7304                           
  7305                           ;eusart1.c: 90: BAUDCON1 = 0x08;
  7306  002C10  0E08               	movlw	8
  7307  002C12  6EB8               	movwf	4024,c	;volatile
  7308                           
  7309                           ;eusart1.c: 93: RCSTA1 = 0x90;
  7310  002C14  0E90               	movlw	144
  7311  002C16  6EAB               	movwf	4011,c	;volatile
  7312                           
  7313                           ;eusart1.c: 96: TXSTA1 = 0x24;
  7314  002C18  0E24               	movlw	36
  7315  002C1A  6EAC               	movwf	4012,c	;volatile
  7316                           
  7317                           ;eusart1.c: 99: SPBRG1 = 0xCF;
  7318  002C1C  0ECF               	movlw	207
  7319  002C1E  6EAF               	movwf	4015,c	;volatile
  7320                           
  7321                           ;eusart1.c: 102: SPBRGH1 = 0x00;
  7322  002C20  0E00               	movlw	0
  7323  002C22  6EB0               	movwf	4016,c	;volatile
  7324                           
  7325                           ;eusart1.c: 105: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  7326  002C24  0EF2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  7327  002C26  6E09               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  7328  002C28  0E2F               	movlw	high _EUSART1_DefaultFramingErrorHandler
  7329  002C2A  6E0A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  7330  002C2C  ECE4  F017         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7331                           
  7332                           ;eusart1.c: 106: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  7333  002C30  0EDC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  7334  002C32  6E09               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  7335  002C34  0E2F               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  7336  002C36  6E0A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  7337  002C38  ECDF  F017         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7338                           
  7339                           ;eusart1.c: 107: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  7340  002C3C  0EE2               	movlw	low _EUSART1_DefaultErrorHandler
  7341  002C3E  6E09               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  7342  002C40  0E2F               	movlw	high _EUSART1_DefaultErrorHandler
  7343  002C42  6E0A               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  7344  002C44  ECE9  F017         	call	_EUSART1_SetErrorHandler	;wreg free
  7345                           
  7346                           ;eusart1.c: 109: eusart1RxLastError.status = 0;
  7347  002C48  0E00               	movlw	0
  7348  002C4A  6E4F               	movwf	_eusart1RxLastError,c	;volatile
  7349                           
  7350                           ;eusart1.c: 112: eusart1RxHead = 0;
  7351  002C4C  0E00               	movlw	0
  7352  002C4E  6E52               	movwf	_eusart1RxHead,c	;volatile
  7353                           
  7354                           ;eusart1.c: 113: eusart1RxTail = 0;
  7355  002C50  0E00               	movlw	0
  7356  002C52  6E51               	movwf	_eusart1RxTail,c	;volatile
  7357                           
  7358                           ;eusart1.c: 114: eusart1RxCount = 0;
  7359  002C54  0E00               	movlw	0
  7360  002C56  6E50               	movwf	_eusart1RxCount,c	;volatile
  7361                           
  7362                           ;eusart1.c: 117: PIE1bits.RC1IE = 1;
  7363  002C58  8A9D               	bsf	3997,5,c	;volatile
  7364  002C5A  0012               	return		;funcret
  7365  002C5C                     __end_of_EUSART1_Initialize:
  7366                           	opt callstack 0
  7367                           
  7368 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  7369 ;; Defined at:
  7370 ;;		line 254 in file "mcc_generated_files/eusart1.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  7373 ;;		 -> EUSART1_Receive_ISR(1), 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;		None
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      void 
  7378 ;; Registers used:
  7379 ;;		wreg, status,2, status,0
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7385 ;;      Params:         2       0       0       0       0       0       0       0       0
  7386 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7388 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7389 ;;Total ram usage:        2 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:    5
  7392 ;; This function calls:
  7393 ;;		Nothing
  7394 ;; This function is called by:
  7395 ;;		_EUSART1_Initialize
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           	psect	text34
  7400  002FB4                     __ptext34:
  7401                           	opt callstack 0
  7402  002FB4                     _EUSART1_SetRxInterruptHandler:
  7403                           	opt callstack 23
  7404                           
  7405                           ;eusart1.c: 255: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  7406                           
  7407                           ;incstack = 0
  7408  002FB4  C009  F0DF         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  7409  002FB8  C00A  F0E0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  7410  002FBC  0012               	return		;funcret
  7411  002FBE                     __end_of_EUSART1_SetRxInterruptHandler:
  7412                           	opt callstack 0
  7413                           
  7414 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7415 ;; Defined at:
  7416 ;;		line 243 in file "mcc_generated_files/eusart1.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  7419 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      void 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7431 ;;      Params:         2       0       0       0       0       0       0       0       0
  7432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7434 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7435 ;;Total ram usage:        2 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    5
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_EUSART1_Initialize
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text35
  7446  002FBE                     __ptext35:
  7447                           	opt callstack 0
  7448  002FBE                     _EUSART1_SetOverrunErrorHandler:
  7449                           	opt callstack 23
  7450                           
  7451                           ;eusart1.c: 244: EUSART1_OverrunErrorHandler = interruptHandler;
  7452                           
  7453                           ;incstack = 0
  7454  002FBE  C009  F0D9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7455  002FC2  C00A  F0DA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7456  002FC6  0012               	return		;funcret
  7457  002FC8                     __end_of_EUSART1_SetOverrunErrorHandler:
  7458                           	opt callstack 0
  7459                           
  7460 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7461 ;; Defined at:
  7462 ;;		line 239 in file "mcc_generated_files/eusart1.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  7465 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2, status,0
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7477 ;;      Params:         2       0       0       0       0       0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7480 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7481 ;;Total ram usage:        2 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    5
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_EUSART1_Initialize
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text36
  7492  002FC8                     __ptext36:
  7493                           	opt callstack 0
  7494  002FC8                     _EUSART1_SetFramingErrorHandler:
  7495                           	opt callstack 23
  7496                           
  7497                           ;eusart1.c: 240: EUSART1_FramingErrorHandler = interruptHandler;
  7498                           
  7499                           ;incstack = 0
  7500  002FC8  C009  F0DB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7501  002FCC  C00A  F0DC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7502  002FD0  0012               	return		;funcret
  7503  002FD2                     __end_of_EUSART1_SetFramingErrorHandler:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function _EUSART1_SetErrorHandler *****************
  7507 ;; Defined at:
  7508 ;;		line 247 in file "mcc_generated_files/eusart1.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
  7511 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;		None
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      void 
  7516 ;; Registers used:
  7517 ;;		wreg, status,2, status,0
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7523 ;;      Params:         2       0       0       0       0       0       0       0       0
  7524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7526 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7527 ;;Total ram usage:        2 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:    5
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_EUSART1_Initialize
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text37
  7538  002FD2                     __ptext37:
  7539                           	opt callstack 0
  7540  002FD2                     _EUSART1_SetErrorHandler:
  7541                           	opt callstack 23
  7542                           
  7543                           ;eusart1.c: 248: EUSART1_ErrorHandler = interruptHandler;
  7544                           
  7545                           ;incstack = 0
  7546  002FD2  C009  F0D7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7547  002FD6  C00A  F0D8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7548  002FDA  0012               	return		;funcret
  7549  002FDC                     __end_of_EUSART1_SetErrorHandler:
  7550                           	opt callstack 0
  7551                           
  7552 ;; *************** function _ADC_Initialize *****************
  7553 ;; Defined at:
  7554 ;;		line 60 in file "mcc_generated_files/adc.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;		None
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7568 ;;      Params:         0       0       0       0       0       0       0       0       0
  7569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7571 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7572 ;;Total ram usage:        0 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; Hardware stack levels required when called:    5
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_SYSTEM_Initialize
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text38
  7583  002F40                     __ptext38:
  7584                           	opt callstack 0
  7585  002F40                     _ADC_Initialize:
  7586                           	opt callstack 24
  7587                           
  7588                           ;adc.c: 65: ADCON0 = 0x01;
  7589                           
  7590                           ;incstack = 0
  7591  002F40  0E01               	movlw	1
  7592  002F42  6EC2               	movwf	4034,c	;volatile
  7593                           
  7594                           ;adc.c: 68: ADCON1 = 0x00;
  7595  002F44  0E00               	movlw	0
  7596  002F46  6EC1               	movwf	4033,c	;volatile
  7597                           
  7598                           ;adc.c: 71: ADCON2 = 0x85;
  7599  002F48  0E85               	movlw	133
  7600  002F4A  6EC0               	movwf	4032,c	;volatile
  7601                           
  7602                           ;adc.c: 74: ADRESL = 0x00;
  7603  002F4C  0E00               	movlw	0
  7604  002F4E  6EC3               	movwf	4035,c	;volatile
  7605                           
  7606                           ;adc.c: 77: ADRESH = 0x00;
  7607  002F50  0E00               	movlw	0
  7608  002F52  6EC4               	movwf	4036,c	;volatile
  7609  002F54  0012               	return		;funcret
  7610  002F56                     __end_of_ADC_Initialize:
  7611                           	opt callstack 0
  7612                           
  7613 ;; *************** function _DHT11_Start *****************
  7614 ;; Defined at:
  7615 ;;		line 94 in file "main.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7631 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7632 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7633 ;;Total ram usage:        1 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    5
  7636 ;; This function calls:
  7637 ;;		Nothing
  7638 ;; This function is called by:
  7639 ;;		_main
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text39
  7644  002E72                     __ptext39:
  7645                           	opt callstack 0
  7646  002E72                     _DHT11_Start:
  7647                           	opt callstack 25
  7648                           
  7649                           ;main.c: 95: TRISBbits.TRISB0 = 0;
  7650                           
  7651                           ;incstack = 0
  7652  002E72  9093               	bcf	3987,0,c	;volatile
  7653                           
  7654                           ;main.c: 96: LATBbits.LATB0 = 0;
  7655  002E74  908A               	bcf	3978,0,c	;volatile
  7656                           
  7657                           ;main.c: 97: _delay((unsigned long)((18)*(16000000/4000.0)));
  7658  002E76  0E5E               	movlw	94
  7659  002E78  6E09               	movwf	??_DHT11_Start& (0+255),c
  7660  002E7A  0E80               	movlw	128
  7661  002E7C                     u5327:
  7662  002E7C  2EE8               	decfsz	wreg,f,c
  7663  002E7E  D7FE               	bra	u5327
  7664  002E80  2E09               	decfsz	??_DHT11_Start& (0+255),f,c
  7665  002E82  D7FC               	bra	u5327
  7666  002E84  D000               	nop2	
  7667                           
  7668                           ;main.c: 98: LATBbits.LATB0 = 1;
  7669  002E86  808A               	bsf	3978,0,c	;volatile
  7670                           
  7671                           ;main.c: 99: _delay((unsigned long)((40)*(16000000/4000000.0)));
  7672  002E88  0E35               	movlw	53
  7673  002E8A                     u5337:
  7674  002E8A  2EE8               	decfsz	wreg,f,c
  7675  002E8C  D7FE               	bra	u5337
  7676  002E8E  F000               	nop	
  7677                           
  7678                           ;main.c: 100: TRISBbits.TRISB0 = 1;
  7679  002E90  8093               	bsf	3987,0,c	;volatile
  7680  002E92                     l501:
  7681  002E92  B081               	btfsc	3969,0,c	;volatile
  7682  002E94  D7FE               	goto	l501
  7683  002E96                     u4250:
  7684  002E96  A081               	btfss	3969,0,c	;volatile
  7685  002E98  D7FE               	goto	u4250
  7686  002E9A                     u4260:
  7687  002E9A  A081               	btfss	3969,0,c	;volatile
  7688  002E9C  0012               	return	
  7689  002E9E  D7FD               	goto	u4260
  7690  002EA0                     __end_of_DHT11_Start:
  7691                           	opt callstack 0
  7692                           
  7693 ;; *************** function _DHT11_ReadData *****************
  7694 ;; Defined at:
  7695 ;;		line 82 in file "main.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  data            1    9[COMRAM] unsigned char 
  7700 ;;  i               1    8[COMRAM] unsigned char 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      unsigned char 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0
  7711 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7713 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7714 ;;Total ram usage:        2 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:    5
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_main
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text40
  7725  002D7E                     __ptext40:
  7726                           	opt callstack 0
  7727  002D7E                     _DHT11_ReadData:
  7728                           	opt callstack 25
  7729                           
  7730                           ;main.c: 83: char i = 0;
  7731                           
  7732                           ;incstack = 0
  7733  002D7E  0E00               	movlw	0
  7734  002D80  6E09               	movwf	DHT11_ReadData@i,c
  7735                           
  7736                           ;main.c: 84: char data = 0;
  7737  002D82  0E00               	movlw	0
  7738  002D84  6E0A               	movwf	DHT11_ReadData@data,c
  7739                           
  7740                           ;main.c: 85: for (i = 0; i < 8; i++) {
  7741  002D86  0E00               	movlw	0
  7742  002D88  6E09               	movwf	DHT11_ReadData@i,c
  7743  002D8A                     l490:
  7744  002D8A  A081               	btfss	3969,0,c	;volatile
  7745  002D8C  D7FE               	goto	l490
  7746                           
  7747                           ;main.c: 87: _delay((unsigned long)((30)*(16000000/4000000.0)));
  7748  002D8E  0E28               	movlw	40
  7749  002D90                     u5347:
  7750  002D90  2EE8               	decfsz	wreg,f,c
  7751  002D92  D7FE               	bra	u5347
  7752                           
  7753                           ;main.c: 88: if (PORTBbits.RB0 & 1) data = ((data << 1) | 1);
  7754  002D94  A081               	btfss	3969,0,c	;volatile
  7755  002D96  D003               	goto	l4275
  7756  002D98  80D8               	bsf	status,0,c
  7757  002D9A  360A               	rlcf	DHT11_ReadData@data,f,c
  7758  002D9C  D003               	goto	l495
  7759  002D9E                     l4275:
  7760                           
  7761                           ;main.c: 89: else data = (data << 1);
  7762  002D9E  500A               	movf	DHT11_ReadData@data,w,c
  7763  002DA0  240A               	addwf	DHT11_ReadData@data,w,c
  7764  002DA2  6E0A               	movwf	DHT11_ReadData@data,c
  7765  002DA4                     l495:
  7766  002DA4  B081               	btfsc	3969,0,c	;volatile
  7767  002DA6  D7FE               	goto	l495
  7768  002DA8  2A09               	incf	DHT11_ReadData@i,f,c
  7769  002DAA  0E07               	movlw	7
  7770  002DAC  6409               	cpfsgt	DHT11_ReadData@i,c
  7771  002DAE  D7ED               	goto	l490
  7772                           
  7773                           ;main.c: 91: };main.c: 92: return data;
  7774  002DB0  500A               	movf	DHT11_ReadData@data,w,c
  7775  002DB2  0012               	return		;funcret
  7776  002DB4                     __end_of_DHT11_ReadData:
  7777                           	opt callstack 0
  7778                           
  7779 ;; *************** function _ADC_StartConversion *****************
  7780 ;; Defined at:
  7781 ;;		line 89 in file "mcc_generated_files/adc.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;		None
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1    wreg      void 
  7788 ;; Registers used:
  7789 ;;		None
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7795 ;;      Params:         0       0       0       0       0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7798 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7799 ;;Total ram usage:        0 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; Hardware stack levels required when called:    5
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_main
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text41
  7810  002FEC                     __ptext41:
  7811                           	opt callstack 0
  7812  002FEC                     _ADC_StartConversion:
  7813                           	opt callstack 25
  7814                           
  7815                           ;adc.c: 92: ADCON0bits.GO_nDONE = 1;
  7816                           
  7817                           ;incstack = 0
  7818  002FEC  82C2               	bsf	4034,1,c	;volatile
  7819  002FEE  0012               	return		;funcret
  7820  002FF0                     __end_of_ADC_StartConversion:
  7821                           	opt callstack 0
  7822                           
  7823 ;; *************** function _ADC_SelectChannel *****************
  7824 ;; Defined at:
  7825 ;;		line 81 in file "mcc_generated_files/adc.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  channel         1    wreg     enum E4456
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  channel         1    9[COMRAM] enum E4456
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1    wreg      void 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2, status,0
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7839 ;;      Params:         0       0       0       0       0       0       0       0       0
  7840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7841 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7842 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7843 ;;Total ram usage:        2 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; Hardware stack levels required when called:    5
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_main
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text42
  7854  002F28                     __ptext42:
  7855                           	opt callstack 0
  7856  002F28                     _ADC_SelectChannel:
  7857                           	opt callstack 25
  7858                           
  7859                           ;incstack = 0
  7860                           ;ADC_SelectChannel@channel stored from wreg
  7861  002F28  6E0A               	movwf	ADC_SelectChannel@channel,c
  7862                           
  7863                           ;adc.c: 84: ADCON0bits.CHS = channel;
  7864  002F2A  C00A  F009         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7865  002F2E  4609               	rlncf	??_ADC_SelectChannel,f,c
  7866  002F30  4609               	rlncf	??_ADC_SelectChannel,f,c
  7867  002F32  50C2               	movf	4034,w,c	;volatile
  7868  002F34  1809               	xorwf	??_ADC_SelectChannel,w,c
  7869  002F36  0B83               	andlw	-125
  7870  002F38  1809               	xorwf	??_ADC_SelectChannel,w,c
  7871  002F3A  6EC2               	movwf	4034,c	;volatile
  7872                           
  7873                           ;adc.c: 86: ADCON0bits.ADON = 1;
  7874  002F3C  80C2               	bsf	4034,0,c	;volatile
  7875  002F3E  0012               	return		;funcret
  7876  002F40                     __end_of_ADC_SelectChannel:
  7877                           	opt callstack 0
  7878                           
  7879 ;; *************** function _ADC_GetConversionResult *****************
  7880 ;; Defined at:
  7881 ;;		line 102 in file "mcc_generated_files/adc.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  2    8[COMRAM] unsigned int 
  7888 ;; Registers used:
  7889 ;;		wreg, status,2, status,0
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7895 ;;      Params:         2       0       0       0       0       0       0       0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7897 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7898 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7899 ;;Total ram usage:        4 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    5
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		_main
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text43
  7910  002F56                     __ptext43:
  7911                           	opt callstack 0
  7912  002F56                     _ADC_GetConversionResult:
  7913                           	opt callstack 25
  7914                           
  7915                           ;adc.c: 105: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7916                           
  7917                           ;incstack = 0
  7918  002F56  50C4               	movf	4036,w,c	;volatile
  7919  002F58  6E0C               	movwf	(??_ADC_GetConversionResult+1)& (0+255),c
  7920  002F5A  6A0B               	clrf	??_ADC_GetConversionResult& (0+255),c
  7921  002F5C  50C3               	movf	4035,w,c	;volatile
  7922  002F5E  240B               	addwf	??_ADC_GetConversionResult,w,c
  7923  002F60  6E09               	movwf	?_ADC_GetConversionResult,c
  7924  002F62  0E00               	movlw	0
  7925  002F64  200C               	addwfc	??_ADC_GetConversionResult+1,w,c
  7926  002F66  6E0A               	movwf	?_ADC_GetConversionResult+1,c
  7927  002F68  0012               	return		;funcret
  7928  002F6A                     __end_of_ADC_GetConversionResult:
  7929                           	opt callstack 0
  7930                           
  7931 ;; *************** function _INTERRUPT_InterruptManager *****************
  7932 ;; Defined at:
  7933 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7947 ;;      Params:         0       0       0       0       0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7949 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7950 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7951 ;;Total ram usage:        4 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    4
  7954 ;; This function calls:
  7955 ;;		Absolute function
  7956 ;;		_EUSART1_Receive_ISR
  7957 ;;		_TMR0_ISR
  7958 ;; This function is called by:
  7959 ;;		Interrupt level 2
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	intcode
  7964  000008                     __pintcode:
  7965                           	opt callstack 0
  7966  000008                     _INTERRUPT_InterruptManager:
  7967                           	opt callstack 23
  7968                           
  7969                           ;incstack = 0
  7970  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7971  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  7972  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7973  000012  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7974  000016  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7975                           
  7976                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  7977  00001A  BAF2               	btfsc	4082,5,c	;volatile
  7978  00001C  A4F2               	btfss	4082,2,c	;volatile
  7979  00001E  D003               	goto	i2l132
  7980                           
  7981                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  7982  000020  EC57  F016         	call	_TMR0_ISR	;wreg free
  7983                           
  7984                           ;interrupt_manager.c: 64: }
  7985  000024  D012               	goto	i2u460_49
  7986  000026                     i2l132:
  7987                           
  7988                           ;interrupt_manager.c: 65: else if(INTCONbits.PEIE == 1)
  7989  000026  BCF2               	btfsc	4082,6,c	;volatile
  7990                           
  7991                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: if(PIE1bits.RC1IE == 1 && PIR1bits.
      +                          RC1IF == 1)
  7992  000028  AA9D               	btfss	3997,5,c	;volatile
  7993  00002A  D00F               	goto	i2u460_49
  7994  00002C  AA9E               	btfss	3998,5,c	;volatile
  7995  00002E  D00D               	goto	i2u460_49
  7996                           
  7997                           ;interrupt_manager.c: 68: {;interrupt_manager.c: 69: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  7998  000030  D801               	call	i2u460_48
  7999  000032  D00B               	goto	i2u460_49
  8000  000034                     i2u460_48:
  8001  000034  0005               	push	
  8002  000036  0100               	movlb	0	; () banked
  8003  000038  6EFA               	movwf	pclath,c
  8004  00003A  51DF               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  8005  00003C  6EFD               	movwf	tosl,c
  8006  00003E  51E0               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  8007  000040  6EFE               	movwf	tosh,c
  8008  000042  50F8               	movf	tblptru,w,c
  8009  000044  6EFF               	movwf	tosu,c
  8010  000046  50FA               	movf	pclath,w,c
  8011  000048  0012               	return		;indir
  8012  00004A                     i2u460_49:
  8013                           
  8014                           ;interrupt_manager.c: 76: else;interrupt_manager.c: 77: {
  8015                           
  8016                           ;interrupt_manager.c: 70: }
  8017  00004A  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8018  00004E  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8019  000052  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8020  000056  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8021  00005A  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8022  00005C  0011               	retfie		f
  8023  00005E                     __end_of_INTERRUPT_InterruptManager:
  8024                           	opt callstack 0
  8025                           
  8026 ;; *************** function _TMR0_ISR *****************
  8027 ;; Defined at:
  8028 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;		None
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0
  8043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8044 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8045 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8046 ;;Total ram usage:        1 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    1
  8049 ;; This function calls:
  8050 ;;		Absolute function
  8051 ;;		_TMR0_DefaultInterruptHandler
  8052 ;; This function is called by:
  8053 ;;		_INTERRUPT_InterruptManager
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text45
  8058  002CAE                     __ptext45:
  8059                           	opt callstack 0
  8060  002CAE                     _TMR0_ISR:
  8061                           	opt callstack 25
  8062                           
  8063                           ;tmr0.c: 134: INTCONbits.TMR0IF = 0;
  8064                           
  8065                           ;incstack = 0
  8066  002CAE  94F2               	bcf	4082,2,c	;volatile
  8067                           
  8068                           ;tmr0.c: 137: TMR0L = timer0ReloadVal;
  8069  002CB0  C056  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8070                           
  8071                           ;tmr0.c: 139: if(TMR0_InterruptHandler)
  8072  002CB4  0100               	movlb	0	; () banked
  8073  002CB6  51DD               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8074  002CB8  11DE               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8075  002CBA  B4D8               	btfsc	status,2,c
  8076  002CBC  D00C               	goto	i2u376_49
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;tmr0.c: 140: {;tmr0.c: 141: TMR0_InterruptHandler();
  8080  002CBE  D801               	call	i2u376_48
  8081  002CC0  D00A               	goto	i2u376_49
  8082  002CC2                     i2u376_48:
  8083  002CC2  0005               	push	
  8084  002CC4  6EFA               	movwf	pclath,c
  8085  002CC6  51DD               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8086  002CC8  6EFD               	movwf	tosl,c
  8087  002CCA  51DE               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8088  002CCC  6EFE               	movwf	tosh,c
  8089  002CCE  50F8               	movf	tblptru,w,c
  8090  002CD0  6EFF               	movwf	tosu,c
  8091  002CD2  50FA               	movf	pclath,w,c
  8092  002CD4  0012               	return		;indir
  8093  002CD6                     i2u376_49:
  8094  002CD6  A689               	btfss	3977,3,c	;volatile
  8095  002CD8  D002               	goto	i2u377_40
  8096  002CDA  0E01               	movlw	1
  8097  002CDC  D001               	goto	i2u377_46
  8098  002CDE                     i2u377_40:
  8099  002CDE  0E00               	movlw	0
  8100  002CE0                     i2u377_46:
  8101  002CE0  0AFF               	xorlw	255
  8102  002CE2  6E01               	movwf	??_TMR0_ISR& (0+255),c
  8103  002CE4  4601               	rlncf	??_TMR0_ISR,f,c
  8104  002CE6  4601               	rlncf	??_TMR0_ISR,f,c
  8105  002CE8  4601               	rlncf	??_TMR0_ISR,f,c
  8106  002CEA  5089               	movf	3977,w,c	;volatile
  8107  002CEC  1801               	xorwf	??_TMR0_ISR,w,c
  8108  002CEE  0BF7               	andlw	-9
  8109  002CF0  1801               	xorwf	??_TMR0_ISR,w,c
  8110  002CF2  6E89               	movwf	3977,c	;volatile
  8111  002CF4  0012               	return		;funcret
  8112  002CF6                     __end_of_TMR0_ISR:
  8113                           	opt callstack 0
  8114                           
  8115 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8116 ;; Defined at:
  8117 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		None
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_TMR0_Initialize
  8141 ;;		_TMR0_ISR
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text46
  8146  002FF0                     __ptext46:
  8147                           	opt callstack 0
  8148  002FF0                     _TMR0_DefaultInterruptHandler:
  8149                           	opt callstack 25
  8150                           
  8151                           ;incstack = 0
  8152  002FF0  0012               	return		;funcret
  8153  002FF2                     __end_of_TMR0_DefaultInterruptHandler:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function _EUSART1_Receive_ISR *****************
  8157 ;; Defined at:
  8158 ;;		line 181 in file "mcc_generated_files/eusart1.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    3
  8179 ;; This function calls:
  8180 ;;		Absolute function
  8181 ;;		_EUSART1_DefaultErrorHandler
  8182 ;;		_EUSART1_DefaultFramingErrorHandler
  8183 ;;		_EUSART1_DefaultOverrunErrorHandler
  8184 ;;		_EUSART1_RxDataHandler
  8185 ;; This function is called by:
  8186 ;;		_EUSART1_Initialize
  8187 ;;		_INTERRUPT_InterruptManager
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text47
  8192  00286E                     __ptext47:
  8193                           	opt callstack 0
  8194  00286E                     _EUSART1_Receive_ISR:
  8195                           	opt callstack 23
  8196                           
  8197                           ;eusart1.c: 184: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  8198                           
  8199                           ;incstack = 0
  8200  00286E  0EB1               	movlw	low _eusart1RxStatusBuffer
  8201  002870  2452               	addwf	_eusart1RxHead,w,c	;volatile
  8202  002872  6ED9               	movwf	fsr2l,c
  8203  002874  6ADA               	clrf	fsr2h,c
  8204  002876  0E00               	movlw	high _eusart1RxStatusBuffer
  8205  002878  22DA               	addwfc	fsr2h,f,c
  8206  00287A  0E00               	movlw	0
  8207  00287C  6EDF               	movwf	indf2,c
  8208                           
  8209                           ;eusart1.c: 186: if(RCSTA1bits.FERR){
  8210  00287E  A4AB               	btfss	4011,2,c	;volatile
  8211  002880  D014               	goto	i2u381_49
  8212                           
  8213                           ;eusart1.c: 187: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  8214  002882  0EB1               	movlw	low _eusart1RxStatusBuffer
  8215  002884  2452               	addwf	_eusart1RxHead,w,c	;volatile
  8216  002886  6ED9               	movwf	fsr2l,c
  8217  002888  6ADA               	clrf	fsr2h,c
  8218  00288A  0E00               	movlw	high _eusart1RxStatusBuffer
  8219  00288C  22DA               	addwfc	fsr2h,f,c
  8220  00288E  0100               	movlb	0	; () banked
  8221  002890  82DF               	bsf	indf2,1,c
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;eusart1.c: 188: EUSART1_FramingErrorHandler();
  8225  002892  D801               	call	i2u381_48
  8226  002894  D00A               	goto	i2u381_49
  8227  002896                     i2u381_48:
  8228  002896  0005               	push	
  8229  002898  6EFA               	movwf	pclath,c
  8230  00289A  51DB               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  8231  00289C  6EFD               	movwf	tosl,c
  8232  00289E  51DC               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  8233  0028A0  6EFE               	movwf	tosh,c
  8234  0028A2  50F8               	movf	tblptru,w,c
  8235  0028A4  6EFF               	movwf	tosu,c
  8236  0028A6  50FA               	movf	pclath,w,c
  8237  0028A8  0012               	return		;indir
  8238  0028AA                     i2u381_49:
  8239                           
  8240                           ;eusart1.c: 189: };eusart1.c: 191: if(RCSTA1bits.OERR){
  8241  0028AA  A2AB               	btfss	4011,1,c	;volatile
  8242  0028AC  D014               	goto	i2u383_49
  8243                           
  8244                           ;eusart1.c: 192: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  8245  0028AE  0EB1               	movlw	low _eusart1RxStatusBuffer
  8246  0028B0  2452               	addwf	_eusart1RxHead,w,c	;volatile
  8247  0028B2  6ED9               	movwf	fsr2l,c
  8248  0028B4  6ADA               	clrf	fsr2h,c
  8249  0028B6  0E00               	movlw	high _eusart1RxStatusBuffer
  8250  0028B8  22DA               	addwfc	fsr2h,f,c
  8251  0028BA  0100               	movlb	0	; () banked
  8252  0028BC  84DF               	bsf	indf2,2,c
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;eusart1.c: 193: EUSART1_OverrunErrorHandler();
  8256  0028BE  D801               	call	i2u383_48
  8257  0028C0  D00A               	goto	i2u383_49
  8258  0028C2                     i2u383_48:
  8259  0028C2  0005               	push	
  8260  0028C4  6EFA               	movwf	pclath,c
  8261  0028C6  51D9               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  8262  0028C8  6EFD               	movwf	tosl,c
  8263  0028CA  51DA               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  8264  0028CC  6EFE               	movwf	tosh,c
  8265  0028CE  50F8               	movf	tblptru,w,c
  8266  0028D0  6EFF               	movwf	tosu,c
  8267  0028D2  50FA               	movf	pclath,w,c
  8268  0028D4  0012               	return		;indir
  8269  0028D6                     i2u383_49:
  8270                           
  8271                           ;eusart1.c: 194: };eusart1.c: 196: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  8272  0028D6  0EB1               	movlw	low _eusart1RxStatusBuffer
  8273  0028D8  2452               	addwf	_eusart1RxHead,w,c	;volatile
  8274  0028DA  6ED9               	movwf	fsr2l,c
  8275  0028DC  6ADA               	clrf	fsr2h,c
  8276  0028DE  0E00               	movlw	high _eusart1RxStatusBuffer
  8277  0028E0  22DA               	addwfc	fsr2h,f,c
  8278  0028E2  50DF               	movf	indf2,w,c
  8279  0028E4  B4D8               	btfsc	status,2,c
  8280  0028E6  D00D               	goto	i2l3995
  8281                           
  8282                           ;eusart1.c: 197: EUSART1_ErrorHandler();
  8283  0028E8  D801               	call	i2u385_48
  8284  0028EA  0012               	return	
  8285  0028EC                     i2u385_48:
  8286  0028EC  0005               	push	
  8287  0028EE  0100               	movlb	0	; () banked
  8288  0028F0  6EFA               	movwf	pclath,c
  8289  0028F2  51D7               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  8290  0028F4  6EFD               	movwf	tosl,c
  8291  0028F6  51D8               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  8292  0028F8  6EFE               	movwf	tosh,c
  8293  0028FA  50F8               	movf	tblptru,w,c
  8294  0028FC  6EFF               	movwf	tosu,c
  8295  0028FE  50FA               	movf	pclath,w,c
  8296  002900  0012               	return		;indir
  8297  002902                     i2l3995:
  8298                           
  8299                           ;eusart1.c: 199: EUSART1_RxDataHandler();
  8300  002902  ECE1  F013         	call	_EUSART1_RxDataHandler	;wreg free
  8301  002906  0012               	return		;funcret
  8302  002908                     __end_of_EUSART1_Receive_ISR:
  8303                           	opt callstack 0
  8304                           
  8305 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  8306 ;; Defined at:
  8307 ;;		line 227 in file "mcc_generated_files/eusart1.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;		None
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;		None
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  1    wreg      void 
  8314 ;; Registers used:
  8315 ;;		None
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8321 ;;      Params:         0       0       0       0       0       0       0       0       0
  8322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8324 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8325 ;;Total ram usage:        0 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		_EUSART1_Initialize
  8331 ;;		_EUSART1_Receive_ISR
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text48
  8336  002FDC                     __ptext48:
  8337                           	opt callstack 0
  8338  002FDC                     _EUSART1_DefaultOverrunErrorHandler:
  8339                           	opt callstack 25
  8340                           
  8341                           ;eusart1.c: 230: RCSTA1bits.CREN = 0;
  8342                           
  8343                           ;incstack = 0
  8344  002FDC  98AB               	bcf	4011,4,c	;volatile
  8345                           
  8346                           ;eusart1.c: 231: RCSTA1bits.CREN = 1;
  8347  002FDE  88AB               	bsf	4011,4,c	;volatile
  8348  002FE0  0012               	return		;funcret
  8349  002FE2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  8350                           	opt callstack 0
  8351                           
  8352 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  8353 ;; Defined at:
  8354 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  1    wreg      void 
  8361 ;; Registers used:
  8362 ;;		None
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8368 ;;      Params:         0       0       0       0       0       0       0       0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8372 ;;Total ram usage:        0 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; This function calls:
  8375 ;;		Nothing
  8376 ;; This function is called by:
  8377 ;;		_EUSART1_Initialize
  8378 ;;		_EUSART1_Receive_ISR
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text49
  8383  002FF2                     __ptext49:
  8384                           	opt callstack 0
  8385  002FF2                     _EUSART1_DefaultFramingErrorHandler:
  8386                           	opt callstack 25
  8387                           
  8388                           ;incstack = 0
  8389  002FF2  0012               	return		;funcret
  8390  002FF4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  8391                           	opt callstack 0
  8392                           
  8393 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  8394 ;; Defined at:
  8395 ;;		line 235 in file "mcc_generated_files/eusart1.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;		None
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;		None
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8409 ;;      Params:         0       0       0       0       0       0       0       0       0
  8410 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8412 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8413 ;;Total ram usage:        0 bytes
  8414 ;; Hardware stack levels used:    1
  8415 ;; Hardware stack levels required when called:    2
  8416 ;; This function calls:
  8417 ;;		_EUSART1_RxDataHandler
  8418 ;; This function is called by:
  8419 ;;		_EUSART1_Initialize
  8420 ;;		_EUSART1_Receive_ISR
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text50
  8425  002FE2                     __ptext50:
  8426                           	opt callstack 0
  8427  002FE2                     _EUSART1_DefaultErrorHandler:
  8428                           	opt callstack 23
  8429                           
  8430                           ;eusart1.c: 236: EUSART1_RxDataHandler();
  8431                           
  8432                           ;incstack = 0
  8433  002FE2  ECE1  F013         	call	_EUSART1_RxDataHandler	;wreg free
  8434  002FE6  0012               	return		;funcret
  8435  002FE8                     __end_of_EUSART1_DefaultErrorHandler:
  8436                           	opt callstack 0
  8437                           
  8438 ;; *************** function _EUSART1_RxDataHandler *****************
  8439 ;; Defined at:
  8440 ;;		line 205 in file "mcc_generated_files/eusart1.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;		None
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8454 ;;      Params:         0       0       0       0       0       0       0       0       0
  8455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8458 ;;Total ram usage:        0 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; Hardware stack levels required when called:    1
  8461 ;; This function calls:
  8462 ;;		_PWM2_LoadDutyValue
  8463 ;; This function is called by:
  8464 ;;		_EUSART1_Receive_ISR
  8465 ;;		_EUSART1_DefaultErrorHandler
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text51
  8470  0027C2                     __ptext51:
  8471                           	opt callstack 0
  8472  0027C2                     _EUSART1_RxDataHandler:
  8473                           	opt callstack 24
  8474                           
  8475                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  8476                           
  8477                           ;incstack = 0
  8478  0027C2  0EB9               	movlw	low _eusart1RxBuffer
  8479  0027C4  2452               	addwf	_eusart1RxHead,w,c	;volatile
  8480  0027C6  6ED9               	movwf	fsr2l,c
  8481  0027C8  6ADA               	clrf	fsr2h,c
  8482  0027CA  0E00               	movlw	high _eusart1RxBuffer
  8483  0027CC  22DA               	addwfc	fsr2h,f,c
  8484  0027CE  CFAE FFDF          	movff	4014,indf2	;volatile
  8485  0027D2  2A52               	incf	_eusart1RxHead,f,c	;volatile
  8486                           
  8487                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  8488  0027D4  0E07               	movlw	7
  8489  0027D6  6452               	cpfsgt	_eusart1RxHead,c	;volatile
  8490  0027D8  D002               	goto	i2l3033
  8491                           
  8492                           ;eusart1.c: 209: {;eusart1.c: 210: eusart1RxHead = 0;
  8493  0027DA  0E00               	movlw	0
  8494  0027DC  6E52               	movwf	_eusart1RxHead,c	;volatile
  8495  0027DE                     i2l3033:
  8496                           
  8497                           ;eusart1.c: 211: };eusart1.c: 212: eusart1RxCount++;
  8498  0027DE  2A50               	incf	_eusart1RxCount,f,c	;volatile
  8499                           
  8500                           ;eusart1.c: 213: switch (RCREG1){
  8501  0027E0  D02C               	goto	i2l3053
  8502  0027E2                     i2l3035:
  8503  0027E2  0E01               	movlw	1
  8504  0027E4  0100               	movlb	0	; () banked
  8505  0027E6  6FD2               	movwf	_flag1& (0+255),b
  8506  0027E8  0012               	return	
  8507  0027EA                     i2l3037:
  8508  0027EA  0E01               	movlw	1
  8509  0027EC  0100               	movlb	0	; () banked
  8510  0027EE  6FD1               	movwf	_flag2& (0+255),b
  8511  0027F0  0012               	return	
  8512  0027F2                     i2l3039:
  8513  0027F2  0E01               	movlw	1
  8514  0027F4  0100               	movlb	0	; () banked
  8515  0027F6  6FD0               	movwf	_flag3& (0+255),b
  8516  0027F8  0012               	return	
  8517  0027FA                     i2l3041:
  8518  0027FA  0E01               	movlw	1
  8519  0027FC  0100               	movlb	0	; () banked
  8520  0027FE  6FCF               	movwf	_flag4& (0+255),b
  8521  002800  0012               	return	
  8522  002802                     i2l3043:
  8523  002802  0E00               	movlw	0
  8524  002804  6E02               	movwf	PWM2_LoadDutyValue@dutyValue+1,c
  8525  002806  0E00               	movlw	0
  8526  002808  6E01               	movwf	PWM2_LoadDutyValue@dutyValue,c
  8527  00280A  ECF3  F016         	call	_PWM2_LoadDutyValue	;wreg free
  8528  00280E  0012               	return	
  8529  002810                     i2l3045:
  8530  002810  0E01               	movlw	1
  8531  002812  6E02               	movwf	PWM2_LoadDutyValue@dutyValue+1,c
  8532  002814  0EF4               	movlw	244
  8533  002816  6E01               	movwf	PWM2_LoadDutyValue@dutyValue,c
  8534  002818  ECF3  F016         	call	_PWM2_LoadDutyValue	;wreg free
  8535  00281C  0012               	return	
  8536  00281E                     i2l3047:
  8537  00281E  0E02               	movlw	2
  8538  002820  6E02               	movwf	PWM2_LoadDutyValue@dutyValue+1,c
  8539  002822  0EEE               	movlw	238
  8540  002824  6E01               	movwf	PWM2_LoadDutyValue@dutyValue,c
  8541  002826  ECF3  F016         	call	_PWM2_LoadDutyValue	;wreg free
  8542  00282A  0012               	return	
  8543  00282C                     i2l3049:
  8544  00282C  0E03               	movlw	3
  8545  00282E  6E02               	movwf	PWM2_LoadDutyValue@dutyValue+1,c
  8546  002830  0EE7               	movlw	231
  8547  002832  6E01               	movwf	PWM2_LoadDutyValue@dutyValue,c
  8548  002834  ECF3  F016         	call	_PWM2_LoadDutyValue	;wreg free
  8549  002838  0012               	return	
  8550  00283A                     i2l3053:
  8551  00283A  50AE               	movf	4014,w,c	;volatile
  8552                           
  8553                           ; Switch size 1, requested type "simple"
  8554                           ; Number of cases is 8, Range of values is 48 to 68
  8555                           ; switch strategies available:
  8556                           ; Name         Instructions Cycles
  8557                           ; simple_byte           25    13 (average)
  8558                           ;	Chosen strategy is simple_byte
  8559  00283C  0A30               	xorlw	48	; case 48
  8560  00283E  B4D8               	btfsc	status,2,c
  8561  002840  D7E0               	goto	i2l3043
  8562  002842  0A01               	xorlw	1	; case 49
  8563  002844  B4D8               	btfsc	status,2,c
  8564  002846  D7E4               	goto	i2l3045
  8565  002848  0A03               	xorlw	3	; case 50
  8566  00284A  B4D8               	btfsc	status,2,c
  8567  00284C  D7E8               	goto	i2l3047
  8568  00284E  0A01               	xorlw	1	; case 51
  8569  002850  B4D8               	btfsc	status,2,c
  8570  002852  D7EC               	goto	i2l3049
  8571  002854  0A72               	xorlw	114	; case 65
  8572  002856  B4D8               	btfsc	status,2,c
  8573  002858  D7C4               	goto	i2l3035
  8574  00285A  0A03               	xorlw	3	; case 66
  8575  00285C  B4D8               	btfsc	status,2,c
  8576  00285E  D7C5               	goto	i2l3037
  8577  002860  0A01               	xorlw	1	; case 67
  8578  002862  B4D8               	btfsc	status,2,c
  8579  002864  D7C6               	goto	i2l3039
  8580  002866  0A07               	xorlw	7	; case 68
  8581  002868  A4D8               	btfss	status,2,c
  8582  00286A  0012               	return	
  8583  00286C  D7C6               	goto	i2l3041
  8584  00286E                     __end_of_EUSART1_RxDataHandler:
  8585                           	opt callstack 0
  8586                           
  8587 ;; *************** function _PWM2_LoadDutyValue *****************
  8588 ;; Defined at:
  8589 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  dutyValue       2    0[COMRAM] unsigned int 
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;		None
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  1    wreg      void 
  8596 ;; Registers used:
  8597 ;;		wreg, status,2, status,0
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8603 ;;      Params:         2       0       0       0       0       0       0       0       0
  8604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8605 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8606 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8607 ;;Total ram usage:        4 bytes
  8608 ;; Hardware stack levels used:    1
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_EUSART1_RxDataHandler
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text52
  8617  002DE6                     __ptext52:
  8618                           	opt callstack 0
  8619  002DE6                     _PWM2_LoadDutyValue:
  8620                           	opt callstack 24
  8621                           
  8622                           ;pwm2.c: 83: CCPR2L = ((dutyValue & 0x03FC)>>2);
  8623                           
  8624                           ;incstack = 0
  8625  002DE6  C001  F003         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  8626  002DEA  C002  F004         	movff	PWM2_LoadDutyValue@dutyValue+1,??_PWM2_LoadDutyValue+1
  8627  002DEE  90D8               	bcf	status,0,c
  8628  002DF0  3204               	rrcf	??_PWM2_LoadDutyValue+1,f,c
  8629  002DF2  3203               	rrcf	??_PWM2_LoadDutyValue,f,c
  8630  002DF4  90D8               	bcf	status,0,c
  8631  002DF6  3204               	rrcf	??_PWM2_LoadDutyValue+1,f,c
  8632  002DF8  3203               	rrcf	??_PWM2_LoadDutyValue,f,c
  8633  002DFA  5003               	movf	??_PWM2_LoadDutyValue,w,c
  8634  002DFC  6E90               	movwf	3984,c	;volatile
  8635                           
  8636                           ;pwm2.c: 86: CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  8637  002DFE  C001  F003         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  8638  002E02  0E03               	movlw	3
  8639  002E04  1603               	andwf	??_PWM2_LoadDutyValue,f,c
  8640  002E06  3A03               	swapf	??_PWM2_LoadDutyValue,f,c
  8641  002E08  0EF0               	movlw	240
  8642  002E0A  1603               	andwf	??_PWM2_LoadDutyValue,f,c
  8643  002E0C  5097               	movf	3991,w,c	;volatile
  8644  002E0E  0BCF               	andlw	207
  8645  002E10  1003               	iorwf	??_PWM2_LoadDutyValue,w,c
  8646  002E12  6E97               	movwf	3991,c	;volatile
  8647  002E14  0012               	return		;funcret
  8648  002E16                     __end_of_PWM2_LoadDutyValue:
  8649                           	opt callstack 0
  8650                           
  8651                           	psect	text53
  8652  000000                     __ptext53:
  8653                           	opt callstack 0
  8654                           
  8655                           	psect	rparam
  8656  0000                     
  8657                           	psect	temp
  8658  000057                     btemp:
  8659                           	opt callstack 0
  8660  000057                     	ds	1
  8661  0000                     int$flags	set	btemp
  8662  0000                     wtemp8	set	btemp+1
  8663  0000                     ttemp5	set	btemp+1
  8664  0000                     ttemp6	set	btemp+4
  8665  0000                     ttemp7	set	btemp+8
  8666                           tosu	equ	0xFFF
  8667                           tosh	equ	0xFFE
  8668                           tosl	equ	0xFFD
  8669                           stkptr	equ	0xFFC
  8670                           pclatu	equ	0xFFB
  8671                           pclath	equ	0xFFA
  8672                           pcl	equ	0xFF9
  8673                           tblptru	equ	0xFF8
  8674                           tblptrh	equ	0xFF7
  8675                           tblptrl	equ	0xFF6
  8676                           tablat	equ	0xFF5
  8677                           prodh	equ	0xFF4
  8678                           prodl	equ	0xFF3
  8679                           indf0	equ	0xFEF
  8680                           postinc0	equ	0xFEE
  8681                           postdec0	equ	0xFED
  8682                           preinc0	equ	0xFEC
  8683                           plusw0	equ	0xFEB
  8684                           fsr0h	equ	0xFEA
  8685                           fsr0l	equ	0xFE9
  8686                           wreg	equ	0xFE8
  8687                           indf1	equ	0xFE7
  8688                           postinc1	equ	0xFE6
  8689                           postdec1	equ	0xFE5
  8690                           preinc1	equ	0xFE4
  8691                           plusw1	equ	0xFE3
  8692                           fsr1h	equ	0xFE2
  8693                           fsr1l	equ	0xFE1
  8694                           bsr	equ	0xFE0
  8695                           indf2	equ	0xFDF
  8696                           postinc2	equ	0xFDE
  8697                           postdec2	equ	0xFDD
  8698                           preinc2	equ	0xFDC
  8699                           plusw2	equ	0xFDB
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8


Data Sizes:
    Strings     60
    Constant    144
    Data        0
    BSS         95
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     81     129
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[14]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> msg1(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 50
		 -> msg1(BANK1[50]), STR_1(CODE[6]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _sprintf->___flmul
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___fldiv
    ___xxtofl->_ADC_GetConversionResult
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___lwdiv
    ___fldiv->___flsub
    _UARTSendString->_UARTSendChar
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _EUSART1_RxDataHandler->_PWM2_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   47910
                                             77 COMRAM     1     1      0
                                             72 BANK0      9     9      0
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
                     _DHT11_ReadData
                        _DHT11_Start
                  _SYSTEM_Initialize
                     _UARTSendString
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    36      8   36127
                                             36 BANK0     36    28      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    8414
                                             17 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                             14 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              8 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6796
                                             17 BANK0     13     9      4
                            ___fladd (ARG)
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              8 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             13 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    5213
                                             69 COMRAM     8     0      8
                                              0 BANK0     17    17      0
            _ADC_GetConversionResult (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              8 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              8 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                             12 COMRAM    14    10      4
            _ADC_GetConversionResult (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             21 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              8 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2889
                                             36 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2414
                                             20 COMRAM    16     8      8
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1551
                                             44 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3     917
                                              9 COMRAM     8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     392
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     116
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0     696
                                              4 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0     696
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0     348
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0     348
                 _PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (7) _PWM2_LoadDutyValue                                   4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_SelectChannel
   _ADC_StartConversion
   _DHT11_ReadData
   _DHT11_Start
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _UARTSendString
     _UARTSendChar
   ___fldiv
     ___flsub (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversionResult (ARG)
   ___flmul
     _ADC_GetConversionResult (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___fldiv (ARG)
       ___flsub (ARG)
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversionResult (ARG)
     ___flsub (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversionResult (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       _ADC_GetConversionResult (ARG)
   ___flsub
     ___fladd
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___xxtofl (ARG)
       _ADC_GetConversionResult (ARG)
   ___xxtofl
     _ADC_GetConversionResult (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___fleq
     ___flge
     ___flmul
       _ADC_GetConversionResult (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___fldiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversionResult (ARG)
       ___flsub (ARG)
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversionResult (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversionResult (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversionResult (ARG)
     ___fltol
       ___flmul (ARG)
         _ADC_GetConversionResult (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fldiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___xxtofl (ARG)
               _ADC_GetConversionResult (ARG)
         ___flsub (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversionResult (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversionResult (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           _ADC_GetConversionResult (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fldiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversionResult (ARG)
           ___flsub (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___xxtofl (ARG)
               _ADC_GetConversionResult (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversionResult (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       _ADC_GetConversionResult (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flmul (ARG)
         _ADC_GetConversionResult (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fldiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___xxtofl (ARG)
               _ADC_GetConversionResult (ARG)
         ___flsub (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversionResult (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversionResult (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         _ADC_GetConversionResult (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fldiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___xxtofl (ARG)
               _ADC_GetConversionResult (ARG)
         ___flsub (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversionResult (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversionResult (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
         _PWM2_LoadDutyValue
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
       _PWM2_LoadDutyValue
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      32       8       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      81       5       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     109       6        0.0%
DATA                 0      0     109       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 04 15:27:19 2019

                                  ___fldiv@aexp 0045                                    ___fldiv@bexp 0044  
                                  ___fldiv@sign 003D                                    ___awdiv@sign 0014  
                           ___wmul@multiplicand 000B                                 _timer0ReloadVal 0056  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l501 2E92  
                                           _AN0 007C00                                             l490 2D8A  
                                           l642 2B1A                                             l590 0E3E  
                                           l495 2DA4                                             l980 24C4  
                                           l893 26CA                                             l981 24EC  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                             _lux 00C9  
                                  ___awmod@sign 000E                                 _TMR2_Initialize 2F8C  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                    ___flmul@aexp 0065  
                                  ___flmul@bexp 006A                                    ___flmul@sign 0064  
                                  ___flmul@temp 006F                                    ___flmul@prod 006B  
                                  ___fltol@exp1 0083                                            l1221 1FB6  
                                          l1232 2024                                            l1128 2CA4  
                                          l1233 2020                                            l1057 2BF0  
                                          l1138 2D74                                            l1251 15D8  
                                          l1260 17F0                                            l1261 17EC  
                                          l1182 1ABE                                            l1166 19EC  
                                          l1191 1B24                                            l1167 19CA  
                                          l3103 1942                                            l1192 1B20  
                                          l4003 294E                                            l1292 2342  
                                          l1268 1876                                            l3213 1B02  
                                          l3133 197E                                            l3207 1AF8  
                                          l3071 18DA                                            l3241 1B90  
                                          l3233 1B6A                                            l3161 1A10  
                                          l3145 19D8                                            l3401 2A4A  
                                          l3171 1A36                                            l3147 19DC  
                                          l3091 191E                                            l3067 18D6  
                                          l1299 23C0                                            l4301 1E74  
                                          l3245 1B98                                            l3501 2D6A  
                                          l3247 1B9A                                            l3095 1922  
                                          l3407 2A60                                            l3423 2A92  
                                          l4321 1EB4                                            l3169 1A32  
                                          l3409 2A68                                            l4403 208C  
                                          l3179 1A48                                            l3427 2AA0  
                                          l3419 2A88                                            l3443 2B4C  
                                          l4413 20C2                                            l4317 1EB0  
                                          l3197 1AE2                                            l3189 1AAE  
                                          l4415 20C4                                            l4407 20B6  
                                          l4343 1F16                                            l4335 1EFE  
                                          l3711 25AE                                            l3463 2B92  
                                          l3455 2B7A                                            l3447 2B5A  
                                          l3439 2B40                                            l4361 1F8E  
                                          l4353 1F66                                            l4329 1EE8  
                                          l4513 1584                                            l3473 2C72  
                                          l3625 2F20                                            l3449 2B62  
                                          l4275 2D9E                                            l3803 269E  
                                          l3731 25FA                                            l3635 2470  
                                          l4531 15C4                                            l4515 1588  
                                          l3475 2C7A                                            l3395 2A3A  
                                          l3459 2B84                                            l3557 2F7E  
                                          l4373 1FCC                                            l3813 2702  
                                          l3821 2E32                                            l3901 2382  
                                          l3741 2612                                            l4613 1852  
                                          l4541 15F6                                            l4533 15C8  
                                          l4517 1598                                            l3485 2C9A  
                                          l3493 2D4A                                            l4367 1FB4  
                                          l3807 26B4                                            l3831 2726  
                                          l3911 23F2                                            l3903 23A8  
                                          l3743 261E                                            l3735 260A  
                                          l3719 25DE                                            l3671 2506  
                                          l3495 2D52                                            l4703 0922  
                                          l4297 1E70                                            l3681 251E  
                                          l4625 1894                                            l4609 1834  
                                          l4713 097C                                            l4379 1FEA  
                                          l3851 2780                                            l3691 2560  
                                          l3683 252A                                            l3675 2516  
                                          l4707 095A                                            l3757 2ACC  
                                          l3909 23E6                                            l4645 1DF6  
                                          l4813 0D6A                                            l4821 0DFA  
                                          l4725 09C2                                            l4717 0980  
                                          l4709 0970                                            l4399 2068  
                                          l3791 2A22                                            l3783 29D0  
                                          l3847 2770                                            l3759 2AD8  
                                          l3927 2432                                            l4583 1798  
                                          l4639 1D1A                                            l4911 10B8  
                                          l4823 0E04                                            l4751 0A9A  
                                          l4735 0A10                                            l4719 09AE  
                                          l3865 27B0                                            l3857 2788  
                                          l3769 2B0C                                            l3881 2BE2  
                                          l3873 2BAE                                            l4665 1342  
                                          l4905 1092                                            l3787 2A04  
                                          l3859 2794                                            l3875 2BBA  
                                          l3891 2352                                            l4683 152C  
                                          l4659 12A0                                            l4843 0E60  
                                          l4835 0E42                                            l4763 0B46  
                                          l4589 17B6                                            l4677 148A  
                                          l4669 136C                                            l4909 10B2  
                                          l4917 113E                                            l4829 0E1A  
                                          l4933 20E4                                            l3799 266A  
                                          l4847 0EC0                                            l4775 0BFC  
                                          l4767 0B92                                            l4759 0B18  
                                          l4695 08F8                                            l4951 2230  
                                          l3897 2370                                            l4865 0FC2  
                                          l4857 0FA0                                            l4793 0D0A  
                                          l4689 08DC                                            l3899 2376  
                                          l4883 101E                                            l4859 0FAC  
                                          l4779 0C2A                                            l4867 0FCC  
                                          l4877 1006                                            l4789 0C92  
                                          l3999 291A                                            l4799 0D0E  
                                          l4959 2274                                            l4889 1022  
                                          l4979 22CC                                            STR_1 08C7  
                                          STR_2 0891                                            STR_3 08AE  
                                          STR_4 08BB                                            STR_5 08A0  
                                          u3010 2A6C                                            _LATA 000F89  
                                          u3110 2C7E                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u2500 19B0  
                                          u3140 2D56                                            u2510 19B2  
                                          u3070 2B66                                            u3160 2F82  
                                          u2540 19F4                                            u3420 2624  
                                          u5020 0B58                                            u3350 2530  
                                          u5030 0BA4                                            u3271 2454  
                                          u3600 279A                                            u3440 2ADC  
                                          u3360 254E                                            u3280 245E  
                                          u5120 0E28                                            u4250 2E96  
                                          u2490 19A0                                            u5210 1058  
                                          u5130 0E38                                            u3291 2480  
                                          u4260 2E9A                                            u5060 0BFC  
                                          u2750 1B76                                            u2670 1B06  
                                          u3550 2714                                            u3630 2BBE  
                                          u3710 23FC                                            u4520 2076  
                                          u3480 2A1E                                            u3560 2744  
                                          u4530 209A                                            u2690 1B1A  
                                          u5250 114E                                            u5090 0D44  
                                          u5260 1168                                            u3565 273A  
                                          u5327 2E7C                                            u4480 201A  
                                          u5337 2E8A                                            u4730 15E4  
                                          u5290 2250                                            u5347 2D90  
                                          u3860 2946                                            u4820 1842  
                                          u4740 175A                                            u4830 1860  
                                          u3880 2994                                            u4745 1750  
                                          u5298 2252                                            u3867 293C  
                                          u4780 17E6                                            u3887 298A  
                                          _TMR2 000FBC                                            _WPUB 000F85  
                                          _Vout 00D3                                            _data 00C1  
                                          _main 20CC                                            _msg1 0100  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr2l 000FD9                                            btemp 0057  
                                 __CFG_BORV$190 000000                                            prodh 000FF4  
                                          prodl 000FF3                                            start 005E  
                                 __CFG_IESO$OFF 000000                                 ___fldiv@new_exp 003E  
                              ??_DHT11_ReadData 0009                                    _sprintf$2173 008F  
                          __size_of_DHT11_Start 002E                                   __CFG_MCLRE$ON 000000  
                                  ___param_bank 000000                                  main@T_Integral 00B0  
                       __end_of_PWM2_Initialize 2FAA                         __end_of_TMR0_Initialize 2F0A  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 2F7C                           _eusart1RxStatusBuffer 00B1  
                                 ___fltol@sign1 0082                                 __end_of___fladd 1BB6  
                                         ?_main 0001                                 __end_of___fldiv 20CC  
                               __end_of___awdiv 2AAA                                 __end_of___flneg 2E44  
                               __end_of___awmod 2B9C                                 __end_of___flmul 18AA  
                               __end_of___flsub 2D3C                                 __end_of___fltol 27C2  
                               __end_of___lldiv 2B2C                                           _T0CON 000FD5  
                               ___awdiv@divisor 0011                                 __end_of___llmod 2C02  
                                         _T2CON 000FBA                                  __CFG_DEBUG$OFF 000000  
                               __end_of___lwdiv 2CAE                                 __end_of___lwmod 2D7E  
                                         i2l132 0026                                 ___awdiv@counter 0013  
                                         _RCREG 000FAE                                           _TMR0H 000FD7  
                                         _TX1IF 007CF4                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TXREG 000FAD  
              __size_of_ADC_GetConversionResult 0014               __size_of_TMR0_SetInterruptHandler 000A  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                       ?_TMR0_SetInterruptHandler 0009  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR0_ISR 2CF6                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flag1 00D2  
                                         _flag2 00D1                                           _flag3 00D0  
                                         _flag4 00CF                                           _flag5 0053  
                               __end_of_dpowers 0891                                           _scale 1176  
                               __end_of_isdigit 2F28                                           pclath 000FFA  
                                         tablat 000FF5                                           ttemp5 0058  
                                         ttemp6 005B                                           ttemp7 005F  
                                         status 000FD8                                  __CFG_T3CMX$RC0 000000  
                                         wtemp8 0058                                 __end_of_sprintf 1176  
                                __CFG_ICPRT$OFF 000000      __end_of_EUSART1_DefaultFramingErrorHandler 2FF4  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 2FF2  
                                __CFG_PBADEN$ON 000000                                 __initialization 2DB4  
                    __end_of_EUSART1_Initialize 2C5C                                    __end_of_main 2304  
                                __CFG_PCLKEN$ON 000000                         __end_of_TMR2_Initialize 2F9C  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 004E  
                                 __activetblptr 000002                            __size_of__tdiv_to_l_ 00FE  
                                __CFG_SDOMX$RB3 000000                                 __CFG_CCP2MX$RB3 000000  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                ___llmod@dividend 0016  
                                        _ACTCON 000FB5                                          ?_scale 0071  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _CCPR2H 000F91                                          _CCPR2L 000F90  
                              ___awdiv@dividend 000F                                          _ANSELA 000F5B  
                                        _ANSELB 000F5C                                          _ANSELC 000F5D  
                                        i2l3041 27FA                                          i2l3033 27DE  
                                        i2l3043 2802                                          i2l3035 27E2  
                                        i2l3045 2810                                          i2l3037 27EA  
                                        i2l3053 283A                                          i2l3047 281E  
                                        i2l3039 27F2                                          i2l3049 282C  
                                __CFG_WDTEN$OFF 000000                                          i2l3995 2902  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                __end_of___xxtofl 2444  
                                        _TXSTA1 000FAC                                  __CFG_XINST$OFF 000000  
                              __end_of__powers_ 0835                                          ___flge 2636  
                                        ___fleq 299C                                       ??___fladd 001D  
                                        ___wmul 2EA0                                       ??___fldiv 0035  
                                     ??___awdiv 0013                                       ??___flneg 000D  
                                __CFG_STVREN$ON 000000                                       ??___awmod 000D  
                                     ??___flmul 0060                                       ??___flsub 002D  
                                     ??___fltol 007E                                       ??___lldiv 0011  
                                     ??___llmod 001E                                       ??___lwdiv 0012  
                                     ??___lwmod 000D                        ?_EUSART1_SetErrorHandler 0009  
                              ?_TMR0_Initialize 0001                                ?_PWM2_Initialize 0001  
                                        _fround 1BB6                                          clear_0 2DBA  
                                        clear_1 2DC6                         __size_of_UARTSendString 0094  
                                        clear_2 2DD2                                ___awdiv@quotient 0015  
                               ___awmod@divisor 000B                                 ___awmod@counter 000D  
              ??_EUSART1_SetOverrunErrorHandler 000B                 ?_EUSART1_SetOverrunErrorHandler 0009  
                                     ??_isdigit 0009                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8        TMR0_SetInterruptHandler@InterruptHandler 0009  
                                     ??_sprintf 008C                                 _eusart1RxBuffer 00B9  
                 __size_of_INTERRUPT_Initialize 0004                                      ___flge@ff1 0009  
                                    ___flge@ff2 000D                            __CFG_LS48MHZ$SYS24X4 000000  
                                  ___xxtofl@arg 0017                                    ___xxtofl@exp 0016  
                             _SYSTEM_Initialize 2EC6                                    ___xxtofl@val 000D  
                                    ___fleq@ff1 0009                                      ___fleq@ff2 000D  
                                    __accesstop 0060                         __end_of__initialization 2DD8  
                                    ___flneg@f1 0009                              ?_SYSTEM_Initialize 0001  
                    __end_of_PWM2_LoadDutyValue 2E16                                   ___rparam_used 000001  
                                    ___fltol@f1 007A                  __size_of_EUSART1_RxDataHandler 00AC  
                 __end_of_EUSART1_RxDataHandler 286E                    __size_of_ADC_StartConversion 0004  
                                __pcstackCOMRAM 0001                                __CFG_nPWRTEN$OFF 000000  
                           ??_SYSTEM_Initialize 000B                                       ?_TMR0_ISR 0001  
                                 __end_of_scale 1556                                ?_TMR2_Initialize 0001  
                       _ADC_GetConversionResult 2F56                                      __div_to_l_ 2542  
                      UARTSendString@max_length 000C                     __end_of_EUSART1_Receive_ISR 2908  
                               __div_to_l_@exp1 0016                                 __div_to_l_@cntr 0015  
                                       ??_scale 004E                       __end_of_SYSTEM_Initialize 2EE8  
                               __div_to_l_@quot 0011                                   _eusart1RxHead 0052  
                                 _eusart1RxTail 0051                                      __pbssBANK0 00B1  
                                    __pbssBANK1 0100                 ??_EUSART1_SetRxInterruptHandler 000B  
                                    __pnvCOMRAM 0056                                   __div_to_l_@f1 0009  
                                 __div_to_l_@f2 000D                 __end_of_EUSART1_SetErrorHandler 2FDC  
                             __CFG_PLLSEL$PLL4X 000000                                         ?___flge 0009  
                                       ?___fleq 0009                __end_of_TMR0_SetInterruptHandler 2FB4  
                                       ?___wmul 0009                                      ??_TMR0_ISR 0001  
                                       _CCP2CON 000F97                                         ?_fround 0071  
                       __size_of_ADC_Initialize 0016          __end_of_EUSART1_SetFramingErrorHandler 2FD2  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2FC8  
                                     ?___xxtofl 000D                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                   ?_UARTSendChar 0001  
                                 ??_DHT11_Start 0009                               __end_of__npowers_ 0869  
                                       __Hparam 0000                                      _scale$2172 0075  
                                       __Lparam 0000                                 __size_of___flge 00D0  
                               __size_of___fleq 008A                                         ___fladd 18AA  
                                       ___fldiv 1E44                                         ___awdiv 2A26  
                                       ___flneg 2E16                                         ___awmod 2B2C  
                                       ___flmul 1556                                         ___flsub 2CF6  
                                       ___fltol 2706                                         ___lldiv 2AAA  
                               __size_of___wmul 0026                                         ___llmod 2B9C  
                                       ___lwdiv 2C5C                                         ___lwmod 2D3C  
                                  __psmallconst 0800                                  _UARTSendString 2908  
                     ??_ADC_GetConversionResult 000B                                         __pcinit 2DB4  
                               __size_of_fround 028E                                         __ramtop 0800  
                                       __ptext0 20CC                                         __ptext1 08CE  
                                       __ptext2 1176                                         __ptext3 2B2C  
                                       __ptext4 2A26                                         __ptext5 2F0A  
                                       __ptext6 1BB6                                         __ptext7 2D3C  
                                       __ptext8 2C5C                                         __ptext9 1556  
                                     _T0CONbits 000FD5                                     ?__div_to_l_ 0009  
                                       _dpowers 0869                           _OSCILLATOR_Initialize 2F6A  
                                     _T2CONbits 000FBA                                         _isdigit 2F0A  
                                    ??___xxtofl 0011                                ___awmod@dividend 0009  
                            _EUSART1_Initialize 2C02                        ??_PIN_MANAGER_Initialize 0009  
                 ??_EUSART1_DefaultErrorHandler 0005                      __size_of_SYSTEM_Initialize 0022  
                                       _sprintf 08CE                            end_of_initialization 2DD8  
                                ??_UARTSendChar 0009                             ?_EUSART1_Initialize 0001  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00D9  
                               ___lldiv@divisor 000D           __end_of_EUSART1_SetRxInterruptHandler 2FBE  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 2FB4  
                               ___lldiv@counter 0015                          __end_of_UARTSendString 299C  
                           __end_of_DHT11_Start 2EA0                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                                __tdiv_to_l_@f1 0009                                  __tdiv_to_l_@f2 000D  
                          ??_EUSART1_Initialize 000B                                   ??__tdiv_to_l_ 0011  
                      _TMR0_SetInterruptHandler 2FAA                                       _PORTBbits 000F81  
                       __size_of_DHT11_ReadData 0036                                     ___fladd@grs 0024  
                                 ___xxtofl@sign 0015                                       _TRISBbits 000F93  
                           _ADC_StartConversion 2FEC                                     ___fldiv@grs 0040  
                                   ___fldiv@rem 0039                __size_of_EUSART1_SetErrorHandler 000A  
                                   ___flmul@grs 0066                                       _TXSTAbits 000FAC  
                           __size_of__div_to_l_ 00F4            __size_of_EUSART1_DefaultErrorHandler 0006  
                            DHT11_ReadData@data 000A                            ?_ADC_StartConversion 0001  
                               ?_UARTSendString 000A                    __end_of_INTERRUPT_Initialize 2FEC  
                                __end_of___flge 2706                                  __end_of___fleq 2A26  
                                __end_of___wmul 2EC6                               __size_of_TMR0_ISR 0048  
                            _PWM2_LoadDutyValue 2DE6                                  _ADC_Initialize 2F40  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_fround 1E44  
                           start_initialization 2DB4                        __size_of_PWM2_Initialize 000E  
                      __size_of_TMR0_Initialize 0022                             ?_PWM2_LoadDutyValue 0001  
               __size_of_PIN_MANAGER_Initialize 002E                             __end_of__tdiv_to_l_ 2542  
 EUSART1_SetRxInterruptHandler@interruptHandler 0009                                 __CFG_nLPBOR$OFF 000000  
                               ___llmod@divisor 001A                                     _DHT11_Start 2E72  
                               ___llmod@counter 001E                           ??_ADC_StartConversion 0009  
                          ??_PWM2_LoadDutyValue 0003                                        ??___flge 0011  
                                      ??___fleq 0011                     PWM2_LoadDutyValue@dutyValue 0001  
                                      ??___wmul 000D                           _EUSART1_RxDataHandler 27C2  
                ?_EUSART1_SetRxInterruptHandler 0009                          __end_of_ADC_Initialize 2F56  
                                      ??_fround 004E                            __end_of_UARTSendChar 2F8C  
                                 sprintf@tmpval 0099                                  _eusart1RxCount 0050  
                                     ___fladd@a 0019                                       ___fladd@b 0015  
                                    fround@prec 007D                                       ___fldiv@a 0031  
                                     ___fldiv@b 002D                                       ___flmul@a 004A  
                                     ___flmul@b 0046                                     __pbssCOMRAM 004F  
                                     ___flsub@a 0029                                       ___flsub@b 0025  
             _EUSART1_RxDefaultInterruptHandler 00DF                                   __pcstackBANK0 0060  
                      __size_of_TMR2_Initialize 0010                               __size_of___xxtofl 0140  
                                  _isdigit$1902 000A                ??_EUSART1_SetFramingErrorHandler 000B  
               ?_EUSART1_SetFramingErrorHandler 0009                    __size_of_EUSART1_Receive_ISR 009A  
                                   sprintf@flag 0095                                     sprintf@eexp 0097  
                                   sprintf@fval 00A1                                     sprintf@prec 00A5  
                         _TMR0_InterruptHandler 00DD                                       __pnvBANK0 00D7  
                                     _main$2169 00AB                                ___lwdiv@dividend 000E  
                        _PIN_MANAGER_Initialize 2E44                                   UARTSendChar@c 0009  
                                     __pintcode 0008                               _ADC_SelectChannel 2F28  
                                      ?___fladd 0015                                        ?___fldiv 002D  
                                      ?___awdiv 000F                                        ?___flneg 0009  
                                      ?___awmod 0009                                        ?___flmul 0046  
                                      ?___flsub 0025                                        ?___fltol 007A  
                                      ?___lldiv 0009                                        ?___llmod 0016  
                                     __npowers_ 0835                                        ?___lwdiv 000E  
                                      ?___lwmod 0009                                 ?_ADC_Initialize 0001  
                            ?_ADC_SelectChannel 0001                    ??_INTERRUPT_InterruptManager 0005  
                                _DHT11_ReadData 2D7E                                     __tdiv_to_l_ 2444  
                                  ??__div_to_l_ 0011                                     __smallconst 0800  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 2FE2  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2FDC  
                                      ?_isdigit 0001                             ??_ADC_SelectChannel 0009  
                          _EUSART1_ErrorHandler 00D7                         _EUSART1_SetErrorHandler 2FD2  
                              ___lwdiv@quotient 0012                                        ?_sprintf 0084  
                                __size_of_scale 03E0                                       _dutyValue 00CD  
                          _INTERRUPT_Initialize 2FE8                               ??_TMR0_Initialize 000B  
                             ??_PWM2_Initialize 0009                                  ___wmul@product 000D  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 0009  
                                      _LATBbits 000F8A                                        _PIE1bits 000F9D  
                               UARTSendString@i 0010                       __end_of_ADC_SelectChannel 2F40  
           __size_of_INTERRUPT_InterruptManager 0056                      ??_TMR0_SetInterruptHandler 000B  
                                      _PIR1bits 000F9E                              __end_of__div_to_l_ 2636  
                                      i2u460_48 0034                                        i2u460_49 004A  
                                      i2u381_48 2896                                        i2u381_49 28AA  
                                      i2u383_48 28C2                                        i2u383_49 28D6  
                                      i2u377_40 2CDE                                        i2u376_48 2CC2  
                                      i2u376_49 2CD6                                        i2u377_46 2CE0  
                                      i2u385_48 28EC                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _TMR0_ISR 2CAE                          __end_of_DHT11_ReadData 2DB4  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0009  
                      ADC_SelectChannel@channel 000A                               __CFG_CFGPLLEN$OFF 000000  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0009                                ??_UARTSendString 000D  
                                      __Hrparam 0000                           __size_of_UARTSendChar 0010  
                                      __Lrparam 0000                        ?_ADC_GetConversionResult 0009  
                            __CFG_BOREN$SBORDIS 000000                         ??_OSCILLATOR_Initialize 0009  
                               ?_DHT11_ReadData 0001                                __size_of___fladd 030C  
                              __size_of___fldiv 0288                                __size_of___awdiv 0084  
                              __size_of___flneg 002E                                __size_of___awmod 0070  
                              __size_of___flmul 0354                                __size_of___flsub 0046  
                              __size_of___fltol 00BC                                __size_of___lldiv 0082  
                              __size_of___llmod 0066                     __size_of_EUSART1_Initialize 005A  
                              __size_of___lwdiv 0052                                __size_of___lwmod 0042  
                               DHT11_ReadData@i 0009                                     _fround$2170 0079  
                                   _fround$2171 0075                       ??_EUSART1_SetErrorHandler 000B  
           __end_of_EUSART1_DefaultErrorHandler 2FE8                     _EUSART1_DefaultErrorHandler 2FE2  
                                    sprintf@val 009D                                        ___xxtofl 2304  
                              __size_of_isdigit 001E                                 ___lwdiv@divisor 0010  
                               ___lwdiv@counter 0014                                        __ptext10 2444  
                                      __ptext11 2542                                        __ptext20 2636  
                                      __ptext12 2304                                        __ptext21 299C  
                                      __ptext13 2EA0                                        __ptext30 2E44  
                                      __ptext22 1E44                                        __ptext14 2B9C  
                                      __ptext31 2F6A                                        __ptext23 2908  
                                      __ptext15 2AAA                                        __ptext40 2D7E  
                                      __ptext32 2FE8                                        __ptext24 2F7C  
                                      __ptext16 2706                                        __ptext41 2FEC  
                                      __ptext33 2C02                                        __ptext25 2EC6  
                                      __ptext17 2CF6                                        __ptext50 2FE2  
                                      __ptext42 2F28                                        __ptext34 2FB4  
                                      __ptext26 2F8C                                        __ptext18 18AA  
                                      __ptext51 27C2                                        __ptext43 2F56  
                                      __ptext35 2FBE                                        __ptext27 2EE8  
                                      __ptext19 2E16                                        __ptext52 2DE6  
                                      __ptext36 2FC8                                        __ptext28 2FAA  
                                      __ptext53 0000                                        __ptext45 2CAE  
                                      __ptext37 2FD2                                        __ptext29 2F9C  
                                      __ptext46 2FF0                                        __ptext38 2F40  
                                      __ptext47 286E                                        __ptext39 2E72  
                                      __ptext48 2FDC                                        __ptext49 2FF2  
                                      __powers_ 0801                                __size_of_sprintf 08A8  
                                  _UARTSendChar 2F7C                                   __size_of_main 0238  
                                  ?_DHT11_Start 0001            __end_of_TMR0_DefaultInterruptHandler 2FF2  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 2FF0  
                    __size_of_ADC_SelectChannel 0018                                        _numWirte 0054  
EUSART1_SetOverrunErrorHandler@interruptHandler 0009                                        int$flags 0057  
            __end_of_INTERRUPT_InterruptManager 005E                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 00DB                             _EUSART1_Receive_ISR 286E  
                                      _writeEus 0055                                      _INTCONbits 000FF2  
                                      isdigit@c 000B                          ??_INTERRUPT_Initialize 0009  
                                      scale@scl 0079                               UARTSendString@str 000A  
                                      intlevel2 0000                                       sprintf@ap 0093  
                              __tdiv_to_l_@exp1 0019                                __tdiv_to_l_@cntr 0018  
                                     sprintf@sp 0084                                __tdiv_to_l_@quot 0014  
                          ?_EUSART1_Receive_ISR 0001                     __end_of_ADC_StartConversion 2FF0  
                              ___lwmod@dividend 0009                                ___lldiv@dividend 0009  
                       ?_PIN_MANAGER_Initialize 0001                 __end_of_ADC_GetConversionResult 2F6A  
        __end_of_EUSART1_SetOverrunErrorHandler 2FC8         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2FBE                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 0009                   ?_TMR0_DefaultInterruptHandler 0001  
                   __size_of_PWM2_LoadDutyValue 0030                                 main@RH_Integral 00AF  
                          __CFG_CPUDIV$NOCLKDIV 000000  EUSART1_SetFramingErrorHandler@interruptHandler 0009  
                            _eusart1RxLastError 004F                                    ?__tdiv_to_l_ 0009  
                                      sprintf@c 00A7                                        sprintf@f 0086  
                              ___lldiv@quotient 0011                                 ___lwmod@divisor 000B  
                               _TMR0_Initialize 2EE8                                 _PWM2_Initialize 2F9C  
                               ___lwmod@counter 000D                                   ___fladd@signs 0021  
                            __CFG_FOSC$INTOSCIO 000000                           ??_EUSART1_Receive_ISR 0005  
                __end_of_PIN_MANAGER_Initialize 2E72                                    ___fladd@aexp 0022  
                                  ___fladd@bexp 0023                         ??_EUSART1_RxDataHandler 0005  
